{"version":3,"sources":["../../base/utilities/_quirks.scss","../../components/_common/_igx-display-container.scss","../../components/_common/_igx-vhelper.scss","../../base/utilities/_bem.scss","../../components/icon/_icon-component.scss","../../components/radio/_radio-component.scss","../_core.scss","../../typography/_typography.scss","../../base/_variables.scss","../../typography/_base.scss","../../components/bottom-nav/_bottom-nav-theme.scss","../../components/button/_button-theme.scss","../../components/banner/_banner-theme.scss","../../components/calendar/_calendar-theme.scss","../../components/card/_card-theme.scss","../../components/checkbox/_checkbox-theme.scss","../../components/chip/_chip-theme.scss","../../components/column-hiding/_column-hiding-theme.scss","../../components/dialog/_dialog-theme.scss","../../components/drop-down/_drop-down-theme.scss","../../base/utilities/_mixins.scss","../../components/expansion-panel/_expansion-panel-theme.scss","../../components/grid/_excel-filtering-theme.scss","../../components/input/_input-group-theme.scss","../../components/navbar/_navbar-theme.scss","../../components/navdrawer/_navdrawer-theme.scss","../../components/list/_list-theme.scss","../../components/radio/_radio-theme.scss","../../components/snackbar/_snackbar-theme.scss","../../components/switch/_switch-theme.scss","../../components/tabs/_tabs-theme.scss","../../components/time-picker/_time-picker-theme.scss","../../components/toast/_toast-theme.scss","../../components/tooltip/_tooltip-theme.scss","../../print/_index.scss","../../print/_grid-print.scss","../../components/ripple/_ripple-theme.scss","../../components/avatar/_avatar-theme.scss","../../components/badge/_badge-theme.scss","../../components/button-group/_button-group-theme.scss","../../base/animations/entrances/_scale.scss","../../base/animations/exits/_scale.scss","../../components/carousel/_carousel-theme.scss","../../base/animations/generic/_scale.scss","../../components/combo/_combo-theme.scss","../../components/date-picker/_date-picker-theme.scss","../../components/divider/_divider-theme.scss","../../components/grid/_grid-theme.scss","../../components/grid-summary/_grid-summary-theme.scss","../../components/grid-toolbar/_grid-toolbar-theme.scss","../../components/icon/_icon-theme.scss","../../base/animations/_easings.scss","../_palettes.scss","../../components/overlay/_overlay-theme.scss","../../components/grid-paginator/_grid-paginator-theme.scss","../../base/animations/generic/_rotate.scss","../../components/progress/_progress-theme.scss","../../components/slider/_slider-theme.scss"],"names":[],"mappings":"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","file":"../igniteui-angular.css","sourcesContent":["// Angular hack for binding to [hidden] property\n// not working \n[hidden] {\n    display: none !important;\n}\n","﻿%display-container {\n    display: inherit;\n    position: relative;\n    width: 100%;\n    overflow: hidden;\n}\n\n%display-container--inactive {\n    width: 100%;\n}\n\n@include b(igx-display-container) {\n    @extend %display-container !optional;\n\n    @include m(inactive) {\n        @extend %display-container--inactive !optional;\n    }\n}\n","%vhelper-display {\n    display: block;\n    overflow: auto;\n    z-index: 10001;\n}\n\n%vhelper--vertical {\n    position: absolute;\n    width: 18px;\n    top: 0;\n    right: 0;\n}\n\n%vhelper--horizontal {\n    width: 100%;\n}\n\n%vhelper-content--vertical {\n    width: 1px;\n}\n\n%vhelper-content--horizontal {\n    height: 1px;\n}\n\n@include b(igx-vhelper) {\n    @include m(vertical) {\n        @extend %vhelper-display !optional;\n        @extend %vhelper--vertical !optional;\n\n        @include e(placeholder-content) {\n            @extend %vhelper-content--vertical !optional;\n        }\n    }\n\n    @include m(horizontal) {\n        @extend %vhelper-display !optional;\n        @extend %vhelper--horizontal !optional;\n\n        @include e(placeholder-content) {\n            @extend %vhelper-content--horizontal !optional;\n        }\n    }\n}\n","////\n/// @group bem\n/// @author <a href=\"https://github.com/runningskull\" target=\"_blank\">Juan Patten</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @type String - The Element separator used. Default '__'.\n$bem--sep-elem: if(variable-exists(bem--sep-elem), $bem--sep-elem, '__');\n/// @type String - The Modifier separator used. Default '--'.\n$bem--sep-mod: if(variable-exists(bem--sep-mod), $bem--sep-mod, '--');\n/// @type String - The Modifier Value separator used. Default '-'.\n$bem--sep-mod-val: if(variable-exists(bem--sep-mod-val), $bem--sep-mod-val, '-');\n\n/// Converts a passed selector value into plain string.\n/// @access private\n/// @param {String} $s - The selector to be converted.\n/// @returns {String}\n@function bem--selector-to-string($s) {\n    @if $s == null {\n        @return '';\n    }\n    //cast to string\n    $s: inspect($s);\n    @if str-index($s, '(') {\n        // ruby sass => \"(selector,)\"\n        @return str-slice($s, 2, -3);\n    } @else {\n        // libsass => \"selector\"\n        @return str-slice($s, 1, -1);\n    }\n}\n\n/// Prepends a dot to the passed BEM selector.\n/// @access private\n/// @param {String} $x - The BEM selector to prepend a dot to.\n/// @returns {String}\n/// @example scss - Returns\n///   .#{$x}\n@function bem--with-dot($x) {\n    $first: str-slice($x, 0, 1);\n    @return if($first=='.', $x, '.'+$x);\n}\n\n/// Converts a key-value map into a modifier string.\n/// @access private\n/// @param {List} $m - The modifier list to get converted.\n/// @returns {String}\n@function bem--mod-str($m) {\n    @if type-of($m) == 'map' {\n        $mm: nth($m, 1);\n        @return nth($mm, 1) + $bem--sep-mod-val + nth($mm, 2);\n    } @else {\n        @return $m;\n    }\n}\n\n/// Prefixes the block name to an element selector string,\n/// with the element separator string used as a divider.\n/// @access private\n/// @param {String} $b - The block name.\n/// @param {String} $e - The element name.\n/// @returns {String}\n/// @example scss - Returns\n///   .block__element\n@function bem--elem-str($b, $e) {\n    @return $b + $bem--sep-elem + $e;\n}\n\n/// Returns a block selector string affixed by the modifier selector,\n/// followed by the element selector string.\n/// @access private\n/// @param {String} $block - The block name.\n/// @param {String} $elem - The sub-element name.\n/// @param {String} $mod - The modifier name.\n/// @returns {String}\n/// @example scss - Returns\n///   .block--modifier .block__element\n@function bem--bem-str($block, $elem, $mod) {\n    $elem: if($elem, ' ' + $elem, '');\n    @return ($block + $bem--sep-mod + bem--mod-str($mod) + $elem);\n}\n\n/// Checks if the element separator string is part of the passed string.\n/// @access private\n/// @param {String} $x - The string to check.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the element separator name is not part of the passed string.\n@function bem--contains-elem($x) {\n    // if you set the separators to common strings, this could fail\n    @return str-index($x, $bem--sep-elem);\n}\n\n/// Checks if the modifier separator string is part of the passed string.\n/// @access private\n/// @param {String} $x - The string to check.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the modifier separator string is not part of the passed string.\n@function bem--contains-mod($x) {\n    // if you set the separators to common strings, this could fail\n    @return str-index($x, $bem--sep-mod);\n}\n\n/// Checks if the passed selector string contains a colon.\n/// @access private\n/// @param {String} $x - The string to check for colons.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the string does not contain any colons.\n@function bem--contains-pseudo($x) {\n    @return str-index($x, ':');\n}\n\n/// Returns the BEM block-name that generated `$x`. Does not include leading \".\".\n/// @access private\n/// @param {String} $x - The block name.\n@function bem--extract-block($x) {\n    @if bem--contains-mod($x) {\n        @return str-slice($x, 1, str-index($x, $bem--sep-mod)-1);\n    } @else if bem--contains-elem($x) {\n        @return str-slice($x, 1, str-index($x, $bem--sep-elem)-1);\n    } @else if bem--contains-pseudo($x) {\n        @return str-slice($x, 1, str-index($x, ':')-1);\n    }\n    @return $x;\n}\n\n/// Returns the first selector of a nested selector string.\n/// @access private\n/// @param {String} $x - The selector to search for.\n/// @returns {String}\n@function bem--extract-first-selector($x) {\n    $eow: str-index($x, ' ') or -1;\n    @return str-slice($x, 1, $eow);\n}\n\n/// Generates a full BEM selector.\n/// @access public\n/// @param {String} $block - Required. A string block name.\n/// @param {String|List} $elem - Optional. A sub-element name. If `$mod` is not present, it is\n/// joined with $block. If $mod is present, it is nested under `$block--$mod`.\n/// @param {String|Map} $mod - Optional. A block modifier.\n/// @example scss Include a block\n///   @include bem-selector(block); // outputs .block\n/// @example scss Include a block and an element\n///   @include bem-selector(block, $e:elem); // outputs .block__elem\n/// @example scss Include block, element, and element modifier\n///   @include bem-selector(block, $e:(elem,emod); // outputs .block__elem-emod\n/// @example scss Include block and block modifier\n///   @include bem-selector(block, $m:mod) // outputs .block--mod\n/// @example scss Include block and modifier value\n///   @include bem-selector(block, $m:(mod:val)); // outputs .block--mod-val\n/// @example scss Include block modifier followed by block sub-element\n///   @include bem-selector(block, $m:mod, $e:elem); // outputs .block--mod .block__elem\n@function bem-selector($block, $e: null, $elem: null, $m: null, $mod: null, $mods: null) {\n    $block: bem--with-dot($block);\n    $elem: $e or $elem;\n    // Return early if possible\n    $mods: $m or $mod or $mods;\n    @if not ($elem or $mods) {\n        @return $block;\n    }\n    @if $elem {\n        // User passed an element-specific modifier\n        @if (type-of($elem) == list) and nth($elem, 2) {\n            // For now we don't support multiple elem-mods at once\n            @if type-of(nth($elem, 2)) == list {\n                @error 'Only one element-modifier allowed.';\n            }\n            $elem: str-slice(bem-selector(nth($elem, 1), $m: nth($elem, 2)), 2);\n        }\n        $elem: bem--elem-str($block, $elem);\n    }\n    @if not $mods {\n        @return bem--with-dot($elem);\n    }\n    @if type-of($mods) != list {\n        $mods: ($mods, );\n    }\n    $bemcls: '';\n    @for $i from 1 to length($mods) {\n        $bemcls: $bemcls + bem--bem-str($block, $elem, nth($mods, $i)) + ', ';\n    }\n    $bemcls: $bemcls + bem--bem-str($block, $elem, nth($mods, -1));\n    @return $bemcls;\n}\n\n/// Simply unrolls into a class-selector. The main purpose of using this mixin\n/// is to clearly denote the start of a BEM block.\n/// @access public\n/// @param {String} $block - The block name.\n@mixin bem-block($block) {\n    @at-root {\n        #{bem-selector($block)} {\n            @content;\n        }\n    }\n}\n\n/// Unrolls into a proper BEM element selector, depending on the context.\n/// Inside just a block, yields a root-level `.block__elem`.\n/// Inside a mod or pseudo-selector, yields a nested `.block--mod .block__elem`.\n/// If $mod is included, it is appended to the block selector. Multiple\n/// $mods are not supported.\n/// @access public\n/// @param {String} $elem - The sub-element name.\n/// @param {String} $m - The modifier name.\n/// @param {String} $mod - An alias of `$m`.\n@mixin bem-elem($elem, $m: null, $mod: null, $mods: null) {\n    $this: bem--selector-to-string(&);\n    $block: bem--extract-block($this);\n    $first: bem--extract-first-selector($this);\n    $nested: bem--contains-pseudo($this) or bem--contains-mod($this);\n\n    $mod: $m or $mod;\n    $mx: ();\n\n    @if $this == '' {\n        @error 'Detected an Element that is not inside a Block: #{$elem}';\n    }\n\n    @if bem--contains-elem($this) {\n        @error 'Detected a multi-level nested Element (#{$this} #{$elem})! Bemerald doesn\\'t support nested ' + 'elements because they do not have BEM nature (www.getbem.com/faq/#css-nested-elements). ' + 'If you must do it, use a hardcoded selector like &__subsubelem ';\n    }\n\n    @if $mods != null and type-of($mods) == 'list' {\n        @each $i in $mods {\n            $mx: append($mx, #{bem-selector($block, $e: ($elem, $i))})\n        }\n    }\n\n    @if not($nested) {\n        // Normal case, no pseudo-selector present or mod, so no nesting.\n        // .block__elem { ... }\n        @at-root {\n            @if $mods == null {\n                #{bem-selector($block, $e: ($elem, $mod))} {\n                    @content;\n                }\n            } @else {\n                #{selector-append($mx...)} {\n                    @content;\n                }\n            }\n        }\n    } @else {\n        // pseudo-element or mod present, so we have nesting.\n        // .block:active .block__elem { ... }\n        // .block--mod .block__elem { ... }\n        @at-root {\n            $selector: $first + ' ' + bem-selector($block, $e: ($elem, $mod));\n\n            @if $mods == null {\n                #{$selector} {\n                    @content;\n                }\n            } @else {\n                #{$first} #{selector-append($mx...)} {\n                    @content;\n                }\n            }\n        }\n    }\n}\n\n/// Unrolls into a BEM block-modifier selector.\n/// This mixin does not generate element-modifiers, the bem-elem mixin instead.\n/// Nesting bem-mod inside a pseudo-selector is not supported, because what\n/// that should mean isn't clear.\n/// @access public\n/// @param {String} $mod - The modifier name.\n@mixin bem-mod($mod) {\n    $skip: false;\n    $this: bem--selector-to-string(&);\n    @if $this == '' {\n        @error 'Detected a Modifier that is not inside a Block: ' + $mod;\n    }\n    @if (bem--contains-elem($this)) {\n        @error 'Nesting a Modifier inside an Element (#{$this} #{$mod}) ' + 'is not supported. Instead, use bem-elem(myelem, elem-mod) syntax.';\n    }\n    @if (bem--contains-pseudo($this)) {\n        @error 'Nesting a Modifier inside a pseudo-selector is not supported: #{$this} #{$mod}';\n    }\n    @at-root {\n        #{bem-selector($this, $m: $mod)} {\n            @content;\n        }\n    }\n}\n\n/// Unrolls into a block--modifier.[block--modifier...] .block__el\n/// This mixin is useful when we want to apply classes to a block,\n/// or block element when two or more modifiers are applied in tandem\n/// @access public\n/// @param {List} $mods - A list of modifiers\n@mixin bem-mods($mods...) {\n    $this: bem--selector-to-string(&);\n    $mod-classes: ();\n    @each $mod in $mods {\n        @if $this == '' {\n            @error 'Detected a Modifier that is not inside a Block: ' + $mod;\n        }\n        @if (bem--contains-elem($this)) {\n            @error 'Nesting a Modifier inside an Element (#{$this} #{$mod}) ' + 'is not supported. Instead, use bem-elem(myelem, elem-mod) syntax.';\n        }\n        @if (bem--contains-pseudo($this)) {\n            @error 'Nesting a Modifier inside a pseudo-selector is not supported: #{$this} #{$mod}';\n        }\n        $mod-classes: append($mod-classes, #{bem-selector($block: $this, $m: $mod)})\n    }\n    @at-root {\n        #{selector-append($mod-classes...)} {\n            @content;\n        }\n    }\n}\n\n/// @alias bem-selector\n@mixin bem($block, $e: null, $elem: null, $m: null, $mod: null, $mods: null) {\n    #{bem-selector($block, $e: $e, $elem: $elem, $m: $m, $mod: $mod, $mods: $mods)} {\n        @content;\n    }\n}\n\n/// @alias bem-block\n@mixin block($block) {\n    @include bem-block($block) {\n        @content;\n    }\n}\n\n/// @alias bem-elem\n@mixin elem($elem, $m: null, $mod: null, $mods: null) {\n    @include bem-elem($elem, $m: $m, $mod: $mod, $mods: $mods) {\n        @content;\n    }\n}\n\n/// @alias bem-mod\n@mixin mod($mod) {\n    @include bem-mod($mod) {\n        @content;\n    }\n}\n\n/// @alias bem-mods\n@mixin mods($mods...) {\n    @include bem-mods($mods...) {\n        @content;\n    }\n}\n\n/// @alias bem-block\n@mixin b($block) {\n    @include bem-block($block) {\n        @content;\n    }\n}\n\n/// @alias bem-elem\n@mixin e($elem, $m: null, $mod: null, $mods: null) {\n    @include bem-elem($elem, $m: $m, $mod: $mod, $mods: $mods) {\n        @content;\n    }\n}\n\n/// @alias bem-mod\n@mixin m($mod) {\n    @include bem-mod($mod) {\n        @content;\n    }\n}\n\n/// @alias bem-mods\n@mixin mx($mods...) {\n    @include bem-mods($mods...) {\n        @content;\n    }\n}\n","//// Icon\n/// @group components\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @requires {mixin} bem-block\n/// @requires {mixin} bem-elem\n/// @requires {mixin} bem-mod\n////\n@include b(igx-icon) {\n    $this: bem--selector-to-string(&);\n    @include register-component(str-slice($this, 2, -1));\n\n    @extend %igx-icon-display !optional;\n\n    @include m(inactive) {\n        @extend %igx-icon-display !optional;\n        @extend %igx-icon--inactive !optional;\n    }\n}\n\n@include b(igx-svg-container) {\n    visibility: hidden;\n    width: 0;\n    height: 0;\n    font-size: 0;\n    overflow: hidden;\n}\n","////\n/// @group components\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @requires {mixin} bem-block\n/// @requires {mixin} bem-elem\n/// @requires {mixin} bem-mod\n////\n@include b(igx-radio) {\n    $block: bem--selector-to-string(&);\n    @include register-component(igx-radio);\n\n    @extend %radio-display !optional;\n\n    &:hover {\n        @include e(ripple) {\n            @extend %radio-ripple--hover !optional;\n            @extend %radio-ripple--hover-unchecked !optional;\n        }\n    }\n\n    &:active {\n        @include e(ripple) {\n            @extend %radio-ripple--hover !optional;\n            @extend %radio-ripple--hover-unchecked !optional;\n            @extend %radio-ripple--pressed !optional;\n        }\n    }\n\n    @include e(input) {\n        @extend %radio-input !optional;\n    }\n\n    @include e(composite) {\n        @extend %radio-composite !optional;\n    }\n\n    @include e(label) {\n        @extend %radio-label !optional;\n        @extend %radio-label--after !optional;\n    }\n\n    @include e(label, $m: before) {\n        @extend %radio-label !optional;\n        @extend %radio-label--before !optional;\n    }\n\n    @include e(ripple) {\n        @extend %radio-ripple !optional;\n    }\n\n    @include m(focused) {\n        @include e(ripple) {\n            @extend %radio-ripple--focused !optional;\n        }\n    }\n\n    @include m(checked) {\n        @include e(composite) {\n            @extend %radio-composite--x !optional;\n        }\n\n        &:hover {\n            @include e(ripple) {\n                @extend %radio-ripple--hover !optional;\n                @extend %radio-ripple--hover-checked !optional;\n            }\n        }\n\n        &:active {\n            @include e(ripple) {\n                @extend %radio-ripple--hover !optional;\n                @extend %radio-ripple--hover-checked !optional;\n                @extend %radio-ripple--pressed !optional;\n            }\n        }\n    }\n\n    @include m(disabled) {\n        @extend %radio-display--disabled !optional;\n\n        @include e(composite) {\n            @extend %radio-composite--disabled !optional;\n        }\n    }\n\n    @include mx(focused, checked) {\n        @include e(ripple) {\n            @extend %radio-ripple--focused !optional;\n            @extend %radio-ripple--focused-checked !optional;\n        }\n    }\n\n    @include mx(checked, disabled) {\n        @include e(composite) {\n            @extend %radio-composite--x--disabled !optional;\n        }\n    }\n}\n\n@include b(igx-radio-group) {\n    display: block;\n}\n","////\n/// @group themes\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n// Anything imported here shouldn't affect\n// theme configuration\n\n// Import utilities\n@import './utilities';\n\n\n// Common component modules\n@import '../components/_common/igx-control';\n@import '../components/_common/igx-display-container';\n@import '../components/_common/igx-vhelper';\n\n// Ensure the ripple is loaded before other component themes\n@import '../components/ripple/ripple-component';\n\n// Component composition styles\n@import '../components/avatar/avatar-component';\n@import '../components/badge/badge-component';\n@import '../components/bottom-nav/bottom-nav-component';\n@import '../components/button/button-component';\n@import '../components/divider/divider-component';\n@import '../components/button-group/button-group-component';\n@import '../components/banner/banner-component';\n@import '../components/calendar/calendar-component';\n@import '../components/card/card-component';\n@import '../components/carousel/carousel-component';\n@import '../components/checkbox/checkbox-component';\n@import '../components/chip/chip-component';\n@import '../components/column-hiding/column-hiding-component';\n@import '../components/combo/combo-component';\n@import '../components/date-picker/date-picker-component';\n@import '../components/dialog/dialog-component';\n@import '../components/drop-down/drop-down-component';\n@import '../components/expansion-panel/expansion-panel-component';\n@import '../components/grid/grid-component';\n@import '../components/grid-summary/grid-summary-component';\n@import '../components/grid-paginator/grid-paginator-component';\n@import '../components/grid-toolbar/grid-toolbar-component';\n@import '../components/icon/icon-component';\n@import '../components/input/input-group-component';\n@import '../components/list/list-component';\n@import '../components/navbar/navbar-component';\n@import '../components/navdrawer/navdrawer-component';\n@import '../components/overlay/overlay-component';\n@import '../components/progress/progress-component';\n@import '../components/radio/radio-component';\n@import '../components/slider/slider-component';\n@import '../components/snackbar/snackbar-component';\n@import '../components/switch/switch-component';\n@import '../components/tabs/tabs-component';\n@import '../components/toast/toast-component';\n@import '../components/tooltip/tooltip-component';\n@import '../components/time-picker/time-picker-component';\n@import '../print/index';\n\n/// Includes the base for each theme.\n\n[class^='igx-'] {\n    &,\n    *,\n    *::before,\n    *::after {\n        box-sizing: border-box;\n    }\n}\n\n@mixin igx-core($print-layout:true) {\n    @include igx-typography();\n\n    @if $print-layout == true {\n        @include igx-print-layout();\n    }\n}\n","////\n/// @group typography\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n// Import the typography mixins from component themes\n// with typography support.\n@import '../components/bottom-nav/bottom-nav-theme';\n@import '../components/button/button-theme';\n@import '../components/calendar/calendar-theme';\n@import '../components/card/card-theme';\n@import '../components/checkbox/checkbox-theme';\n@import '../components/chip/chip-theme';\n@import '../components/column-hiding/column-hiding-theme';\n@import '../components/dialog/dialog-theme';\n@import '../components/drop-down/drop-down-theme';\n@import '../components/expansion-panel/expansion-panel-theme';\n@import '../components/grid/excel-filtering-theme';\n@import '../components/input/input-group-theme';\n@import '../components/navbar/navbar-theme';\n@import '../components/navdrawer/navdrawer-theme';\n@import '../components/list/list-theme';\n@import '../components/radio/radio-theme';\n@import '../components/snackbar/snackbar-theme';\n@import '../components/switch/switch-theme';\n@import '../components/tabs/tabs-theme';\n@import '../components/time-picker/time-picker-theme';\n@import '../components/toast/toast-theme';\n@import '../components/tooltip/tooltip-theme';\n\n/// Adds typography styles for h1-h6, paragraph and creates\n/// custom typography class selectors. The produces styles\n/// are based on the passed type scale. If omitted the\n/// default-type-scale will be used.\n/// @param {String} $font-family [\"'Titillium Web', sans-serif\"] - The font family to be used across all typographic elements.\n/// @param {Map} $type-scale [$default-type-scale] - A type scale map as produced by igx-type-scale.\n/// @param {String} $base-color [rgba(0, 0, 0, .74)] - The default color used across all typographic elements (Components define their own text colors).\n@mixin igx-typography(\n    $font-family: \"'Titillium Web', sans-serif\",\n    $type-scale: $default-type-scale,\n    $base-color: $igx-foreground-color\n) {\n    // Maps type scale typographic categories\n    // to native elements.\n    $category-element-map: (\n        h1: 'h1',\n        h2: 'h2',\n        h3: 'h3',\n        h4: 'h4',\n        h5: 'h5',\n        h6: 'h6',\n        body-1: 'p'\n    );\n\n    // Use the BEM notation to create a link\n    // between the igx-typography class selector\n    // and all typographic elements.\n    @include b(igx-typography) {\n        font-family: unquote($font-family);\n        font-size: $browser-context;\n        line-height: $browser-line-height;\n        color: $base-color;\n        font-size-adjust: 100%;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n\n        @each $category, $type-style in $type-scale {\n            // Get the native element that uses typographic styles directly\n            // as mapped in the $category-element-map\n            $e: map-get($category-element-map, $category);\n\n            // Create a placeholder selector with styles for each\n            // typographic style to be able to easily extend it\n            // elsewhere.\n            %#{$category} {\n                @include igx-type-style($type-scale, $category);\n            }\n\n            // Add native element typographic styles.\n            @if $e != null {\n                #{$e} {\n                    @extend %#{$category};\n                }\n            }\n\n            // Add class selector typographic styles.\n            @include e(#{$category}) {\n                $selector: bem--selector-to-string(&);\n\n                @extend %#{$category};\n            }\n        }\n    }\n\n    // Call the individual component styles with the type scale\n    @include igx-bottom-nav-typography($type-scale);\n    @include igx-button-typography($type-scale);\n    @include igx-banner-typography($type-scale);\n    @include igx-calendar-typography($type-scale);\n    @include igx-card-typography($type-scale);\n    @include igx-checkbox-typography($type-scale);\n    @include igx-chip-typography($type-scale);\n    @include igx-column-hiding-typography($type-scale);\n    @include igx-dialog-typography($type-scale);\n    @include igx-drop-down-typography($type-scale);\n    @include igx-expansion-panel-typography($type-scale);\n    @include _excel-filtering-typography($type-scale);\n    @include igx-input-group-typography($type-scale);\n    @include igx-navbar-typography($type-scale);\n    @include igx-navdrawer-typography($type-scale);\n    @include igx-list-typography($type-scale);\n    @include igx-radio-typography($type-scale);\n    @include igx-snackbar-typography($type-scale);\n    @include igx-switch-typography($type-scale);\n    @include igx-tabs-typography($type-scale);\n    @include igx-time-picker-typography($type-scale);\n    @include igx-toast-typography($type-scale);\n    @include igx-tooltip-typography($type-scale);\n}\n","////\n/// @group base\n/// @access private\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// The default font size used globally.\n/// @type String\n$browser-context: 16px !default;\n\n/// The default line height used globally.\n/// @type String\n$browser-line-height: 27px !default;\n\n/// The global keyframes registry map.\n/// @type List\n$keyframes: () !default;\n\n/// The global component registry map.\n/// @type List\n$components: () !default;\n\n/// The global themes registry map.\n$themes: () !default;\n\n/// The global background color.\n$igx-background-color: #fff !default;\n$igx-foreground-color: rgba(0, 0, 0, .87) !default;\n","////\n/// @group typography\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// In interface-like type style map.\n/// @access public\n/// @param {String} $font-family [null] - The font size of the type style.\n/// @param {String} $font-size [null] - The font size of the type style.\n/// @param {Number|String} $font-weight [null] - The font weight of the type style.\n/// @param {Number|string} $line-height [null] - The line height of the type style.\n/// @param {Number|String} $letter-spacing [null] - The letter spacing of the type style.\n/// @param {String} $text-transform [null] - The text-transform property of the type style.\n/// @returns {Map} - A map of all defined type style properties.\n@function igx-type-style(\n    $font-family: null,\n    $font-size: null,\n    $font-weight: null,\n    $line-height: null,\n    $letter-spacing: null,\n    $text-transform: null,\n    $margin-top: null,\n    $margin-bottom: null,\n) {\n    @return (\n        font-family: $font-family,\n        font-weight: $font-weight,\n        font-size: $font-size,\n        letter-spacing: $letter-spacing,\n        text-transform: $text-transform,\n        line-height: $line-height,\n        margin-top: $margin-top,\n        margin-bottom: $margin-bottom,\n    );\n}\n\n/// Creates a type scale map containing type style definitions for:\n/// - h1\n/// - h2\n/// - h3\n/// - h4\n/// - h5\n/// - h6\n/// - subtitle-1\n/// - subtitle-2\n/// - body-1\n/// - body-2\n/// - button\n/// - caption\n/// - overline\n/// @access public\n/// @param {Map} $h1 [null] - A map containing type style properties as produced by the igx-type-style function. This type scale styles h1 elements and elements with `igx-font-h1` class.\n/// @param {Map} $h2 [null] - A map containing type style properties as produced by the igx-type-style function. This type scale styles h2 elements and elements with `igx-font-h2` class.\n/// @param {Map} $h3 [null] - A map containing type style properties as produced by the igx-type-style function. This type scale styles h3 elements and elements with `igx-font-h3` class.\n/// @param {Map} $h4 [null] - A map containing type style properties as produced by the igx-type-style function. This type scale styles h4 elements and elements with `igx-font-h4` class.\n/// @param {Map} $h5 [null] - A map containing type style properties as produced by the igx-type-style function. This type scale styles h5 elements and elements with `igx-font-h5` class.\n/// @param {Map} $h6 [null] - A map containing type style properties as produced by the igx-type-style function. This type scale styles h6 elements and elements with `igx-font-h6` class.\n/// @param {Map} $subtitle-1 [null] - A map containing type style properties as produces by the igx-type-style function. This type scale styles elements with `igx-font-subtitle-1` class.\n/// @param {Map} $subtitle-2 [null] - A map containing type style properties as produces by the igx-type-style function. This type scale styles elements with `igx-font-subtitle-2` class.\n/// @param {Map} $body-1 [null] - A map containing type style properties as produces by the igx-type-style function. This type scale styles elements with `igx-font-body-1` class.\n/// @param {Map} $body-2 [null] - A map containing type style properties as produces by the igx-type-style function. This type scale styles elements with `igx-font-body-2` class.\n/// @param {Map} $button [null] - A map containing type style properties as produces by the igx-type-style function. This type scale styles elements with `igx-button` class.\n/// @param {Map} $caption [null] - A map containing type style properties as produces by the igx-type-style function. This type scale styles elements with `igx-font-caption` class.\n/// @param {Map} $overline [null] - A map containing type style properties as produces by the igx-type-style function. This type scale styles elements with `igx-font-overline` class.\n/// @requires igx-type-style\n/// @returns {Map} - A map of all defined type scales.\n@function igx-type-scale(\n    $h1: (),\n    $h2: (),\n    $h3: (),\n    $h4: (),\n    $h5: (),\n    $h6: (),\n    $subtitle-1: (),\n    $subtitle-2: (),\n    $body-1: (),\n    $body-2: (),\n    $button: (),\n    $caption: (),\n    $overline: ()\n) {\n    $default-scale: (\n        h1: igx-type-style(\n            $font-size: rem(96px),\n            $font-weight: 300,\n            $letter-spacing: rem(-1.5px),\n            $line-height: rem(112px),\n            $text-transform: none,\n            $margin-top: rem(28px),\n            $margin-bottom: rem(56px),\n        ),\n        h2: igx-type-style(\n            $font-size: rem(60px),\n            $font-weight: 300,\n            $letter-spacing: rem(-.5px),\n            $line-height: rem(71px),\n            $text-transform: none,\n            $margin-top: rem(28px),\n            $margin-bottom: rem(28px),\n        ),\n        h3: igx-type-style(\n            $font-size: rem(48px),\n            $font-weight: 400,\n            $letter-spacing: 0,\n            $line-height: rem(57px),\n            $text-transform: none,\n            $margin-top: rem(28px),\n            $margin-bottom: 0,\n        ),\n        h4: igx-type-style(\n            $font-size: rem(34px),\n            $font-weight: 400,\n            $letter-spacing: rem(.25px),\n            $line-height: rem(40px),\n            $text-transform: none,\n            $margin-top: rem(28px),\n            $margin-bottom: 0,\n        ),\n        h5: igx-type-style(\n            $font-size: rem(24px),\n            $font-weight: 400,\n            $letter-spacing: 0,\n            $line-height: rem(28px),\n            $text-transform: none,\n            $margin-top: rem(28px),\n            $margin-bottom: 0,\n        ),\n        h6: igx-type-style(\n            $font-size: rem(20px),\n            $font-weight: 600,\n            $letter-spacing: rem(.15px),\n            $line-height: rem(24px),\n            $text-transform: none,\n            $margin-top: 0,\n            $margin-bottom: 0,\n        ),\n        subtitle-1: igx-type-style(\n            $font-size: rem(16px),\n            $font-weight: 400,\n            $letter-spacing: rem(.15px),\n            $line-height: rem(24px),\n            $text-transform: none\n        ),\n        subtitle-2: igx-type-style(\n            $font-size: rem(14px),\n            $letter-spacing: rem(.1px),\n            $font-weight: 600,\n            $line-height: rem(24px),\n            $text-transform: none\n        ),\n        body-1: igx-type-style(\n            $font-size: rem(16px),\n            $font-weight: 400,\n            $letter-spacing: rem(.5px),\n            $line-height: rem(28px),\n            $text-transform: none,\n            $margin-top: rem(28px),\n            $margin-bottom: rem(16),\n        ),\n        body-2: igx-type-style(\n            $font-size: rem(14px),\n            $font-weight: 400,\n            $letter-spacing: rem(.25px),\n            $line-height: rem(20px),\n            $text-transform: none,\n        ),\n        button: igx-type-style(\n            $font-size: rem(14px),\n            $font-weight: 600,\n            $letter-spacing: rem(.75px),\n            $line-height: rem(16px),\n            $text-transform: uppercase,\n        ),\n        caption: igx-type-style(\n            $font-size: rem(12px),\n            $font-weight: 400,\n            $letter-spacing: rem(.4px),\n            $line-height: rem(16px),\n            $text-transform: none,\n        ),\n        overline: igx-type-style(\n            $font-size: rem(10px),\n            $font-weight: 400,\n            $letter-spacing: rem(1.5px),\n            $line-height: rem(16px),\n            $text-transform: uppercase,\n        )\n    );\n\n    @return (\n        h1: extend(map-get($default-scale, 'h1'), $h1),\n        h2: extend(map-get($default-scale, 'h2'), $h2),\n        h3: extend(map-get($default-scale, 'h3'), $h3),\n        h4: extend(map-get($default-scale, 'h4'), $h4),\n        h5: extend(map-get($default-scale, 'h5'), $h5),\n        h6: extend(map-get($default-scale, 'h6'), $h6),\n        subtitle-1: extend(map-get($default-scale, 'subtitle-1'), $subtitle-1),\n        subtitle-2: extend(map-get($default-scale, 'subtitle-2'), $subtitle-2),\n        body-1: extend(map-get($default-scale, 'body-1'), $body-1),\n        body-2: extend(map-get($default-scale, 'body-2'), $body-2),\n        button: extend(map-get($default-scale, 'button'), $button),\n        caption: extend(map-get($default-scale, 'caption'), $caption),\n        overline: extend(map-get($default-scale, 'overline'), $overline)\n    );\n}\n\n/// Get type scale category config.\n/// @param {Map} $scale - A type scale map reference as produces by igx-type-scale.\n/// @param {String} $category - The scale category you want config for. For instance - 'h1';\n/// @example scss Get the type scale category config for the `h1` scale.\n///   $h1-type-scale: igx-type-scale-category($default-type-scale, 'h1');\n/// @returns {Map} - The config map for the selected category in the type scale.\n@function igx-type-scale-category($scale, $category) {\n    @return map-get($scale, $category);\n}\n\n/// Assigns type scale category config properties\n/// as style rules wherever this mixin is included.\n/// @param {Map} $scale - A type scale map reference as produces by igx-type-scale.\n/// @param {String} $category - The type scale category config you want to use as CSS style rules.\n/// @example scss Add the `h1` styles to custom CSS selector.\n///   .fancy-h1 {\n///      @include igx-type-style($default-type-scale, 'h1');\n///      font-family: 'GT Walsheim';\n///      color: mediumvioletred;\n///   }\n@mixin igx-type-style($scale, $category) {\n    $type-category: map-get($scale, $category);\n    @each $key, $value in $type-category {\n        #{$key}: #{$value};\n    }\n    @content;\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified,\n/// the idle item color will be assigned automatically to a contrasting color.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n/// @param {Color} $background [null] - The background color used for the toast.\n/// @param {Color} $idle-item-color [null] - The text-color used for the idle color.\n/// @param {Color} $active-item-color [null] - The text-color used for the active color.\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the bar.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires $elevations\n///\n/// @example scss Set a custom background color\n///   $my-tabbar-theme: igx-toast-theme($background: black);\n///   // Pass the theme to the igx-bottom-nav component mixin\n///   @include igx-bottom-nav($my-tabbar-theme);\n@function igx-bottom-nav-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $elevations: $elevations,\n\n    $background: null,\n    $idle-item-color: null,\n    $active-item-color: null,\n    $shadow: null,\n) {\n    $name: 'igx-bottom-nav';\n    $bottom-nav-schema: map-get($schema, $name);\n\n    $theme: apply-palette($bottom-nav-schema, $palette);\n\n    @if not($idle-item-color) and $background {\n        @if type-of($background) == 'color' {\n            $idle-item-color: rgba(text-contrast($background), .7);\n        }\n    }\n\n    @if not($shadow) {\n        $elevation: map-get($bottom-nav-schema, 'elevation');\n        $shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        background: $background,\n        idle-item-color: $idle-item-color,\n        active-item-color: $active-item-color,\n        shadow: $shadow\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires {mixin} ellipsis\n/// @requires igx-bottom-nav-theme\n/// @requires igx-color\n/// @requires extend\n/// @requires rem\n/// @requires $ease-in-out-quad\n/// @requires --var\n@mixin igx-bottom-nav($theme) {\n    @include igx-root-css-vars($theme);\n\n    // @debug $theme;\n\n    $menu-height: 56px;\n    $item-min-width: 80px;\n    $item-max-width: 168px;\n    $item-padding: 0 rem(12px, 16px);\n\n    %igx-tab-panel {\n        display: none;\n    }\n\n    %igx-tab-panel--selected {\n        display: block;\n    }\n\n    %igx-bottom-nav-menu {\n        display: flex;\n        position: fixed;\n        justify-content: center;\n        align-items: center;\n        left: 0;\n        right: 0;\n        height: $menu-height;\n        background: --var($theme, 'background');\n        overflow: hidden;\n        z-index: 8;\n    }\n\n    %igx-bottom-nav-menu--top {\n        top: 0;\n        bottom: inherit;\n        box-shadow: --var($theme, 'shadow');\n    }\n\n    %igx-bottom-nav-menu--bottom {\n        top: inherit;\n        bottom: 0;\n        box-shadow: --var($theme, 'shadow');\n    }\n\n    %igx-bottom-nav-menu-item {\n        display: flex;\n        position: relative;\n        flex-flow: column nowrap;\n        flex: 1;\n        align-items: center;\n        justify-content: center;\n        min-width: $item-min-width;\n        max-width: $item-max-width;\n        height: 100%;\n        color: --var($theme, 'idle-item-color');\n        cursor: pointer;\n        user-select: none;\n        overflow: hidden;\n        padding: $item-padding;\n        -webkit-tap-highlight-color: transparent;\n        outline: 0;\n    }\n\n    %igx-bottom-nav-menu-item--disabled {\n        opacity: .5;\n        cursor: default;\n    }\n\n    %igx-active-tab {\n        color: --var($theme, 'active-item-color');\n        transition: color .15s $ease-in-out-quad, opacity .25s $ease-in-out-quad;\n    }\n\n    %igx-tab-label {\n        @include ellipsis();\n        padding-top: 4px;\n        max-width: 100%;\n        text-align: center;\n        transform: translateZ(0);\n        transition: transform .15s $ease-in-out-quad;\n        z-index: 1;\n    }\n\n    %igx-tab-icon {\n        display: flex;\n        position: relative;\n        justify-content: center;\n        height: 24px;\n        padding: 0 8px;\n        transform: translateZ(0);\n        transition: transform .15s $ease-in-out-quad;\n        z-index: 1;\n\n        igx-badge {\n            position: absolute;\n            top: -6px;\n            right: -6px;\n            padding: 1px;\n        }\n    }\n\n    %igx-tab-icon--selected {\n        @extend %igx-active-tab;\n        transform: translateY(-2px);\n    }\n\n    %igx-tab-label--selected {\n        @extend %igx-active-tab;\n        transform: translateY(-2px) scale(1.166667);\n    }\n}\n\n/// Adds typography styles for the igx-bottom-nav component.\n/// Uses the 'caption'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'caption')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-bottom-nav-typography($type-scale, $categories: (label: 'caption')) {\n    $label: map-get($categories, 'label');\n\n    @include igx-scope('.igx-typography') {\n        %igx-tab-label {\n            @include igx-type-style($type-scale, $label) {\n                margin: 0\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// Does ___not___ apply for disabled state colors.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for the component theme.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n/// @param {border-radius} $flat-border-radius [null] - The border radius used for flat button.\n/// @param {border-radius} $raised-border-radius [null] - The border radius used for raised button.\n/// @param {border-radius} $outlined-border-radius [null] - The border radius used for outlined button.\n/// @param {border-radius} $fab-border-radius [null] - The border radius used for fab button.\n/// @param {border-radius} $icon-border-radius [null] - The border radius used for icon button.\n/// @param {Color} $flat-background [null] - The background color of a flat button.\n/// @param {Color} $flat-text-color [null] - The idle text color of a flat button.\n/// @param {Color} $flat-hover-background [null] - The hover background color of a flat button.\n/// @param {Color} $flat-hover-text-color [null] - The hover text color of a flat button.\n/// @param {Color} $flat-focus-background [null] - The focus background color of a flat button.\n/// @param {Color} $flat-focus-text-color [null] - The focus text color of a flat button.\n///\n/// @param {Color} $outlined-background [null] - The background color of an outlined button.\n/// @param {Color} $outlined-text-color [null] - The idle text color of an outlined button.\n/// @param {Color} $outlined-outline-color [null] - The outline color of an outlined button.\n/// @param {Color} $outlined-disabled-outline-color [null] - The outline color of an outlined, disabled button.\n/// @param {Color} $outlined-hover-background [null] - The hover background color of an outlined button.\n/// @param {Color} $outlined-hover-text-color [null] - The hover text color of an outlined button.\n/// @param {Color} $outlined-focus-background [null] - The focus background color of an outlined button.\n/// @param {Color} $outlined-focus-text-color [null] - The focus text color of an outlined button.\n///\n/// @param {Color} $raised-background [null] - The background color of a raised button.\n/// @param {Color} $raised-text-color [null] - The idle text color of a raised button.\n/// @param {Color} $raised-hover-background [null] - The hover background of a raised button.\n/// @param {Color} $raised-hover-text-color [null] - The hover text color of a raised button.\n/// @param {Color} $raised-focus-background [null] - The focus background color of a raised button.\n/// @param {Color} $raised-focus-text-color [null] - The focus text color of a raised button.\n///\n/// @param {box-shadow} $raised-resting-shadow [null] - The shadow color of the raised button in its resting state.\n/// @param {box-shadow} $raised-hover-shadow [null] - The shadow color of the raised button in its hover state.\n/// @param {box-shadow} $raised-focus-shadow [null] - The shadow color of the raised button in its focus state.\n///\n/// @param {Color} $fab-background [null] - The background color of a floating action button.\n/// @param {Color} $fab-text-color [null] - The text color of a floating action button.\n/// @param {Color} $fab-hover-background [null] - The hover background color of a floating action button.\n/// @param {Color} $fab-hover-text-color [null] - The hover text color of a floating action button.\n/// @param {Color} $fab-focus-background [null] - The focus background color of floating action button.\n/// @param {Color} $fab-focus-text-color [null] - The focus text color of a floating action button.\n///\n/// @param {box-shadow} $fab-resting-shadow [null] - The shadow color of the floating action button in its resting state.\n/// @param {box-shadow} $fab-hover-shadow [null] - The shadow color of the floating action button in its hover state.\n/// @param {box-shadow} $fab-focus-shadow [null] - The shadow color of the floating action button in its focus state.\n///\n/// @param {Color} $icon-color [null] - The icon color of an icon button.\n/// @param {Color} $icon-hover-color [null] - The hover icon color of an icon button.\n/// @param {Color} $icon-background [null] - The background color of the an icon button.\n/// @param {Color} $icon-hover-background [null] - The hover background color of an icon button.\n/// @param {Color} $icon-focus-color [null] - The focus icon color of an icon button.\n/// @param {Color} $icon-focus-background [null] - The focus background color an icon button.\n///\n/// @param {Color} $disabled-color [null] - The disabled text/icon color of a button.\n/// @param {Color} $disabled-background [null] - The disabled background color of raised, fab, or icon buttons.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires round-borders\n///\n/// @example scss Change the background and text colors in raised buttons\n///   $my-button-theme: igx-button-theme(\n///     $raised-text-color: white,\n///     $raised-background: black\n///   );\n///   // Pass the theme to the igx-button component mixin\n///   @include igx-button($my-button-theme);\n@function igx-button-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $elevations: $elevations,\n\n    $flat-border-radius: null,\n    $raised-border-radius: null,\n    $fab-border-radius: null,\n    $icon-border-radius: null,\n    $outlined-border-radius: null,\n\n    $flat-text-color: null,\n    $flat-background: null,\n    $flat-hover-background: null,\n    $flat-hover-text-color: null,\n    $flat-focus-background: null,\n    $flat-focus-text-color: null,\n\n    $outlined-text-color: null,\n    $outlined-outline-color: null,\n    $outlined-disabled-outline-color: null,\n    $outlined-background: null,\n    $outlined-hover-background: null,\n    $outlined-hover-text-color: null,\n    $outlined-focus-background: null,\n    $outlined-focus-text-color: null,\n\n    $raised-text-color: null,\n    $raised-background: null,\n    $raised-hover-background: null,\n    $raised-hover-text-color: null,\n    $raised-focus-background: null,\n    $raised-focus-text-color: null,\n\n    $raised-resting-shadow: null,\n    $raised-hover-shadow: null,\n    $raised-focus-shadow: null,\n\n    $fab-text-color: null,\n    $fab-background: null,\n    $fab-hover-background: null,\n    $fab-hover-text-color: null,\n    $fab-focus-background: null,\n    $fab-focus-text-color: null,\n\n    $fab-resting-shadow: null,\n    $fab-hover-shadow: null,\n    $fab-focus-shadow: null,\n\n    $icon-color: null,\n    $icon-background: null,\n    $icon-hover-background: null,\n    $icon-hover-color: null,\n    $icon-focus-background: null,\n    $icon-focus-color: null,\n\n    $disabled-color: null,\n    $disabled-background: null\n) {\n    $name: 'igx-button';\n    $button-schema: map-get($schema, $name);\n    $theme: apply-palette($button-schema, $palette);\n\n    $flat-border-radius: round-borders(\n        if($flat-border-radius, $flat-border-radius, map-get($button-schema, 'flat-border-radius')), 0, 20px\n    );\n\n    $raised-border-radius: round-borders(\n        if($raised-border-radius, $raised-border-radius, map-get($button-schema, 'raised-border-radius')), 0, 20px\n    );\n\n    $fab-border-radius: round-borders(\n        if($fab-border-radius, $fab-border-radius, map-get($button-schema, 'fab-border-radius')), 12, 28px\n    );\n\n    $icon-border-radius: round-borders(\n        if($icon-border-radius, $icon-border-radius, map-get($button-schema, 'icon-border-radius')), 0, 20px\n    );\n\n    $outlined-border-radius: round-borders(\n        if($outlined-border-radius, $outlined-border-radius, map-get($button-schema, 'outlined-border-radius')), 0, 20px\n    );\n\n    @if not($flat-text-color) and $flat-background {\n        $flat-text-color: text-contrast($flat-background);\n    }\n\n    @if not($flat-hover-background) and $flat-background {\n        $flat-hover-background: lighten-color($flat-background, 5%);\n    }\n\n    @if not($flat-focus-background) and $flat-background {\n        $flat-focus-background: lighten-color($flat-background, 5%);\n    }\n\n    @if not($flat-hover-text-color) and $flat-hover-background {\n        $flat-hover-text-color: text-contrast($flat-hover-background);\n    }\n\n    @if not($flat-focus-text-color) and $flat-focus-background {\n        $flat-focus-text-color: text-contrast($flat-focus-background);\n    }\n\n    @if not($outlined-text-color) and $outlined-background {\n        $outlined-text-color: text-contrast($outlined-background);\n    }\n\n    @if not($outlined-hover-background) and $outlined-background {\n        $outlined-hover-background: lighten-color($outlined-background, 5%);\n    }\n\n    @if not($outlined-focus-background) and $outlined-background {\n        $outlined-focus-background: lighten-color($outlined-background, 5%);\n    }\n\n    @if not($outlined-hover-text-color) and $outlined-hover-background {\n        $outlined-hover-text-color: text-contrast($outlined-hover-background);\n    }\n\n    @if not($outlined-focus-text-color) and $outlined-focus-background {\n        $outlined-focus-text-color: text-contrast($outlined-focus-background);\n    }\n\n    @if not($raised-text-color) and $raised-background {\n        $raised-text-color: text-contrast($raised-background);\n    }\n\n    @if not($raised-hover-background) and $raised-background {\n        $raised-hover-background: lighten-color($raised-background, 5%);\n    }\n\n    @if not($raised-focus-background) and $raised-background {\n        $raised-focus-background: lighten-color($raised-background, 5%);\n    }\n\n    @if not($raised-hover-text-color) and $raised-hover-background {\n        $raised-hover-text-color: text-contrast($raised-hover-background);\n    }\n\n    @if not($raised-focus-text-color) and $raised-focus-background {\n        $raised-focus-text-color: text-contrast($raised-focus-background);\n    }\n\n    @if not($fab-text-color) and $fab-background {\n        $fab-text-color: text-contrast($fab-background);\n    }\n\n    @if not($fab-hover-background) and $fab-background {\n        $fab-hover-background: lighten-color($fab-background, 5%);\n    }\n\n    @if not($fab-focus-background) and $fab-background {\n        $fab-focus-background: lighten-color($fab-background, 5%);\n    }\n\n    @if not($fab-hover-text-color) and $fab-hover-background {\n        $fab-hover-text-color: text-contrast($fab-hover-background);\n    }\n\n    @if not($fab-focus-text-color) and $fab-focus-background {\n        $fab-focus-text-color: text-contrast($fab-focus-background);\n    }\n\n    @if not($icon-color) and $icon-background {\n        $icon-color: text-contrast($icon-background);\n    }\n\n    @if not($icon-hover-background) and $icon-background {\n        $icon-hover-background: lighten-color($icon-background, 5%);\n    }\n\n    @if not($icon-focus-background) and $icon-background {\n        $icon-focus-background: lighten-color($icon-background, 5%);\n    }\n\n    @if not($icon-focus-color) and $icon-focus-background {\n        $icon-focus-color: text-contrast($icon-focus-background);\n    }\n\n    @if not($icon-hover-color) and $icon-hover-background {\n        $icon-hover-color: text-contrast($icon-hover-background);\n    }\n\n    @if not($fab-resting-shadow) {\n        $fab-resting-elevation: map-get($button-schema, 'fab-resting-elevation');\n        $fab-resting-shadow: igx-elevation($elevations, $fab-resting-elevation);\n    }\n\n    @if not($fab-hover-shadow) {\n        $fab-hover-elevation: map-get($button-schema, 'fab-hover-elevation');\n        $fab-hover-shadow: igx-elevation($elevations, $fab-hover-elevation);\n    }\n\n    @if not($fab-focus-shadow) {\n        $fab-focus-elevation: map-get($button-schema, 'fab-focus-elevation');\n        $fab-focus-shadow: igx-elevation($elevations, $fab-focus-elevation);\n    }\n\n    @if not($raised-resting-shadow) {\n        $raised-resting-elevation: map-get($button-schema, 'raised-resting-elevation');\n        $raised-resting-shadow: igx-elevation($elevations, $raised-resting-elevation);\n    }\n\n    @if not($raised-hover-shadow) {\n        $raised-hover-elevation: map-get($button-schema, 'raised-hover-elevation');\n        $raised-hover-shadow: igx-elevation($elevations, $raised-hover-elevation);\n    }\n\n    @if not($raised-focus-shadow) {\n        $raised-focus-elevation: map-get($button-schema, 'raised-focus-elevation');\n        $raised-focus-shadow: igx-elevation($elevations, $raised-focus-elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n\n        flat-border-radius: $flat-border-radius,\n        raised-border-radius: $raised-border-radius,\n        fab-border-radius: $fab-border-radius,\n        icon-border-radius: $icon-border-radius,\n        outlined-border-radius: $outlined-border-radius,\n\n        flat-text-color: $flat-text-color,\n        flat-background: $flat-background,\n        flat-hover-background: $flat-hover-background,\n        flat-hover-text-color: $flat-hover-text-color,\n        flat-focus-background: $flat-focus-background,\n        flat-focus-text-color: $flat-focus-text-color,\n\n        outlined-text-color: $outlined-text-color,\n        outlined-outline-color: $outlined-outline-color,\n        outlined-disabled-outline-color: $outlined-disabled-outline-color,\n        outlined-background: $outlined-background,\n        outlined-hover-background: $outlined-hover-background,\n        outlined-hover-text-color: $outlined-hover-text-color,\n        outlined-focus-background: $outlined-focus-background,\n        outlined-focus-text-color: $outlined-focus-text-color,\n\n        raised-text-color: $raised-text-color,\n        raised-background: $raised-background,\n        raised-hover-background: $raised-hover-background,\n        raised-hover-text-color: $raised-hover-text-color,\n        raised-focus-background: $raised-focus-background,\n        raised-focus-text-color: $raised-focus-text-color,\n\n        fab-text-color: $fab-text-color,\n        fab-background: $fab-background,\n        fab-hover-background: $fab-hover-background,\n        fab-hover-text-color: $fab-hover-text-color,\n        fab-focus-background: $fab-focus-background,\n        fab-focus-text-color: $fab-focus-text-color,\n\n        icon-color: $icon-color,\n        icon-background: $icon-background,\n        icon-hover-background: $icon-hover-background,\n        icon-hover-color: $icon-hover-color,\n        icon-focus-background: $icon-focus-background,\n        icon-focus-color: $icon-focus-color,\n\n        disabled-color: $disabled-color,\n        disabled-background: $disabled-background,\n\n        raised-resting-shadow: $raised-resting-shadow,\n        raised-hover-shadow: $raised-hover-shadow,\n        raised-focus-shadow: $raised-focus-shadow,\n\n        fab-resting-shadow: $fab-resting-shadow,\n        fab-hover-shadow: $fab-hover-shadow,\n        fab-focus-shadow: $fab-focus-shadow,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-button($theme) {\n    @include igx-root-css-vars($theme);\n\n    $button-border: 1px solid transparent;\n    $button-width: rem(88px);\n\n    $button-transition: background .15s $ease-in-out-cubic,\n        color .15s $ease-in-out-cubic,\n        border .15s $ease-in-out-cubic;\n\n    $button-disabled-shadow: none;\n\n    $button-floating-width: rem(56px);\n    $button-floating-height: $button-floating-width;\n\n    $button-icon-width: rem(36px, 16px);\n    $button-icon-height: $button-icon-width;\n    $button-icon-font-size: rem(24px, 24px);\n    $button-icon-padding: 0;\n\n    $button-padding: (\n        comfortable: rem(9px, 16px) rem(16px, 16px),\n        cosy: rem(6px, 16px) rem(16px, 16px),\n        compact: rem(3px, 16px) rem(16px, 16px)\n    );\n    $button-size: (\n        comfortable: rem(36px),\n        cosy: rem(30px),\n        compact: rem(24px)\n    );\n    $button-floating-padding: (\n        comfortable: rem(15px),\n        cosy: rem(11px),\n        compact: rem(7px)\n    );\n\n    $button-floating-size: (\n        comfortable: rem(56px),\n        cosy: rem(48px),\n        compact: rem(40px)\n    );\n\n    $icon-in-button-size: rem(18px);\n\n    %igx-button-display {\n        position: relative;\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        min-width: $button-width;\n        padding: map-get($button-padding, 'comfortable');\n        min-height: map-get($button-size, 'comfortable');\n        border: none;\n        cursor: pointer;\n        user-select: none;\n        outline-style: none;\n        -webkit-tap-highlight-color: transparent;\n        overflow: hidden;\n        white-space: nowrap;\n        transition: $button-transition;\n        font-family: inherit;\n        margin: 0;\n\n        %igx-icon-display {\n            width: $icon-in-button-size;\n            height: $icon-in-button-size;\n            font-size: $icon-in-button-size;\n        }\n    }\n\n    %igx-button-display--cosy {\n        padding: map-get($button-padding, 'cosy');\n        min-height: map-get($button-size, 'cosy');\n    }\n\n    %igx-button-display--compact {\n        padding: map-get($button-padding, 'compact');\n        min-height: map-get($button-size, 'compact');\n    }\n\n    %igx-button--flat {\n        background: --var($theme, 'flat-background');\n        color: --var($theme, 'flat-text-color');\n        border-radius: --var($theme, 'flat-border-radius');\n\n        &:hover {\n            background: --var($theme, 'flat-hover-background');\n            color: --var($theme, 'flat-hover-text-color');\n        }\n\n        &:focus,\n        &:active {\n            background: --var($theme, 'flat-focus-background');\n            color: --var($theme, 'flat-focus-text-color');\n        }\n    }\n\n    %igx-button--outlined {\n        border: $button-border;\n        border-color: --var($theme, 'outlined-outline-color');\n        background: --var($theme, 'outlined-background');\n        color: --var($theme, 'outlined-text-color');\n        border-radius: --var($theme, 'outlined-border-radius');\n\n        &:hover {\n            background: --var($theme, 'outlined-hover-background');\n            color: --var($theme, 'outlined-hover-text-color');\n        }\n\n        &:focus,\n        &:active {\n            background: --var($theme, 'outlined-focus-background');\n            color: --var($theme, 'outlined-focus-text-color');\n        }\n    }\n\n    %igx-button--raised {\n        color: --var($theme, 'raised-text-color');\n        background: --var($theme, 'raised-background');\n        box-shadow: --var($theme, 'raised-resting-shadow');\n        border-radius: --var($theme, 'raised-border-radius');\n\n        &:focus,\n        &:hover {\n            color: --var($theme, 'raised-hover-text-color');\n            background: --var($theme, 'raised-hover-background');\n            box-shadow: --var($theme, 'raised-hover-shadow');\n        }\n\n        &:active {\n            color: --var($theme, 'raised-focus-text-color');\n            background: --var($theme, 'raised-focus-background');\n            box-shadow: --var($theme, 'raised-focus-shadow');\n        }\n    }\n\n    %igx-button--round {\n        display: inline-flex;\n        position: relative;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        border: $button-border;\n        border-radius: --var($theme, 'fab-border-radius');\n        outline: none;\n        cursor: pointer;\n        transition: $button-transition;\n        user-select: none;\n        -webkit-tap-highlight-color: transparent;\n        overflow: hidden;\n        // hack to allow circular overflow in safari...\n        filter: blur(0);\n    }\n\n    %igx-button--fab {\n        padding: map-get($button-floating-padding, 'comfortable');\n        min-width: map-get($button-floating-size, 'comfortable');\n        min-height: map-get($button-floating-size, 'comfortable');\n        line-height: unset;\n        white-space: nowrap;\n        color: --var($theme, 'fab-text-color');\n        background: --var($theme, 'fab-background');\n        box-shadow: --var($theme, 'fab-resting-shadow');\n        border-radius: --var($theme, 'fab-border-radius');\n\n        &:hover {\n            color: --var($theme, 'fab-hover-text-color');\n            background: --var($theme, 'fab-hover-background');\n            box-shadow: --var($theme, 'fab-hover-shadow');\n        }\n\n        &:focus,\n        &:active {\n            color: --var($theme, 'fab-focus-text-color');\n            background: --var($theme, 'fab-focus-background');\n            box-shadow: --var($theme, 'fab-focus-shadow');\n        }\n    }\n\n    %igx-button--fab-cosy {\n        padding: map-get($button-floating-padding, 'cosy');\n        min-width: map-get($button-floating-size, 'cosy');\n        min-height: map-get($button-floating-size, 'cosy');\n    }\n\n    %igx-button--fab-compact {\n        padding: map-get($button-floating-padding, 'compact');\n        min-width: map-get($button-floating-size, 'compact');\n        min-height: map-get($button-floating-size, 'compact');\n    }\n\n    %igx-button--icon {\n        width: $button-icon-width;\n        height: $button-icon-width;\n        font-size: $button-icon-font-size;\n        padding: $button-icon-padding;\n        color: --var($theme, 'icon-color');\n        background: --var($theme, 'icon-background');\n        border-radius: --var($theme, 'icon-border-radius');\n\n        &:hover {\n            transition: $button-transition;\n            color: --var($theme, 'icon-hover-color');\n            background: --var($theme, 'icon-hover-background');\n        }\n\n        &:focus,\n        &:active {\n            color: --var($theme, 'icon-focus-color');\n            background: --var($theme, 'icon-focus-background');\n        }\n    }\n\n    %igx-button--disabled {\n        pointer-events: none;\n        box-shadow: none;\n\n        &%igx-button--flat,\n        &%igx-button--outlined,\n        &%igx-button--raised,\n        &%igx-button--fab,\n        &%igx-button--icon {\n            color: --var($theme, 'disabled-color');\n        }\n\n        &%igx-button--raised,\n        &%igx-button--fab {\n            background: --var($theme, 'disabled-background');\n        }\n\n        &%igx-button--flat,\n        &%igx-button--outlined {\n            background: transparent;\n        }\n\n        &%igx-button--outlined {\n            border-color: --var($theme, 'outlined-disabled-outline-color');\n        }\n\n        &:focus {\n            box-shadow: none;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-button component.\n/// Uses the 'button' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {String} $categories [(text: 'button')] - The category from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-button-typography($type-scale, $categories: (text: 'button')) {\n    $text: map-get($categories, 'text');\n\n    @include igx-scope('.igx-typography') {\n        %igx-button-display {\n            @include igx-type-style($type-scale, $text) {\n                text-align: center;\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $banner-background [null]- The background color used banner background.\n/// @param {Color} $banner-message-color [null]- The color used for banner label.\n/// @param {Color} $banner-border-color [null] - The border color used banner border.\n/// @param {Color} $banner-illustration-background [null] - The background color used for banner illustration.\n/// @param {Color} $banner-illustration-color [null] - The color used banner illustration.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires text-contrast\n/// @requires extend\n///\n/// @example scss Change the background in banner\n///   $my-banner-theme: igx-banner-theme($banner-background: #000);\n///   // Pass the theme to the igx-banner component mixin\n///   @include igx-banner($my-banner-theme);\n@function igx-banner-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $banner-background: null,\n    $banner-message-color: null,\n    $banner-border-color: null,\n    $banner-illustration-color: null\n) {\n    $name: 'igx-banner';\n    $theme: apply-palette(map-get($schema, $name), $palette);\n\n    @if not($banner-message-color) and $banner-background {\n        $banner-message-color: text-contrast($banner-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        banner-background: $banner-background,\n        banner-message-color: $banner-message-color,\n        banner-border-color: $banner-border-color,\n        banner-illustration-color: $banner-illustration-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-banner($theme) {\n    @include igx-root-css-vars($theme);\n\n    $banner-padding: (\n        comfortable: rem(8) rem(8) rem(8) 0,\n        cosy: rem(8) rem(8) rem(8) 0,\n        compact: rem(8) rem(8) rem(8) 0\n    );\n\n    %igx-banner,\n    %igx-banner__illustration,\n    %igx-banner__message {\n        display: flex;\n        align-items: center;\n    }\n\n    %igx-banner {\n        padding: map-get($banner-padding, 'comfortable');\n        background: --var($theme, 'banner-background');\n        align-items: center;\n        position: relative;\n        flex-wrap: wrap;\n        justify-content: flex-end;\n    }\n\n    %igx-banner__illustration {\n        justify-content: center;\n        width: rem(40);\n        min-width: rem(40);\n        height: rem(40);\n        margin-left: rem(16);\n        color: --var($theme, 'banner-illustration-color');\n    }\n\n    %igx-banner__border-top {\n        border-top: 1px solid --var($theme, 'banner-border-color');\n        top: -1px\n    }\n\n    %igx-banner__border-bottom {\n        border-bottom: 1px solid --var($theme, 'banner-border-color');\n        top: 0;\n    }\n\n    %igx-banner__text {\n        color: --var($theme, 'banner-message-color');\n        flex: 1 0 0%;\n        margin-left: rem(24);\n    }\n\n    %igx-banner--cosy {\n        padding: map-get($banner-padding, 'cosy');\n    }\n\n    %igx-banner--compact {\n        padding: map-get($banner-padding, 'compact');\n    }\n\n    %igx-banner__message {\n        min-width: rem(220);\n        flex: 1 0 0%;\n        margin-right: rem(90);\n    }\n\n    %igx-banner__row {\n        display: flex;\n    }\n\n    %igx-banner__actions {\n        display: flex;\n        flex-direction: column;\n        align-self: flex-end;\n        justify-content: center;\n        min-height: rem(40);\n    }\n}\n\n/// Adds typography styles for the igx-banner component.\n/// Uses the 'body-2' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-banner-typography($type-scale, $categories: (\n    message: 'body-2')\n) {\n    $message: map-get($categories, 'message');\n\n    @include igx-scope('.igx-typography') {\n        %igx-banner__text {\n            @include igx-type-style($type-scale, $message) {\n                margin-top: 0;\n                margin-bottom: 0;\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only header background color is specified, that color will be\n/// used as the leading color for all accented elements, such as:\n/// - current date color\n/// - selected date background\n/// - picker elements hover colors\n/// - year/month hover/selected colors\n/// If only background colors are specified, text/icon colors\n/// will be assigned automatically to a contrasting color.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $content-background [null] - The main content background color.\n/// @param {Color} $content-text-color [null] - The main content text color.\n///\n/// @param {Color} $header-background [null] - The header background color.\n/// @param {Color} $header-text-color [null] - The header text color.\n///\n/// @param {Color} $picker-arrow-color [null] - The idle picker arrow color.\n/// @param {Color} $picker-arrow-hover-color [null] - The picker hover arrow color.\n///\n/// @param {Color} $picker-text-color [null]- The idle picker month/year color.\n/// @param {Color} $picker-text-hover-color [null]-  The hover picker month/year color.\n///\n/// @param {Color} $inactive-text-color [null] - The text color for weekday labels and other month dates.\n/// @param {Color} $weekend-text-color [null] - The text color for weekend days.\n///\n/// @param {Color} $year-current-text-color [null] - The text color for the current/selected year.\n/// @param {Color} $month-current-text-color [null]- The text color for the current/selected month.\n///\n/// @param {Color} $year-hover-text-color [null] - The year hover text color.\n/// @param {Color} $month-hover-text-color [null] - The month hover text color.\n/// @param {Color} $month-hover-background [null] - The month hover background color.\n///\n/// @param {Color} $date-selected-background [null] - The background color for the selected date.\n/// @param {Color} $date-selected-text-color [null] - The text color for the selected date.\n///\n/// @param {Color} $date-current-text-color [null] - The text color for the current date.\n/// @param {Color} $date-hover-background [null] - The hover date background color.\n///\n/// @param {Color} $date-special-background [null] - The background color used for special dates.\n/// @param {Color} $date-special-text-color [null] - The text color used for special dates.\n///\n/// @param {Color} $date-disabled-text-color [null] - The text color for disabled dates.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for the outline of the calendar.\n/// @param {border-radius} $date-border-radius [null] - The border radius used for the outline outline of the date.\n/// @param {border-radius} $month-border-radius [null] - The border radius used for the outline outline of the month.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires text-contrast\n/// @requires round-borders\n/// @requires extend\n///\n/// @example scss Change the header and content background colors\n///   $my-calendar-theme: igx-calendar-theme(\n///     $header-background: purple,\n///     $content-background: black\n///   );\n///   // Pass the theme to the igx-calendar component mixin\n///   @include igx-calendar($my-calendar-theme);\n@function igx-calendar-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $content-background: null,\n    $content-text-color: null,\n\n    $border-radius: null,\n    $date-border-radius: null,\n    $month-border-radius: null,\n\n    $header-background: null,\n    $header-text-color: null,\n\n    $picker-arrow-color: null,\n    $picker-arrow-hover-color: null,\n\n    $picker-text-color: null,\n    $picker-text-hover-color: null,\n\n    $inactive-text-color: null,\n    $weekend-text-color: null,\n\n    $year-current-text-color: null,\n    $month-current-text-color: null,\n\n    $year-hover-text-color: null,\n    $month-hover-text-color: null,\n    $month-hover-background: null,\n\n    $date-selected-background: null,\n    $date-selected-text-color: null,\n\n    $date-current-text-color: null,\n    $date-hover-background: null,\n\n    $date-special-background: null,\n    $date-special-text-color: null,\n\n    $date-disabled-text-color: null\n) {\n    $name: 'igx-calendar';\n    $calendar-schema: map-get($schema, $name);\n    $theme: apply-palette($calendar-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map-get($calendar-schema, 'border-radius')), 0, 20px\n    );\n\n    $date-border-radius: round-borders(\n        if($date-border-radius, $date-border-radius, map-get($calendar-schema, 'date-border-radius')), 0, 20px\n    );\n\n    $month-border-radius: round-borders(\n        if($month-border-radius, $month-border-radius, map-get($calendar-schema, 'month-border-radius')), 0, 20px\n    );\n\n    @if not($content-text-color) and $content-background {\n        @if type-of($content-background) == 'color' {\n            $content-text-color: text-contrast($content-background);\n        }\n    }\n\n    @if not($weekend-text-color) and $content-background {\n        @if type-of($content-background) == 'color' {\n            $weekend-text-color: rgba($content-text-color, .7);\n        }\n    }\n\n    @if not($inactive-text-color) and $content-background {\n        @if type-of($content-background) == 'color' {\n            $inactive-text-color: rgba($content-text-color, .5);\n        }\n    }\n\n    @if not($picker-arrow-color) and $content-background {\n        $picker-arrow-color: $content-text-color;\n    }\n\n    @if not($picker-arrow-hover-color) and $header-background {\n        @if type-of($header-background) == 'color' {\n            $picker-arrow-hover-color: $header-background;\n        }\n    }\n\n    @if not($picker-text-color) and $content-background {\n        $picker-text-color: $content-text-color;\n    }\n\n    @if not($picker-text-hover-color) and $header-background {\n        $picker-text-hover-color: $header-background;\n    }\n\n    @if not($header-text-color) and $header-background {\n        $header-text-color: text-contrast($header-background);\n    }\n\n    @if not($date-selected-background) and $header-background {\n        $date-selected-background: $header-background;\n    }\n\n    @if not($date-selected-text-color) and $date-selected-background {\n        $date-selected-text-color: $content-background;\n    }\n\n    @if not($date-hover-background) and $content-background {\n        @if type-of($content-background) == 'color' {\n            $date-hover-background: rgba(text-contrast($content-background), .12);\n        }\n    }\n\n    @if not($date-current-text-color) and $header-background {\n        $date-current-text-color: $header-background;\n    }\n\n    @if not($date-special-background) and $content-background {\n        @if type-of($content-background) == 'color' {\n            $date-special-background: rgba(text-contrast($content-background), .04);\n        }\n    }\n\n    @if not($date-special-text-color) and $date-special-background {\n        $date-special-text-color: text-contrast($date-special-background);\n    }\n\n    @if not($year-hover-text-color) and $header-background {\n        $year-hover-text-color: $header-background;\n    }\n\n    @if not($month-hover-text-color) and $month-hover-background {\n        @if type-of($month-hover-text-color) == 'color' {\n            $month-hover-text-color: text-contrast($month-hover-background);\n        }\n    }\n\n    @if not($year-current-text-color) and $header-background {\n        $year-current-text-color: $header-background;\n    }\n\n    @if not($month-current-text-color) and $header-background {\n        @if $header-background == 'color' {\n            $month-current-text-color: $header-background;\n        }\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        content-background: $content-background,\n        content-text-color: $content-text-color,\n\n        header-background: $header-background,\n        header-text-color: $header-text-color,\n\n        border-radius: $border-radius,\n        date-border-radius: $date-border-radius,\n        month-border-radius: $month-border-radius,\n\n        picker-arrow-color: $picker-arrow-color,\n        picker-arrow-hover-color: $picker-arrow-hover-color,\n\n        picker-text-color: $picker-text-color,\n        picker-text-hover-color: $picker-text-hover-color,\n\n        weekend-text-color: $weekend-text-color,\n        inactive-text-color: $inactive-text-color,\n\n        year-current-text-color: $year-current-text-color,\n        month-current-text-color: $month-current-text-color,\n\n        year-hover-text-color: $year-hover-text-color,\n        month-hover-text-color: $month-hover-text-color,\n        month-hover-background: $month-hover-background,\n\n        date-selected-background: $date-selected-background,\n        date-selected-text-color: $date-selected-text-color,\n\n        date-current-text-color: $date-current-text-color,\n        date-hover-background: $date-hover-background,\n\n        date-special-text-color: $date-special-text-color,\n        date-special-background: $date-special-background,\n\n        date-disabled-text-color: $date-disabled-text-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires em\n/// @requires rem\n/// @requires {mixin} ellipsis\n/// @requires --var\n@mixin igx-calendar($theme) {\n    @include igx-root-css-vars($theme);\n\n    $cal-header-year-margin: 0;\n    $cal-header-date-margin: 0;\n    $cal-header-padding: em(16px);\n\n    $cal-picker-padding: em(16px);\n\n    $cal-value-w: em(40px);\n    $cal-value-h: $cal-value-w;\n    $cal-value-br: $cal-value-w / 2;\n    $cal-value-margin: em(2px);\n    $cal-value-fw: 600;\n\n    $cal-value-month-margin: 0 em(12px);\n    $cal-value-month-height: em(91px);\n\n    $cal-row-padding: 0 em(16px);\n\n    %cal-display {\n        display: flex;\n        flex-flow: column nowrap;\n        width: 100%;\n        background: --var($theme, 'content-background');\n        overflow: hidden;\n        outline: none;\n        border-radius: --var($theme, 'border-radius');\n    }\n\n    %cal-display--vertical {\n        flex-flow: row nowrap;\n\n        %cal-header-display {\n            min-width: em(168px);\n        }\n    }\n\n    %cal-header-display {\n        background: --var($theme, 'header-background');\n        color: --var($theme, 'header-text-color');\n        padding: $cal-header-padding;\n    }\n\n    %cal-header-year {\n        margin: $cal-header-year-margin;\n        color: currentColor;\n        opacity: .8;\n    }\n\n    %cal-header-date {\n        display: flex;\n        margin: $cal-header-date-margin;\n\n        > span {\n            @include ellipsis();\n        }\n    }\n\n    %cal-header-date--vertical {\n        flex-flow: column nowrap;\n    }\n\n    %cal-picker-display {\n        display: flex;\n        height: em(56px);\n        justify-content: space-between;\n        align-items: center;\n        padding-bottom: $cal-picker-padding;\n        padding-left: $cal-picker-padding;\n        padding-right: $cal-picker-padding;\n    }\n\n    %cal-picker-arrow {\n        display: inline-flex;\n        color: --var($theme, 'picker-arrow-color');\n        user-select: none;\n        outline: none;\n        cursor: pointer;\n\n        &:focus,\n        &:hover {\n            color: --var($theme, 'picker-arrow-hover-color');\n        }\n\n        [dir='rtl'] & {\n            transform: scaleX(-1);\n        }\n    }\n\n    %cal-picker-date {\n        color: --var($theme, 'picker-text-color');\n        text-align: center;\n        outline: none;\n\n        &:hover,\n        &:focus {\n            color: --var($theme, 'picker-text-hover-color');\n            cursor: pointer;\n        }\n    }\n\n    %cal-body-display {\n        flex: 1 1 auto;\n        padding-top: $cal-picker-padding;\n        padding-bottom: $cal-picker-padding;\n        overflow: hidden;\n    }\n\n    %cal-row-display {\n        display: flex;\n        justify-content: space-between;\n        padding: $cal-row-padding;\n    }\n\n    %cal-row-display--wrap {\n        flex-wrap: wrap;\n    }\n\n    %cal-column-display {\n        display: flex;\n        flex-flow: column nowrap;\n        justify-content: space-between;\n        align-items: center;\n    }\n\n    %cal-value {\n        position: relative;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: $cal-value-w;\n        height: $cal-value-h;\n        min-width: 2ch;\n        margin: $cal-value-margin;\n        // border-radius: $cal-value-br;\n        border-radius: --var($theme, 'date-border-radius');\n        color: --var($theme, 'content-text-color');\n        cursor: pointer;\n        outline: none;\n        transition: background .15s ease-out;\n    }\n\n    %cal-value--label {\n        color: --var($theme, 'inactive-text-color');\n        cursor: default;\n        border-radius: 0;\n    }\n\n    %cal-value--weekend {\n        color: --var($theme, 'weekend-text-color');\n    }\n\n    %cal-value--special {\n        color: --var($theme, 'date-special-text-color');\n        background: --var($theme, 'date-special-background');\n        font-weight: $cal-value-fw;\n    }\n\n    %cal-value--disabled {\n        pointer-events: none;\n        color: --var($theme, 'date-disabled-text-color');\n        cursor: not-allowed;\n    }\n\n    %cal-value--year {\n        display: flex;\n        margin: 0;\n        justify-content: center;\n        align-items: center;\n        min-width: 8ch;\n        height: rem(52px);\n    }\n\n    %cal-value--year-current {\n        color: --var($theme, 'year-current-text-color');\n    }\n\n    %cal-value--year-hover {\n        color: --var($theme, 'year-hover-text-color');\n    }\n\n    %cal-value--month-hover {\n        color: --var($theme, 'month-hover-text-color');\n\n        &::after {\n            background: --var($theme, 'month-hover-background');\n        }\n    }\n\n    %cal-value--month {\n        position: relative;\n        display: flex;\n        margin: $cal-value-month-margin;\n        flex: 1 0 25%;\n        justify-content: center;\n        align-items: center;\n        height: $cal-value-month-height;\n        z-index: 1;\n\n        &::after {\n            position: absolute;\n            content: '';\n            top: 50%;\n            left: 0;\n            right: 0;\n            transform: translateY(-50%);\n            height: 48px;\n            background: transparent;\n            border-radius: --var($theme, 'month-border-radius');\n            transition: background-color .15s ease-out;\n            z-index: -1;\n        }\n    }\n\n    %cal-value--month-current {\n        color: --var($theme, 'month-current-text-color') !important;\n    }\n\n    %cal-value--inactive {\n        cursor: pointer;\n        color: --var($theme, 'inactive-text-color');\n    }\n\n    %cal-value--selected {\n        position: relative;\n        color: --var($theme, 'date-selected-text-color');\n        background: --var($theme, 'date-selected-background') !important;\n        font-weight: $cal-value-fw !important;\n    }\n\n    %cal-value--current {\n        color: --var($theme, 'date-current-text-color');\n        font-weight: $cal-value-fw !important;\n    }\n\n    %cal-value--hover {\n        background: --var($theme, 'date-hover-background');\n    }\n}\n\n/// Adds typography styles for the igx-calendar component.\n/// Uses the 'h4', 'subtitle-1' and 'body-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(header-year: 'subtitle-1', header-date: 'h4', picker-date: 'subtitle-1', content: 'body-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-calendar-typography($type-scale, $categories: (\n    header-year: 'subtitle-1',\n    header-date: 'h4',\n    picker-date: 'subtitle-1',\n    content: 'body-1')\n) {\n    $header-year: map-get($categories, 'header-year');\n    $header-date: map-get($categories, 'header-date');\n    $picker-date: map-get($categories, 'picker-date');\n    $content: map-get($categories, 'content');\n\n    @include igx-scope('.igx-typography') {\n        %cal-header-year {\n            @include igx-type-style($type-scale, $header-year) {\n                margin: 0;\n            }\n        }\n\n        %cal-header-date {\n            @include igx-type-style($type-scale, $header-date) {\n                line-height: rem(42px);\n                margin: 0;\n            }\n        }\n\n        %cal-picker-date {\n            @include igx-type-style($type-scale, $picker-date) {\n                margin: 0;\n            }\n        }\n\n        %cal-value {\n            @include igx-type-style($type-scale, $content) {\n                margin: 0;\n            }\n        }\n\n        %cal-value--year-current {\n            @include igx-type-style($type-scale, $content) {\n                font-size: rem(24px);\n                margin: 0;\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n///\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n/// @param {Color} $background [null] - The card background color.\n/// @param {Color} $outline-color [null] - The color of the outline for outlined type cards.\n/// @param {Color} $header-text-color [null] - The text color of the card title.\n/// @param {Color} $subtitle-text-color [null] - The text color of the card subtitle.\n/// @param {Color} $content-text-color [null] - The text color of the card content.\n/// @param {Color} $actions-text-color [null] - The text color of the card buttons.\n/// @param {box-shadow} $resting-shadow [null] - The shadow of the card in its resting state.\n/// @param {box-shadow} $hover-shadow [null] - The shadow of the card in its hover state.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for card component.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires round-borders\n///\n/// @example scss Change the background and content text colors in card\n///   $my-card-theme: igx-card-theme(\n///     $background: #fff,\n///     $content-text-color: rgba(0, 0, 0, .8)\n///   );\n///   // Pass the theme to the igx-card component mixin\n///   @include igx-card($my-card-theme);\n@function igx-card-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $elevations: $elevations,\n\n    $border-radius: null,\n    $background: null,\n    $outline-color: null,\n    $header-text-color: null,\n    $subtitle-text-color: null,\n    $content-text-color: null,\n    $actions-text-color: null,\n    $resting-shadow: null,\n    $hover-shadow: null\n) {\n    $name: 'igx-card';\n    $card-schema: map-get($schema, $name);\n    $theme: apply-palette($card-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map-get($card-schema, 'border-radius')),0 ,24px\n    );\n\n    @if not($header-text-color) and $background {\n        $header-text-color: text-contrast($background);\n    }\n\n    @if not($actions-text-color) and $background {\n        @if type-of($background) == 'color' {\n            $actions-text-color: rgba(text-contrast($background), .5);\n        }\n    }\n\n    @if not($content-text-color) and $background {\n        @if type-of($background) == 'color' {\n            $content-text-color: rgba(text-contrast($background), .7);\n        }\n    }\n\n    @if not($subtitle-text-color) and $background {\n        @if type-of($background) == 'color' {\n            $subtitle-text-color: rgba(text-contrast($background), .7);\n        }\n    }\n\n    @if not($resting-shadow) {\n        $resting-elevation: map-get($card-schema, 'resting-elevation');\n        $resting-shadow: igx-elevation($elevations, $resting-elevation);\n    }\n\n    @if not($hover-shadow) {\n        $hover-elevation: map-get($card-schema, 'hover-elevation');\n        $hover-shadow: igx-elevation($elevations, $hover-elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        background: $background,\n        outline-color: $outline-color,\n        border-radius: $border-radius,\n        header-text-color: $header-text-color,\n        subtitle-text-color: $subtitle-text-color,\n        content-text-color: $content-text-color,\n        actions-text-color: $actions-text-color,\n        resting-shadow: $resting-shadow,\n        hover-shadow: $hover-shadow\n    ));\n}\n\n/// Card Component\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires em\n/// @requires --var\n@mixin igx-card($theme) {\n    @include igx-root-css-vars($theme);\n\n    $card-title-fz: em(24px, 16px);\n    $card-title-line-height: em(24px, 16px);\n    $card-subtitle-line-height: em(24px, 16px);\n    $card-content-fz: em(14px, 16px);\n    $card-content-lh: (20px, 16px);\n\n    $card-heading-padding: em(16px, 16px);\n    $card-heading-compact-padding: em(16px, 16px);\n    $card-heading-margin: 0;\n    $card-content-padding: em(16px, 16px);\n    $card-content-margin: 0;\n    $card-actions-padding: em(8px, 16px);\n    $card-subtitle-margin: 0;\n    $card-tgroup-margin: 0 em(16px);\n    $card-transitions: box-shadow .3s cubic-bezier(.25, .8, .25, 1);\n\n    %igx-card-display {\n        display: flex;\n        flex-direction: column;\n        box-shadow: --var($theme, 'resting-shadow');\n        overflow: hidden;\n        border-radius: --var($theme, 'border-radius');\n        background: --var($theme, 'background');\n        transition: $card-transitions;\n        backface-visibility: hidden;\n\n        &:hover {\n            box-shadow: --var($theme, 'hover-shadow');\n        }\n    }\n\n    %igx-card--outlined {\n        box-shadow: none;\n        border: 1px solid --var($theme, 'outline-color');\n\n        &:hover {\n            box-shadow: none;\n        }\n    }\n\n\n    %igx-card--horizontal {\n        flex-direction: row;\n    }\n\n    %igx-card-header {\n        display: flex;\n        flex: 1 1 auto;\n        flex-flow: row wrap;\n        align-content: flex-start;\n        width: 100%;\n        padding: $card-heading-padding;\n        color: --var($theme, 'header-text-color');\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-card-header--vertical {\n        flex-flow: column nowrap;\n\n        %igx-card-header-titles {\n            text-align: center;\n        }\n\n        %igx-card-header-thumbnail {\n            display: flex;\n            justify-content: center;\n            align-self: unset;\n            margin-right: 0;\n            margin-bottom: rem(16px);\n        }\n    }\n\n    %igx-card-header--compact {\n        padding: $card-heading-compact-padding;\n    }\n\n    %igx-card-header-thumbnail {\n        align-self: flex-start;\n        margin-right: rem(16px);\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-card-header-titles {\n        display: flex;\n        flex-flow: column nowrap;\n        overflow: hidden;\n        flex: 1 1 auto;\n        justify-content: center;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-card-header-title {\n        margin: $card-heading-margin;\n    }\n\n    %igx-card-header-subtitle {\n        margin: $card-subtitle-margin;\n        color: --var($theme, 'subtitle-text-color');\n    }\n\n    %igx-card-tgroup {\n        margin: $card-tgroup-margin;\n    }\n\n    %igx-card-content {\n        width: 100%;\n        flex: 1 1 auto;\n        padding: $card-content-padding;\n        color: --var($theme, 'content-text-color');\n    }\n\n    %igx-card-content-text {\n        margin: $card-content-margin;\n    }\n\n    %igx-card-media {\n        display: block;\n        overflow: hidden;\n\n        > * {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n        }\n    }\n\n    %igx-card-media--right {\n        width: auto;\n        margin-left: auto;\n        order: 9999;\n    }\n\n    %igx-card-actions {\n        display: flex;\n        flex-flow: row wrap;\n        justify-content: space-between;\n        flex: 0 1 auto;\n        align-items: center;\n        padding: $card-actions-padding;\n\n        [igxButton] ~ [igxButton] {\n            margin-left: rem(8px);\n        }\n    }\n\n    %igx-card-actions--vertical {\n        flex-direction: column;\n    }\n\n    %igx-card-actions__icons {\n        display: flex;\n        align-items: center;\n        order: 1;\n        color: --var($theme, 'actions-text-color');\n        margin-left: auto;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-card-actions__buttons {\n        display: flex;\n        align-items: center;\n        order: 0;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-card-actions__buttons--justify,\n    %igx-card-actions__icons--justify {\n        justify-content: space-around;\n        flex-grow: 1;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-card-actions__icons--vertical,\n    %igx-card-actions__buttons--vertical {\n        flex-direction: column;\n\n        [igxButton] ~ [igxButton] {\n            margin-left: 0;\n            margin-top: rem(8px);\n        }\n    }\n\n    %igx-card-actions__icons--vertical {\n        margin-top: auto;\n        margin-left: 0;\n    }\n\n    %igx-card-actions__icons--reverse {\n        order: 0;\n        margin-left: 0;\n    }\n\n    %igx-card-actions__buttons--reverse {\n        order: 1;\n        margin-left: auto;\n    }\n\n    %igx-card-actions__icons--vertical-reverse {\n        margin: 0;\n        margin-bottom: auto;\n    }\n\n    %igx-card-actions__buttons--vertical-reverse {\n        margin: 0;\n        margin-top: auto;\n    }\n\n    %igx-card-actions-bgroup {\n        display: flex;\n        flex-flow: row nowrap;\n\n        [igxButton] ~ [igxButton] {\n            margin-left: 8px;\n        }\n    }\n\n    %igx-card-actions-igroup {\n        display: flex;\n        flex-flow: row nowrap;\n\n        %igx-button--icon {\n            color: --var($theme, 'actions-text-color');\n        }\n    }\n\n    %igx-card-actions-igroup--start {\n        margin-right: auto;\n    }\n\n    %igx-card-actions-igroup--end {\n        margin-left: auto;\n    }\n}\n\n/// Adds typography styles for the igx-card component.\n/// Uses the 'h5', 'subtitle-2' and 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(title: 'h5', title-small: 'subtitle-2', subtitle: 'subtitle-2', content: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-card-typography($type-scale, $categories: (\n    title: 'h6',\n    title-small: 'subtitle-2',\n    subtitle: 'subtitle-2',\n    content: 'body-2')\n) {\n    $title: map-get($categories, 'title');\n    $title-small: map-get($categories, 'title-small');\n    $subtitle: map-get($categories, 'subtitle');\n    $content: map-get($categories, 'content');\n\n    @include igx-scope('.igx-typography') {\n        %igx-card-header-title {\n            @include igx-type-style($type-scale, $title) {\n                margin: 0;\n            }\n        }\n\n        %igx-card-header-title--small {\n            @include igx-type-style($type-scale, $title-small) {\n                margin: 0;\n            }\n        }\n\n        %igx-card-header-subtitle {\n            @include igx-type-style($type-scale, $subtitle) {\n                margin: 0;\n            }\n        }\n\n        %igx-card-content,\n        %igx-card-content > p {\n            @include igx-type-style($type-scale, $content) {\n                margin: 0;\n            }\n        }\n    }\n}\n","@import '../ripple/ripple-theme';\n@import '../ripple/ripple-component';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Checkbox Theme\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $label-color [null]- The text color used for the label text.\n/// @param {Color} $empty-color [null] - The unchecked border color.\n/// @param {Color} $fill-color [null] - The checked border and fill colors.\n/// @param {Color} $tick-color [null] - The checked mark color.\n/// @param {Color} $disabled-color [null] - The disabled border and fill colors.\n/// @param {border-radius} $border-radius [null] - The border radius used for checkbox component.\n/// @param {border-radius} $border-radius-ripple [null] - The border radius used for checkbox ripple.\n/// Set to light when the surrounding area is dark.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n///\n/// @example scss Change the checked fill color\n///   $my-checkbox-theme: igx-checkbox-theme($fill-color: magenta);\n///   // Pass the theme to the igx-checkbox component mixin\n///   @include igx-checkbox($my-checkbox-theme);\n@function igx-checkbox-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $border-radius: null,\n    $label-color: null,\n    $empty-color: null,\n    $fill-color: null,\n    $tick-color: null,\n    $disabled-color: null,\n    $border-radius-ripple:null\n) {\n    $name: 'igx-checkbox';\n    $checkbox-schema: map-get($schema, $name);\n    $theme: apply-palette($checkbox-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map-get($checkbox-schema, 'border-radius')),0 ,10px\n    );\n\n    $border-radius-ripple: round-borders(\n        if($border-radius-ripple, $border-radius-ripple, map-get($checkbox-schema, 'border-radius-ripple')),0 ,24px\n    );\n\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        label-color: $label-color,\n        empty-color: $empty-color,\n        fill-color: $fill-color,\n        tick-color: $tick-color,\n        disabled-color: $disabled-color,\n        border-radius: $border-radius,\n        border-radius-ripple: $border-radius-ripple\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires {mixin} hide-default\n/// @requires {mixin} igx-css-vars\n/// @requires {mixin} scale-in-out\n/// @requires {mixin} animation\n/// @requires {mixin} igx-ripple\n/// @requires igx-ripple-theme\n/// @requires rem\n/// @requires em\n/// @requires --var\n@mixin igx-checkbox($theme) {\n    @include igx-root-css-vars($theme);\n\n    @include scale-in-out($start-scale: .9);\n\n    $size: em(20px);\n    $checkbox-radius: $size / 2;\n    $border-width: 2px;\n    $label-margin: em(8px);\n    $radius: 2px;\n\n    $mark-stroke: 3;\n    $mark-length: 24;\n    $mark-x-factor: $mark-stroke / $mark-length;\n\n    $ripple-size: em(48px);\n    $ripple-radius: $ripple-size / 2;\n\n    $ripple-theme: igx-ripple-theme(\n        $color: --var($theme, 'fill-color')\n    );\n\n    @include scale-in-center();\n\n    %cbx-display {\n        position: relative;\n        display: inline-flex;\n        flex-flow: row nowrap;\n        align-items: center;\n        outline-style: none;\n    }\n\n    %cbx-display--disabled {\n        user-select: none;\n        pointer-events: none;\n        cursor: initial;\n    }\n\n    %cbx-input {\n        @include hide-default();\n    }\n\n    %cbx-composite-wrapper {\n        width: $size;\n        height: $size;\n    }\n\n    %cbx-composite {\n        position: relative;\n        display: inline-block;\n        cursor: pointer;\n        width: $size;\n        height: $size;\n        min-width: $size;\n        border-width: $border-width;\n        border-style: solid;\n        border-color: --var($theme, 'empty-color');\n        border-radius: --var($theme, 'border-radius');\n        -webkit-tap-highlight-color: transparent;\n        transition: border-color .2s $ease-out-quad;\n        overflow: hidden;\n\n        &::after {\n            position: absolute;\n            content: '';\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            transition: background .2s $ease-out-quad;\n        }\n    }\n\n    %cbx-composite--x {\n        border-color: --var($theme, 'fill-color');\n        background: --var($theme, 'fill-color');\n\n        &::after {\n            background: --var($theme, 'fill-color');\n        }\n    }\n\n    %cbx-composite--disabled {\n        border-color: --var($theme, 'disabled-color');\n        background: transparent;\n    }\n\n    %cbx-composite--x--disabled {\n        background: --var($theme, 'disabled-color');\n\n        &::after {\n            background: --var($theme, 'disabled-color');\n        }\n    }\n\n    %cbx-composite-mark {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        stroke: --var($theme, 'tick-color');\n        stroke-linecap: square;\n        stroke-width: $mark-stroke;\n        stroke-dasharray: $mark-length;\n        stroke-dashoffset: $mark-length;\n        fill: none;\n        opacity: 0;\n        z-index: 1;\n        transition: opacity .1s $ease-out-quad;\n    }\n\n    %cbx-composite-mark--x {\n        stroke-dashoffset: 0;\n        opacity: 1;\n        transition: all .2s $ease-out-quad, opacity .2s $ease-out-quad;\n    }\n\n    %cbx-composite-mark--in {\n        stroke-dashoffset: 41; /* length of path - adjacent line length */\n        opacity: 1;\n        transform: rotate(45deg) translateX(-#{$mark-x-factor}em);\n    }\n\n    %cbx-label {\n        display: inline-block;\n        color: --var($theme, 'label-color');\n        cursor: pointer;\n        user-select: none;\n        word-wrap: break-all;\n\n        &:empty {\n            margin: 0;\n        }\n    }\n\n    %cbx-label-pos--after {\n        margin-left: $label-margin;\n\n        [dir='rtl'] & {\n            margin-left: initial;\n            margin-right: $label-margin;\n\n            &:empty {\n                margin: 0;\n            }\n        }\n    }\n\n    %cbx-label-pos--before {\n        margin-right: $label-margin;\n        order: -1;\n\n        [dir='rtl'] & {\n            margin-right: initial;\n            margin-left: $label-margin;\n\n            &:empty {\n                margin: 0;\n            }\n        }\n    }\n\n    %cbx-label--disabled {\n        color: --var($theme, 'disabled-color');\n    }\n\n    %cbx-ripple {\n        @include igx-ripple($ripple-theme);\n        @include igx-css-vars($ripple-theme);\n        position: absolute;\n        top: calc(50% - #{$ripple-radius});\n        right: calc(100% - #{$ripple-radius} - #{$checkbox-radius});\n        width: $ripple-size;\n        height: $ripple-size;\n        border-radius: --var($theme, 'border-radius-ripple');\n        overflow: hidden;\n        pointer-events: none;\n        filter: opacity(1);\n    }\n\n    %cbx-ripple--focused {\n        @include animation('scale-in-out' 1s $ease-out-quad infinite);\n        background: --var($theme, 'empty-color');\n        transition: background .2s $ease-out-quad;\n        opacity: .12;\n    }\n\n    %cbx-ripple--focused-checked {\n        background: --var($theme, 'fill-color');\n    }\n\n    %cbx-ripple--hover {\n        &::after {\n            position: absolute;\n            content: '';\n            opacity: .06;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n        }\n    }\n\n    %cbx-ripple--hover-unchecked {\n        &::after {\n            background: --var($theme, 'empty-color');\n        }\n    }\n\n    %cbx-ripple--hover-checked {\n        &::after {\n            background: --var($theme, 'fill-color');\n        }\n    }\n\n    %cbx-ripple--pressed {\n        &::after {\n            opacity: .12;\n        }\n    }\n\n    %cbx-display--plain {\n        %cbx-composite,\n        %cbx-composite::after,\n        %cbx-composite-mark,\n        %cbx-composite-mark--x {\n            transition: none;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-checkbox component.\n/// Uses the 'subtitle-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-checkbox-typography(\n    $type-scale,\n    $categories: (label: 'subtitle-1')\n) {\n    $label: map-get($categories, 'label');\n\n    @include igx-scope('.igx-typography') {\n        %cbx-label {\n            @include igx-type-style($type-scale, $label) {\n                margin-top: 0;\n                margin-bottom: 0;\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Chip Theme\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $border-radius [null] - The chip border-radius.\n///\n/// @param {Color} $text-color [null] - The chip text color.\n/// @param {Color} $background [null] - The chip background color.\n/// @param {Color} $border-color [null] - The chip border color.\n///\n/// @param {Color} $hover-text-color [null] - The chip text hover color.\n/// @param {Color} $hover-background [null] - The chip hover background color.\n/// @param {Color} $hover-border-color [null] - The chip hover border color.\n///\n/// @param {color} $selected-text-color [null] - The selected chip text color.\n/// @param {color} $selected-background [null] - The selected chip background color.\n/// @param {color} $selected-border-color [null] The selected chip border color.\n///\n/// @param {color} $hover-selected-text-color [null] - The selected chip hover text color.\n/// @param {color} $hover-selected-background [null] - The selected chip hover background color.\n/// @param {color} $hover-selected-border-color [null] - The selected chip hover border color.\n///\n/// @param {color} $focus-selected-text-color [null] - The selected chip text focus color.\n/// @param {color} $focus-selected-background [null] - The selected chip focus background color.\n/// @param {color} $focus-selected-border-color [null] - The selected chip focus border color.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires luminance\n///\n/// @example scss Change the background color\n///   $my-chip-theme: igx-chip-theme($background: black);\n///   // Pass the theme to the igx-chip component mixin\n///   @include igx-chip($my-chip-theme);\n@function igx-chip-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $border-radius: null,\n\n    $text-color: null,\n    $background: null,\n    $border-color: null,\n    $ghost-background: null,\n\n    $hover-text-color: null,\n    $hover-background: null,\n    $hover-border-color: null,\n\n    $focus-text-color: null,\n    $focus-background: null,\n    $focus-border-color: null,\n\n    $selected-text-color: null,\n    $selected-background: null,\n    $selected-border-color: null,\n\n    $hover-selected-text-color: null,\n    $hover-selected-background: null,\n    $hover-selected-border-color: null,\n\n    $focus-selected-text-color: null,\n    $focus-selected-background: null,\n    $focus-selected-border-color: null\n) {\n    $name: 'igx-chip';\n    $chip-schema: map-get($schema, $name);\n    $theme: apply-palette($chip-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map-get($chip-schema, 'border-radius')), 0, 16px\n    );\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @if not($hover-background) and $background {\n        $luminance: luminance($background);\n\n        @if type-of($luminance) == 'color' and $luminance + .05 < .5 {\n            $hover-background: lighten-color($background, 14%);\n        } @else {\n            $hover-background: darken-color($background, 4%);\n        }\n    }\n\n    @if not($hover-text-color) and $hover-background {\n        $hover-text-color: text-contrast(hexrgba($hover-background));\n    }\n\n    @if not($focus-background) and $background {\n        $luminance: luminance($background);\n\n        @if type-of($luminance) == 'color' and $luminance + .05 < .5 {\n            $focus-background: lighten-color($background, 22%);\n        } @else {\n            $focus-background: darken-color($background, 8%);\n        }\n    }\n\n    @if not($focus-text-color) and $focus-background {\n        $focus-text-color: text-contrast(hexrgba($focus-background));\n    }\n\n    @if not($selected-background) and $background {\n        $luminance: luminance($background);\n\n        @if type-of($luminance) == 'color' and $luminance + .05 < .5 {\n            $selected-background: lighten-color($background, 22%);\n        } @else {\n            $selected-background: darken-color($background, 8%);\n        }\n    }\n\n    @if not($selected-text-color) and $selected-background {\n        $selected-text-color: text-contrast(hexrgba($selected-background));\n    }\n\n    @if not($hover-selected-background) and $hover-background {\n        $hover-selected-background: $hover-background;\n    }\n\n    @if not($hover-selected-text-color) and $hover-selected-background {\n        $hover-selected-text-color: text-contrast(hexrgba($hover-selected-background));\n    }\n\n    @if not($focus-selected-background) and $selected-background {\n        $luminance: luminance($selected-background);\n\n        @if type-of($luminance) == 'color' and $luminance + .05 < .5 {\n            $focus-selected-background: lighten-color($background, 32%);\n        } @else {\n            $focus-selected-background: darken-color($background, 16%);\n        }\n    }\n\n    @if not($focus-selected-text-color) and $focus-selected-background {\n        $focus-selected-text-color: text-contrast(hexrgba($focus-selected-background));\n    }\n\n    @if not($hover-border-color) and $border-color {\n        $hover-border-color: $border-color;\n    }\n\n    @if not($focus-border-color) and $border-color {\n        $focus-border-color: $border-color;\n    }\n\n    @if not($selected-border-color) and $border-color {\n        $selected-border-color: $border-color;\n    }\n\n    @if not($hover-selected-border-color) and $border-color {\n        $hover-selected-border-color: $border-color;\n    }\n\n    @if not($focus-selected-border-color) and $border-color {\n        $focus-selected-border-color: $border-color;\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        border-radius: $border-radius,\n\n        text-color: $text-color,\n        background: $background,\n        border-color: $border-color,\n        ghost-background: $ghost-background,\n\n        hover-text-color: $hover-text-color,\n        hover-background: $hover-background,\n        hover-border-color: $hover-border-color,\n\n        focus-text-color: $focus-text-color,\n        focus-background: $focus-background,\n        focus-border-color: $focus-border-color,\n\n        selected-text-color: $selected-text-color,\n        selected-background: $selected-background,\n        selected-border-color: $selected-border-color,\n\n        hover-selected-text-color: $hover-selected-text-color,\n        hover-selected-background: $hover-selected-background,\n        hover-selected-border-color: $hover-selected-border-color,\n\n        focus-selected-text-color: $focus-selected-text-color,\n        focus-selected-background: $focus-selected-background,\n        focus-selected-border-color: $focus-selected-border-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-chip($theme) {\n    @include igx-root-css-vars($theme);\n\n    $transition: all 120ms $ease-in-out-quad;\n    $chip-max-width: 24ch;\n\n    $chip-height: (\n        comfortable: rem(32px),\n        cosy: rem(24px),\n        compact: rem(18px)\n    );\n\n    $chip-padding: (\n        comfortable: 0 rem(8px),\n        cosy: 0 rem(4px),\n        compact: 0 rem(2px)\n    );\n\n    $chip-icon-size: (\n        comfortable: rem(18px),\n        cosy: rem(18px),\n        compact: rem(16px)\n    );\n\n    %igx-chip-area {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        flex-wrap: wrap;\n        width: 100%;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-chip {\n        @extend  %igx-chip-custom-icon;\n\n        position: relative;\n        display: inline-flex;\n        flex-shrink: 0;\n        transition: $transition;\n        transition-property: top, left;\n        touch-action: none;\n\n        &:focus {\n            outline-style: none;\n        }\n\n        // We target the tag selector directly to\n        // avoid having to set custom classes on the prefix\n        // and suffix based on the host element.\n        igx-prefix,\n        [igxPrefix] {\n            @extend %igx-chip__prefix;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %igx-chip__suffix;\n        }\n    }\n\n    %igx-chip--cosy {\n        @extend  %igx-chip-custom-icon--cosy;\n    }\n\n    %igx-chip--compact {\n        @extend  %igx-chip-custom-icon--compact;\n    }\n\n    %igx-chip--disabled {\n        %igx-chip__item {\n            cursor: default;\n            pointer-events: none;\n        }\n    }\n\n    %igx-chip-custom-icon {\n        igx-icon {\n            width: map-get($chip-icon-size, 'comfortable');\n            height: map-get($chip-icon-size, 'comfortable');\n            font-size: map-get($chip-icon-size, 'comfortable');\n            outline-style: none;\n        }\n    }\n\n    %igx-chip-custom-icon--cosy {\n        igx-icon {\n            width: map-get($chip-icon-size, 'cosy');\n            height: map-get($chip-icon-size, 'cosy');\n            font-size: map-get($chip-icon-size, 'cosy');\n            outline-style: none;\n        }\n    }\n\n    %igx-chip-custom-icon--compact {\n        igx-icon {\n            width: map-get($chip-icon-size, 'compact');\n            height: map-get($chip-icon-size, 'compact');\n            font-size: map-get($chip-icon-size, 'compact');\n            outline-style: none;\n        }\n    }\n\n    %igx-chip__prefix,\n    %igx-chip__suffix {\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    %igx-chip__suffix {\n        + igx-suffix,\n        + [igxSuffix],\n        + %igx-chip__remove {\n            margin-left: rem(4px);\n\n            [dir='rtl'] & {\n                margin-left: 0;\n                margin-right: rem(4px);\n            }\n        }\n    }\n\n    %igx-chip__prefix {\n        + igx-prefix,\n        + [igxPrefix] {\n            margin-left: rem(4px);\n\n            [dir='rtl'] & {\n                margin-left: 0;\n                margin-right: rem(4px);\n            }\n        }\n    }\n\n    %igx-chip__content {\n        @include ellipsis();\n        padding: map-get($chip-padding, 'comfortable');\n        max-width: $chip-max-width;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-chip__content--cosy {\n        padding: map-get($chip-padding, 'cosy');\n    }\n\n    %igx-chip__content--compact {\n        padding: map-get($chip-padding, 'compact');\n    }\n\n    %igx-chip__remove {\n        display: inline-flex;\n        color: currentColor;\n        margin-right: rem(4px);\n\n        &:empty {\n            display: none;\n        }\n\n        &:focus-within {\n            outline-style: none;\n            color: igx-color(map-get($theme, 'palette'), error);\n        }\n\n        [dir='rtl'] & {\n            margin-right: 0;\n            margin-left: rem(4px) !important;\n        }\n    }\n\n    %igx-chip__select {\n        display: inline-flex;\n        align-items: center;\n        z-index: 1;\n        opacity: 1;\n        transition: opacity 120ms $ease-in-out-quad;\n\n        > * {\n            width: 18px !important;\n            transition: width 120ms $ease-in-out-quad;\n        }\n\n        + igx-prefix,\n        + [igxPrefix] {\n            margin-left: rem(4px);\n\n            [dir='rtl'] & {\n                margin-left: 0;\n                margin-right: rem(4px);\n            }\n        }\n    }\n\n    %igx-chip__select--hidden {\n        opacity: 0;\n        z-index: -1;\n\n        > * {\n            width: 0 !important;\n        }\n\n        + igx-prefix,\n        + [igxPrefix] {\n            margin-left: 0;\n\n            [dir='rtl'] & {\n                margin-right: 0;\n            }\n        }\n    }\n\n    %igx-chip__item {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex: 1 1 auto;\n        height: map-get($chip-height, 'comfortable');\n        padding: 0 rem(4px);\n        color: --var($theme, 'text-color');\n        background: --var($theme, 'background');\n        border-width: 1px;\n        border-style: solid;\n        border-color: --var($theme, 'border-color');\n        border-radius: --var($theme, 'border-radius');\n        user-select: none;\n        overflow: hidden;\n        cursor: pointer;\n        //hacking overflow hidden with border radius\n        // not playing nicely together\n        filter: opacity(1);\n    }\n\n    %igx-chip__item--hover {\n        color: --var($theme, 'hover-text-color');\n        background: --var($theme, 'hover-background');\n        border-color: --var($theme, 'hover-border-color');\n        transition: all 120ms ease-in;\n    }\n\n    %igx-chip__item--focus {\n        color: --var($theme, 'focus-text-color');\n        background: --var($theme, 'focus-background');\n        border-color: --var($theme, 'focus-border-color');\n        outline-style: none;\n    }\n\n    %igx-chip__item--selected {\n        color: --var($theme, 'selected-text-color');\n        background: --var($theme, 'selected-background');\n        border-color: --var($theme, 'selected-border-color');\n    }\n\n    %igx-chip__item--hover-selected {\n        color: --var($theme, 'hover-selected-text-color');\n        background: --var($theme, 'hover-selected-background');\n        border-color: --var($theme, 'hover-selected-border-color');\n        transition: $transition;\n    }\n\n    %igx-chip__item--focus-selected {\n        color: --var($theme, 'focus-selected-text-color');\n        background: --var($theme, 'focus-selected-background');\n        border-color: --var($theme, 'focus-selected-border-color');\n        transition: $transition;\n    }\n\n    %igx-chip__item--cosy {\n        height: map-get($chip-height, 'cosy');\n        padding: map-get($chip-padding, 'cosy');\n    }\n\n    %igx-chip__item--compact {\n        height: map-get($chip-height, 'compact');\n        padding: map-get($chip-padding, 'compact');\n    }\n\n    %igx-chip__ghost {\n        position: absolute;\n        z-index: 10;\n        box-shadow: igx-elevation($elevations, 8);\n        overflow: hidden;\n        background: --var($theme, 'ghost-background');\n\n        &:hover,\n        &:focus {\n            background: --var($theme, 'ghost-background');\n        }\n    }\n\n    %igx-chip__ghost--cosy {\n        height: map-get($chip-height, 'cosy');\n\n        %igx-chip__content {\n            padding: map-get($chip-padding, 'cosy');\n        }\n    }\n\n    %igx-chip__ghost--compact {\n        @extend  %igx-chip-custom-icon--compact;\n        height: map-get($chip-height, 'compact');\n\n        %igx-chip__content {\n            padding: map-get($chip-padding, 'compact');\n        }\n    }\n}\n\n/// Adds typography styles for the igx-chip component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-chip-typography($type-scale, $categories: (text: 'body-2')) {\n    $text: map-get($categories, 'text');\n\n    @include igx-scope('.igx-typography') {\n        %igx-chip {\n            @include igx-type-style($type-scale, $text) {\n                font-weight: 600;\n            }\n        }\n\n        %igx-chip--compact,\n        %igx-chip__ghost--compact {\n            %igx-chip__content {\n                @include igx-type-style($type-scale, $text) {\n                    font-size: rem(12px);\n                    font-weight: 600;\n                }\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Column Hiding Theme\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $title-color [primary 500]- The text color used for the title of the list.\n/// @param {Color} $background-color [transparent] - The background color of the panel.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n///\n/// @example scss Change the title color\n///   $column-hiding-theme: igx-column-hiding-theme($title-color: black);\n///   // Pass the theme to the igx-column-hiding component mixin\n///   @include igx-column-hiding($column-hiding-theme);\n////\n@function igx-column-hiding-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $title-color: null,\n    $background-color: null\n) {\n    $name: 'igx-column-hiding';\n    $theme: apply-palette(map-get($schema, $name), $palette);\n\n    @if not($title-color) and $background-color {\n        $title-color: text-contrast($background-color);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        title-color: $title-color,\n        background-color: $background-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-column-hiding($theme) {\n    @include igx-root-css-vars($theme);\n\n    %column-hiding-display {\n        display: flex;\n        flex-flow: column nowrap;\n        background: --var($theme, 'background-color');\n        width: 100%;\n        flex: 1 1 auto;\n        min-width: rem(180px);\n    }\n\n    %column-hiding-title {\n        color: --var($theme, 'title-color');\n        margin: 0;\n        padding: rem(16px) rem(16px) rem(8px);\n    }\n\n    %column-hiding-input {\n        font-size: rem(16px) !important;\n        margin: -16px 0 0 !important;\n        padding: rem(8px) rem(16px);\n    }\n\n    %column-hiding-columns {\n        display: flex;\n        flex-flow: column nowrap;\n        overflow-y: auto;\n    }\n\n    %column-hiding-item {\n        padding: rem(16px);\n        min-height: rem(52px);\n    }\n\n    %column-hiding-buttons {\n        display: flex;\n        justify-content: flex-end;\n        padding: rem(8px) rem(16px);\n    }\n}\n\n/// Adds typography styles for the igx-column-hiding component.\n/// Uses the 'subtitle-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(title: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-column-hiding-typography($type-scale, $categories: (title: 'subtitle-1')) {\n    $title: map-get($categories, 'title');\n\n    @include igx-scope('.igx-typography') {\n        %column-hiding-title {\n            @include igx-type-style($type-scale, $title) {\n                margin: 0;\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Dialog Theme\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n/// @param {Color} $background [null] - The dialog background color.\n/// @param {Color} $title-color [null] - The dialog title text color.\n/// @param {Color} $message-color [null] - The dialog message text color.\n/// @param {box-shadow} $shadow [null] - The shadow used for the dialog.\n/// @param {border-radius} $border-radius [null] - The border radius used for dialog component.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires round-borders\n///\n/// @example scss Change the background color\n///   $my-dialog-theme: igx-dialog-theme($background: black);\n///   // Pass the theme to the igx-dialog component mixin\n///   @include igx-dialog($my-dialog-theme);\n@function igx-dialog-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $elevations: $elevations,\n\n    $border-radius: null,\n\n    $background: null,\n    $title-color: null,\n    $message-color: null,\n    $shadow: null\n) {\n    $name: 'igx-dialog';\n    $dialog-schema: map-get($schema, $name);\n    $theme: apply-palette($dialog-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map-get($dialog-schema, 'border-radius')), 0 , 36px\n    );\n\n    @if not($title-color) and $background{\n        $title-color: text-contrast($background);\n    }\n\n    @if not($message-color) and $background{\n        @if type-of($background) == 'color' {\n            $message-color: rgba(text-contrast($background), .8);\n        }\n    }\n\n    @if not($shadow) {\n        $elevation: map-get($dialog-schema, 'elevation');\n        $shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        border-radius: $border-radius,\n        background: $background,\n        title-color: $title-color,\n        message-color: $message-color,\n        shadow: $shadow\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-dialog($theme) {\n    @include igx-root-css-vars($theme);\n\n    $dialog-min-width: rem(280px);\n    $dialog-title-padding: rem(24px) rem(24px) rem(12px) rem(24px);\n    $dialog-message-padding: rem(12px) rem(24px);\n    $dialog-actions-padding: rem(8px);\n\n    %igx-dialog-display {\n        outline-style: none;\n    }\n\n    %igx-dialog--hidden {\n        display: none;\n    }\n\n    %igx-dialog-window {\n        position: relative;\n        min-width: $dialog-min-width;\n        border-radius: --var($theme, 'border-radius');\n        background: --var($theme, 'background');\n        box-shadow: --var($theme, 'shadow');\n        overflow: hidden;\n\n        .igx-calendar {\n            width: rem(320px);\n        }\n\n        .igx-calendar--vertical {\n            width: rem(496px);\n        }\n    }\n\n    %igx-dialog-title {\n        color: --var($theme, 'title-color');\n        padding: $dialog-title-padding;\n    }\n\n    %igx-dialog-content {\n        color: --var($theme, 'message-color');\n        max-width: 40ch;\n        padding: $dialog-message-padding;\n    }\n\n    %igx-dialog-actions {\n        display: flex;\n        flex-flow: row nowrap;\n        justify-content: flex-end;\n        padding: $dialog-actions-padding;\n\n        button ~ button {\n            margin-left: rem(8px);\n        }\n    }\n}\n\n/// Adds typography styles for the igx-dialog component.\n/// Uses the 'h6' and 'body-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(title: 'h6', content: 'body-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-dialog-typography($type-scale, $categories: (\n    title: 'h6',\n    content: 'body-1')\n) {\n    $title: map-get($categories, 'title');\n    $content: map-get($categories, 'content');\n\n    @include igx-scope('.igx-typography') {\n        %igx-dialog-title {\n            @include igx-type-style($type-scale, $title) {\n                margin: 0;\n            }\n        }\n\n        %igx-dialog-content {\n            @include igx-type-style($type-scale, $content) {\n                margin: 0;\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Generates a drop-down theme.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n/// @param {Color} $background-color [null] - The drop-down background color.\n/// @param {Color} $header-text-color [null] - The drop-down header text color.\n///\n/// @param {Color} $item-text-color [null] - The drop-down text color.\n/// @param {Color} $hover-item-text-color [null] - The drop-down hover text color.\n///\n/// @param {Color} $hover-item-background [null] - The drop-down hover item background color.\n///\n/// @param {Color} $focused-item-background [null] - The drop-down focused item background color.\n/// @param {Color} $focused-item-text-color [null] - The drop-down focused item text color.\n///\n/// @param {Color} $selected-item-background [null] - The drop-down selected item background color.\n/// @param {Color} $selected-item-text-color [null] - The drop-down selected item text color.\n///\n/// @param {Color} $selected-hover-item-background [null] - The drop-down selected item hover background color.\n/// @param {Color} $selected-hover-item-text-color [null] - The drop-down selected item hover text color.\n///\n/// @param {Color} $selected-focus-item-background [null] - The drop-down selected item focus background color.\n/// @param {Color} selected-focus-item-text-color [null] - The drop-down selected item focus text color.\n///\n/// @param {Color} $disabled-item-background [null] - The drop-down disabled item background color.\n/// @param {Color} $disabled-item-text-color [null] - The drop-down disabled item text color.\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the drop-down.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for drop-down component.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires round-borders\n@function igx-drop-down-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $elevations: $elevations,\n\n    $border-radius: null,\n\n    $background-color: null,\n    $header-text-color: null,\n\n    $item-text-color: null,\n    $hover-item-text-color: null,\n\n    $hover-item-background: null,\n\n    $focused-item-background: null,\n    $focused-item-text-color: null,\n\n    $selected-item-background: null,\n    $selected-item-text-color: null,\n\n    $selected-hover-item-background: null,\n    $selected-hover-item-text-color: null,\n\n    $selected-focus-item-background: null,\n    $selected-focus-item-text-color: null,\n\n    $disabled-item-background: null,\n    $disabled-item-text-color: null,\n    $shadow: null\n) {\n    $name: 'igx-drop-down';\n    $drop-down-schema: map-get($schema, 'igx-drop-down');\n    $theme: apply-palette($drop-down-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map-get($drop-down-schema, 'border-radius')), 0, 20px\n    );\n\n    @if not($item-text-color) and $background-color {\n        $item-text-color: text-contrast($background-color);\n    }\n\n    @if not($hover-item-background) and $background-color {\n        $hover-item-text-color: text-contrast($background-color);\n\n        @if type-of($background-color) == 'color' {\n            $hover-item-background: rgba(text-contrast($background-color), .12);\n        }\n    }\n\n    @if not($hover-item-text-color) and $background-color {\n        $hover-item-text-color: text-contrast($background-color);\n    }\n\n    @if not($focused-item-background) and $background-color {\n        $focused-item-text-color: text-contrast($background-color);\n\n        @if type-of($background-color) == 'color' {\n            $focused-item-background: rgba(text-contrast($background-color), .12);\n        }\n    }\n\n    @if not($focused-item-text-color) and $focused-item-background {\n        $focused-item-text-color: text-contrast($focused-item-background);\n    }\n\n    @if not($selected-item-text-color) and $selected-item-background {\n        $selected-item-text-color: text-contrast($selected-item-background);\n    }\n\n    @if not($selected-hover-item-text-color) and $selected-hover-item-background {\n        $selected-hover-item-text-color: text-contrast($selected-hover-item-background);\n    }\n\n\n    @if not($selected-focus-item-text-color) and $selected-focus-item-background {\n        $selected-focus-item-text-color: text-contrast($selected-focus-item-background);\n    }\n\n    @if not($selected-focus-item-text-color) and $selected-focus-item-background {\n        $selected-focus-item-text-color: text-contrast($selected-focus-item-background);\n    }\n\n\n    @if not($disabled-item-text-color) and $background-color {\n        @if type-of($background-color) == 'color' {\n            $disabled-item-text-color: rgba(text-contrast($background-color), .36);\n        }\n    }\n\n    @if not($disabled-item-text-color) and $disabled-item-background {\n        @if type-of($disabled-item-background) == 'color' {\n            $disabled-item-text-color: rgba(text-contrast($disabled-item-background), .36);\n        }\n    }\n\n    @if not($header-text-color) and $background-color {\n        @if type-of($background-color) == 'color' {\n            $header-text-color: rgba(text-contrast($background-color), .7);\n        }\n    }\n\n    @if not($shadow) {\n        $elevation: map-get($drop-down-schema, 'elevation');\n        $shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        background-color: $background-color,\n        border-radius: $border-radius,\n        header-text-color: $header-text-color,\n        item-text-color: $item-text-color,\n        hover-item-text-color: $hover-item-text-color,\n        hover-item-background: $hover-item-background,\n        focused-item-background: $focused-item-background,\n        focused-item-text-color: $focused-item-text-color,\n        selected-item-background: $selected-item-background,\n        selected-item-text-color: $selected-item-text-color,\n        selected-hover-item-background: $selected-hover-item-background,\n        selected-hover-item-text-color: $selected-hover-item-text-color,\n        selected-focus-item-background: $selected-focus-item-background,\n        selected-focus-item-text-color: $selected-focus-item-text-color,\n        disabled-item-background: $disabled-item-background,\n        disabled-item-text-color: $disabled-item-text-color,\n        shadow: $shadow,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-drop-down($theme) {\n    @include igx-root-css-vars($theme);\n\n    $item-height: (\n        comfortable: rem(40px),\n        cosy: rem(32px),\n        compact: rem(28px)\n    );\n\n    $item-padding-comfortable: rem(24px);\n    $item-padding-cosy: rem(20px);\n    $item-padding-compact: rem(16px);\n\n    $item-padding: (\n        comfortable: 0 $item-padding-comfortable,\n        cosy: 0 $item-padding-cosy,\n        compact: 0 $item-padding-compact\n    );\n\n    $header-item-padding: (\n        comfortable: 0 rem(16px),\n        cosy: 0 rem(12px),\n        compact: 0 rem(8px)\n    );\n\n    %igx-drop-down {\n        max-height: 100%;\n        position: absolute;\n        border-radius: --var($theme, 'border-radius');\n        overflow: hidden;\n    }\n\n    %igx-drop-down__list {\n        overflow-y: auto;\n        z-index: 1;\n        box-shadow: --var($theme, 'shadow');\n        background: --var($theme, 'background-color');\n        min-width: rem(128px);\n\n        &:empty {\n            box-shadow: none;\n        }\n\n        igx-input-group {\n            margin-top: -16px !important;\n        }\n    }\n\n    %igx-drop-down__header,\n    %igx-drop-down__item {\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        width: 100%;\n        white-space: nowrap;\n        height: map-get($item-height, 'comfortable');\n    }\n\n    %igx-drop-down__item {\n        color: --var($theme, 'item-text-color');\n        cursor: pointer;\n        padding: map-get($item-padding, 'comfortable');\n\n        //&%igx-drop-down__list--select {\n        //    max-width: calc(100% + #{$item-padding-comfortable} * 2);\n        //}\n\n        &:focus {\n            outline: 0;\n            outline-color: transparent;\n            background: --var($theme, 'focused-item-background');\n            color: --var($theme, 'focused-item-text-color');\n        }\n\n        &:hover {\n            background: --var($theme, 'hover-item-background');\n            color: --var($theme, 'hover-item-text-color');\n        }\n    }\n\n    %igx-drop-down__item--cosy {\n        height: map-get($item-height, 'cosy');\n        padding: map-get($item-padding, 'cosy');\n        //\n        //&%igx-drop-down__list--select {\n        //    max-width: calc(100% + #{$item-padding-cosy} * 2);\n        //}\n    }\n\n    %igx-drop-down__item--compact {\n        height: map-get($item-height, 'compact');\n        padding: map-get($item-padding, 'compact');\n        //\n        //&%igx-drop-down__list--select {\n        //    max-width: calc(100% + #{$item-padding-compact} * 2);\n        //}\n    }\n\n    [dir='rtl'] {\n        %igx-drop-down__item {\n            justify-content: flex-end;\n            text-align: right;\n        }\n    }\n\n    %igx-drop-down__header {\n        color: --var($theme, 'header-text-color');\n        pointer-events: none;\n        padding: map-get($header-item-padding, 'comfortable');\n    }\n\n    %igx-drop-down__header--cosy {\n        height: map-get($item-height, 'cosy');\n        padding: map-get($header-item-padding, 'cosy');\n    }\n\n    %igx-drop-down__header--compact {\n        height: map-get($item-height, 'compact');\n        padding: map-get($header-item-padding, 'compact');\n    }\n\n    %igx-drop-down__group {\n        pointer-events: auto;\n\n        label {\n            @extend %igx-drop-down__header;\n        }\n\n        %igx-drop-down__item {\n            text-indent: map-get($item-padding, 'comfortable');\n        }\n    }\n\n    %igx-drop-down__item--focused {\n        background: --var($theme, 'focused-item-background');\n        color: --var($theme, 'focused-item-text-color');\n\n        &:hover {\n            background: --var($theme, 'focused-item-background');\n        }\n    }\n\n    %igx-drop-down__item--selected {\n        background: --var($theme, 'selected-item-background');\n        color: --var($theme, 'selected-item-text-color');\n\n        &:hover {\n            background: --var($theme, 'selected-hover-item-background');\n            color: --var($theme, 'selected-hover-item-text-color');\n        }\n    }\n\n    %igx-drop-down__item--selected--focused {\n        background: --var($theme, 'selected-focus-item-background');\n        color: --var($theme, 'selected-focus-item-text-color');\n    }\n\n    %igx-drop-down__item--disabled {\n        background: --var($theme, 'disabled-item-background');\n        color: --var($theme, 'disabled-item-text-color');\n        cursor: default;\n        pointer-events: none;\n\n        &:hover {\n            background: --var($theme, 'disabled-item-background');\n        }\n    }\n}\n\n/// Adds typography styles for the igx-list component.\n/// Uses the 'caption' and 'subtitle-2'\n/// categories from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(header: 'overline', item: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-drop-down-typography(\n    $type-scale,\n    $categories: (\n        header: 'overline',\n        item: 'body-2',\n        select-item: 'subtitle-1'\n    )\n) {\n    $header: map-get($categories, 'header');\n    $item: map-get($categories, 'item');\n    $select-item: map-get($categories, 'select-item');\n\n    @include igx-scope('.igx-typography') {\n        %igx-drop-down__header,\n        %igx-drop-down__group > label {\n            @include igx-type-style($type-scale, $header) {\n                margin: 0;\n            }\n        }\n\n        %igx-drop-down__item {\n            @include igx-type-style($type-scale, $item) {\n                margin: 0;\n            }\n        }\n\n        %igx-drop-down__list--select {\n            %igx-drop-down__item {\n                @include igx-type-style($type-scale, $select-item);\n                @include ellipsis()\n            }\n        }\n    }\n}\n","////\n/// @group Utilities\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Hides the element from the DOM.\n/// @access public\n/// @example scss - Sample usage\n///   input[type=\"checkbox\"] {\n///     @include hide-default();\n///   }\n@mixin hide-default {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    border: none;\n    clip: rect(0, 0, 0, 0);\n    outline: 0;\n    pointer-events: none;\n    overflow: hidden;\n    appearance: none;\n}\n\n/// Generates a linear gradient.\n/// @access public\n/// @param {string} $direction - The direction of the gradient.\n/// @param {List} $color-stops - A list of color stops to be used in the gradient.\n/// @example scss - Sample usage\n///   .bozo {\n///     background: @include linear-gradient(\"to right\", red, orange);\n///   }\n/// @outputs The CSS representation of linear-gradient.\n@mixin linear-gradient($direction, $color-stops...) {\n    // Direction has been omitted and happens to be a color-stop\n    @if is-direction($direction) == false {\n        $color-stops: $direction, $color-stops;\n        $direction: 180deg;\n    }\n    background: linear-gradient($direction, $color-stops);\n}\n\n/// Registers a keyframes animation in the global keyframes registry list.\n/// @access public\n/// @group animations\n/// @param {String} $name - The name of the keyframes animation.\n@mixin keyframes($name) {\n    $keyframe: map-get($keyframes, $name);\n\n    @if $keyframe == null {\n        $keyframe: unique-id();\n        $keyframes: map-merge($keyframes, (#{$name}: $keyframe)) !global;\n\n        @at-root {\n            @keyframes #{$name} {\n                @content;\n            }\n        }\n    }\n}\n\n/// Registers a component to the list of known components.\n/// @access private\n/// @param {String} $name - The component name to register.\n@mixin register-component($name) {\n    $component: map-get($components, $name);\n    @if $component == null {\n        $component: unique-id();\n        $components: map-merge($components, (#{$name}: $component)) !global;\n    }\n}\n\n/// Animates an element.\n/// @access public\n/// @group animations\n/// @param {List} $animate - The list of animation properties.\n/// @example scss - Animating an element\n///  @include fade-in(); // include the 'fade-in' keyframes animation mixin\n///\n///  .bozo {\n///     @include animation('fade-in' .3s ease-out);\n///  }\n@mixin animation($animate...) {\n    $max: length($animate);\n    $animations: '';\n    @for $i from 1 through $max {\n        $animations: #{$animations + nth($animate, $i)};\n        @if $i < $max {\n            $animations: #{$animations + ', '};\n        }\n    }\n    animation: $animations;\n}\n\n/// Applies text-overflow ellipsis to e text element.\n/// This won't work on display flex elements.\n/// @access public\n@mixin ellipsis() {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n/// Generates a CSS class name for a color from a\n/// given name, variant, prefix and suffix\n/// @access private\n/// @param {string} $name - The main class name.\n/// @param {string} $variant - An additional string to be attached to the main class name.\n/// @param {string} $prefix - A prefix to be attached to the name and variant string.\n/// @param {string} $prefix - A suffix to be attached to the name and variant string.\n@mixin gen-color-class($name, $variant, $prefix, $suffix) {\n    $prefix: if($prefix, '#{$prefix}-', '');\n    $suffix: if($suffix, '-#{$suffix}', '');\n\n    .#{$prefix}#{$name}-#{$variant}#{$suffix} {\n        @content;\n    }\n}\n\n/// Generates CSS class names for all colors from\n/// the color palette for a given property, with\n/// optional prefix and suffix attached to the class name.\n/// @access private\n/// @param {string} $prop - The CSS property to assign the palette color to.\n/// @param {string} $prefix - A prefix to be attached to the class name.\n/// @param {string} $suffix - A suffix to be attached to the class name.\n/// @example scss Generate background classes with colors from the palette.\n///   // Will generate class names like\n///   // .my-primary-500-bg { ... };\n///   @include gen-color-classes(\n///     $prop: 'background-color',\n///     $prefix: 'my', $suffix: 'bg'\n///   );\n/// @requires {mixin} gen-color-class\n@mixin gen-color-classes($prop, $prefix, $suffix) {\n    @each $palette-name, $sub-palette in $default-palette {\n        @each $variant, $color in $sub-palette {\n            @if type-of($color) != 'map' {\n                @include gen-color-class($palette-name, $variant, $prefix, $suffix) {\n                    #{$prop}: $color;\n                }\n            }\n        }\n    }\n}\n\n/// Generates CSS variables for a given palette.\n/// @access private\n/// @param {Map} $palette - The igx palette to use to generate css variables for.\n///\n/// @example scss Generate css variables for the `$default-palette`.\n///   @include css-vars-from-palette($default-palette);\n///\n@mixin css-vars-from-palette($palette) {\n    @each $palette-name, $sub-palette in $palette {\n        @each $variant, $color in $sub-palette {\n            @if type-of($color) != 'map' {\n                --igx-#{$palette-name}-#{$variant}: #{$color};\n            }\n        }\n    }\n}\n\n/// Generates CSS variables for a given palette.\n/// @access public\n/// @param {Map} $palette - The igx palette to use to generate css variables for.\n///\n/// @example scss Generate css variables for the `$default-palette`.\n///   @include css-vars-from-palette($default-palette);\n///\n/// @requires {mixin} css-vars-from-palette\n@mixin igx-palette-vars($palette) {\n    $scope: if(is-root(), ':root', '&');\n\n    #{$scope} {\n        @include css-vars-from-palette($palette);\n    }\n}\n\n/// Generates CSS class names for all colors from\n/// the color palette for a given property, with\n/// optional prefix and suffix attached to the class name.\n/// @access private\n/// @param {string} $prop - The CSS property to assign the palette color to.\n/// @param {string} $prefix [null] - A prefix to be attached to the class name.\n/// @param {string} $suffix [igx] - A suffix to be attached to the class name.\n/// @example scss Generate background classes with colors from the palette.\n///   // Will generate class names like\n///   // .igx-primary-500-bg { ... };\n///   @include igx-color-classes(\n///     $prop: 'background-color',\n///     $suffix: 'bg'\n///   );\n/// @requires {mixin} gen-color-classes\n@mixin igx-color-classes($prop, $suffix: null, $prefix: 'igx') {\n    @include gen-color-classes($prop, $prefix, $suffix);\n}\n\n/// Parses a map of key value pairs\n/// from component themes to css variables.\n/// @access private\n/// @param {map} $theme - The component theme to be used to generate css variables.\n/// @example scss Convert theme colors to css variables.\n///   $my-theme: igx-avatar-theme($icon-color: red);\n///   :root {\n///     @include css-vars-from-theme($my-theme);\n///   }\n@mixin css-vars-from-theme($theme) {\n    $prefix: map-get($theme, 'name');\n\n    @each $key, $value in $theme {\n        @if $key != 'name' and $key != 'palette' and type-of($value) != 'map' {\n            --#{$prefix}-#{$key}: #{$value};\n        }\n    }\n}\n\n/// Add theme colors to the global root scope\n/// Ensures the operation is done only once.\n/// @access private\n/// @param {map} $theme - The component theme to register as css vars.\n/// @requires {mixin} css-vars-from-theme\n@mixin igx-root-css-vars($theme) {\n    $scope: &;\n\n    @if map-get($themes, $scope) == null {\n        $id: unique-id();\n        $themes: map-merge($themes, (#{$scope}: $id)) !global;\n        @include igx-css-vars($theme);\n    }\n}\n\n/// Add theme colors to a scope.\n/// @access public\n/// @param {map} $theme - The component theme to get the\n/// @requires {mixin} css-vars-from-theme\n@mixin igx-css-vars($theme) {\n    $scope: if(is-root(), ':root', '&');\n\n    #{$scope} {\n        @include css-vars-from-theme($theme);\n    }\n}\n\n/// Scopes CSS rules to a predefined top-level parent selector.\n/// Respects specificity and selector scopes.\n/// @access private\n/// @param {String} $parent - The selector to be used as top level scope.\n/// @example scss Apply mixin style rules only when '.igx-typography' selector is present.\n///    @mixin igx-card-typography {\n///       @include igx-scope('.igx-typography') {\n///         // style rules...\n///       }\n///    }\n///\n///    // Later\n///    .my-selector {\n///      @include igx-card-typography();\n///    }\n///\n///    // Generated CSS\n///    // .igx-typography .my-selector {\n///    //    ...styles rules as output by igx-card-typography mixin\n///    // }\n@mixin igx-scope($parent) {\n    @each $selector in & {\n        $len: length($selector);\n        @if $len == null {\n            $parent: $parent;\n        } @else {\n            @for $i from 1 through $len {\n                $parent: append($parent, nth($selector, $i));\n            }\n        }\n\n        @at-root #{$parent} {\n            @content;\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Expansion panel Theme\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $header-background [null] - The panel header background color.\n/// @param {Color} $header-focus-background [null] - The panel header focus background color.\n/// @param {Color} $header-title-color [null] - The panel header title text color.\n/// @param {Color} $header-description-color [null] - The panel header description text color.\n/// @param {Color} $header-icon-color [null] - The panel header icon color.\n/// @param {Color} $body-color [null] - The panel body text color.\n/// @param {Color} $body-background [null] - The panel body background color.\n/// @param {Color} $disabled-color [null] - The panel body disabled text color.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for expansion-panel component.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires round-borders\n///\n/// @example scss Change the background color\n///   $my-expansion-panel-theme: igx-expansion-panel($header-background: black);\n///   // Pass the theme to the igx-expansion-panel component mixin\n///   @include igx-expansion-panel($my-igx-expansion-panel-theme);\n@function igx-expansion-panel-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $border-radius:null,\n    $header-background: null,\n    $header-focus-background: null,\n    $header-title-color: null,\n    $header-description-color: null,\n    $header-icon-color: null,\n    $body-color: null,\n    $body-background: null,\n    $disabled-color: null\n) {\n    $name: 'igx-expansion-panel';\n    $expansion-panel-schema: map-get($schema, $name);\n    $theme: apply-palette($expansion-panel-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map-get($expansion-panel-schema, 'border-radius')), 0, 16px\n    );\n\n\n    @if not($header-title-color) and $header-background {\n        $header-title-color: text-contrast($header-background);\n    }\n\n    @if not($header-description-color) and $header-background {\n        @if type-of($header-background) == 'color' {\n            $header-description-color: rgba(text-contrast($header-background), .8);\n        }\n    }\n\n    @if not($header-icon-color) and $header-background {\n        $header-icon-color: text-contrast($header-background);\n    }\n\n    @if not($body-color) and $body-background {\n        $body-color: text-contrast($body-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        header-background: $header-background,\n        border-radius: $border-radius,\n        header-focus-background: $header-focus-background,\n        header-title-color: $header-title-color,\n        header-description-color: $header-description-color,\n        header-icon-color: $header-icon-color,\n        body-color: $body-color,\n        body-background: $body-background,\n        disabled-color: $disabled-color,\n    ));\n}\n\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-expansion-panel($theme) {\n    @include igx-root-css-vars($theme);\n\n    $panel-padding: em(16px, 16px);\n    $panel-compact-padding: em(16px, 16px);\n    $panel-cosy-padding: em(8px, 16px);\n\n    %igx-expansion-panel {\n        display: flex;\n        flex-direction: column;\n        border-radius: --var($theme, 'border-radius');\n        overflow: hidden;\n    }\n\n    %igx-expansion-panel__header-title {\n        color: --var($theme, 'header-title-color');\n        margin-right: rem(16px, 16px);\n    }\n\n    %igx-expansion-panel__header-description {\n        color: --var($theme, 'header-description-color');\n    }\n\n    %igx-expansion-panel__header-title,\n    %igx-expansion-panel__header-description {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n    }\n\n    %igx-expansion-panel__header-inner {\n        display: flex;\n        align-items: center;\n        padding: $panel-padding;\n        cursor: pointer;\n        background: --var($theme, 'header-background');\n\n        &:focus,\n        &:active\n        {\n            background: --var($theme, 'header-focus-background');\n            outline: transparent;\n        }\n    }\n\n    %igx-expansion-panel__title-wrapper {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        flex: 1 0 0%;\n        overflow: hidden;\n    }\n\n    %igx-expansion-panel__header-icon--end {\n        order: 1;\n        margin-left: rem(16px, 16px);\n    }\n\n    %igx-expansion-panel__header-icon--start {\n        order: -1;\n        margin-right: rem(16px, 16px);\n    }\n\n    %igx-expansion-panel__header-icon--none {\n        display: none;\n    }\n\n    %igx-expansion-panel__header-icon--end,\n    %igx-expansion-panel__header-icon--start {\n        display: flex;\n        align-content: center;\n        justify-content: center;\n        user-select: none;\n\n        color: --var($theme, 'header-icon-color');\n\n        igx-icon {\n            color: --var($theme, 'header-icon-color');\n        }\n    }\n\n    %igx-expansion-panel__body {\n        color: --var($theme, 'body-color');\n        background: --var($theme, 'body-background');\n        overflow: hidden;\n    }\n\n    %igx-expansion-panel--disabled {\n        %igx-expansion-panel__header-title,\n        %igx-expansion-panel__header-description {\n            color: --var($theme, 'disabled-color')\n        }\n\n        %igx-expansion-panel__header-icon--start,\n        %igx-expansion-panel__header-icon--end {\n            igx-icon {\n                color: --var($theme, 'disabled-color');\n            }\n        }\n    }\n}\n\n/// Adds typography styles for the igx-expansion-panel component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(title: 'h5', description: 'subtitle-2', body: 'subtitle-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-expansion-panel-typography($type-scale, $categories: (\n    title: 'h5',\n    description: 'subtitle-2',\n    body: 'body-2')\n) {\n    $title: map-get($categories, 'title');\n    $description: map-get($categories, 'description');\n    $body: map-get($categories, '$body');\n\n    @include igx-scope('.igx-typography') {\n        %igx-expansion-panel__header-title {\n            @include igx-type-style($type-scale, $title) {\n                margin: 0;\n            }\n        }\n\n        %igx-expansion-panel__header-description {\n            @include igx-type-style($type-scale, $description) {\n                margin: 0;\n            }\n        }\n\n        %igx-expansion-panel__body {\n            @include igx-type-style($type-scale, $body) {\n                margin: 0;\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access private\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $theme - The grid theme used to style the component.\n/// @param {Map} $palette - The palette map used as base for the component.\n/// @requires igx-color\n/// @requires rem\n/// @requires --var\n@mixin _excel-filtering($theme, $palette) {\n    %grid-excel-filter {\n        height: rem(15px);\n        display: block;\n    }\n\n    %grid-excel-icon {\n        cursor: pointer;\n\n        &.igx-icon {\n            width: rem(15px);\n            height: rem(15px);\n            font-size: rem(15px);\n        }\n    }\n\n    %grid-excel-icon--filtered {\n        &.igx-icon {\n            color: igx-color($palette, 'secondary');\n        }\n    }\n\n    %grid-excel-menu {\n        width: 320px;\n        min-width: 320px;\n        background: --var($theme, 'filtering-row-background');\n        box-shadow: igx-elevation($elevations, 12);\n        border-radius: 4px;\n\n        @include igx-button-group(igx-button-group-theme(\n            $shadow: none,\n            $schema: $dark-schema,\n            $item-background: --var($theme, 'filtering-row-background'),\n            $item-hover-background: igx-color($palette, 'grays', 100),\n            $item-selected-background: igx-color($palette, 'grays', 100),\n            $item-text-color: igx-color($palette, 'grays', 700),\n            $item-hover-text-color: igx-color($palette, 'grays', 800),\n            $item-selected-text-color: igx-color($palette, 'secondary', 500),\n            $item-border-color: transparent,\n            $item-selected-border-color: transparent\n        ));\n    }\n\n    %grid-excel-menu__header {\n        display: flex;\n        align-items: center;\n        padding: rem(16px);\n        color: igx-color($palette, 'grays', 700);\n    }\n\n    %grid-excel-menu__header-actions {\n        display: flex;\n        margin-left: auto;\n\n        [igxButton] + [igxButton] {\n            margin-left: rem(4px);\n        }\n    }\n\n    %grid-excel-menu__footer {\n        display: flex;\n        justify-content: space-between;\n        padding: rem(8px) rem(16px);\n\n        [igxButton] {\n            flex-grow: 1;\n\n            + [igxButton] {\n                margin-left: rem(16px);\n            }\n        }\n    }\n\n    %grid-excel-sort {\n        display: block;\n        padding: rem(8px) rem(16px);\n\n        header {\n            color: igx-color($palette, 'grays', 700);\n            margin-bottom: rem(4px);\n        }\n\n        igx-icon {\n            font-size: rem(18px);\n            width: rem(18px);\n            height: rem(18px);\n            margin-right: rem(8px);\n        }\n    }\n\n    %grid-excel-action--compact {\n        display: flex;\n        align-items: center;\n\n        header {\n            color: igx-color($palette, 'grays', 700);\n            margin-right: auto;\n        }\n    }\n\n    %grid-excel-actions {\n        padding: rem(8px) rem(16px);\n    }\n\n    %grid-excel-move {\n        margin-bottom: rem(8px);\n\n        header {\n            color: igx-color($palette, 'grays', 700);\n            margin-bottom: rem(4px);\n        }\n    }\n\n    %grid-excel-move__buttons {\n        display: flex;\n        justify-content: space-between;\n\n        [igxButton] {\n            flex-grow: 1;\n            width: rem(104px);\n        }\n\n        igx-icon {\n            font-size: rem(18px);\n            width: rem(18px);\n            height: rem(18px);\n        }\n\n        igx-icon + span,\n        span + igx-icon {\n            margin-left: rem(8px);\n        }\n    }\n\n    %grid-excel-actions__action {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: rem(8px) rem(16px);\n        margin: 0 -#{rem(16px)};\n        cursor: pointer;\n        color: igx-color($palette, 'grays', 700);\n        outline-style: none;\n\n        &:hover,\n        &:focus {\n            background: igx-color($palette, 'grays', 100);\n        }\n    }\n\n    %grid-excel-actions__action--disabled {\n        color: igx-color($palette, 'grays', 400);\n        pointer-events: none;\n    }\n\n    %grid-excel-main {\n        display: block;\n        padding: 0 rem(16px);\n\n        igx-list {\n            margin: rem(8px) -#{rem(16px)} 0;\n            border-top: 1px dashed igx-color($palette, 'grays', 300);\n            border-bottom: 1px dashed igx-color($palette, 'grays', 300);\n        }\n    }\n\n    %grid-excel-menu--cosy {\n        %grid-excel-menu__header {\n            padding: rem(8px);\n        }\n\n        %grid-excel-sort {\n            padding: rem(8px);\n        }\n\n        %grid-excel-actions {\n            padding: rem(8px);\n        }\n\n        %grid-excel-actions__action {\n            padding: rem(8px);\n            margin: 0 -#{rem(8px)};\n        }\n\n        %grid-excel-main {\n            padding: 0 rem(8px);\n        }\n\n        igx-list {\n            margin: rem(8px) -#{rem(8px)} 0;\n        }\n\n        %grid-excel-menu__footer {\n            padding: rem(8px);\n        }\n    }\n\n    %grid-excel-menu--compact {\n        %grid-excel-menu__header {\n            padding: rem(4px);\n        }\n\n        %grid-excel-sort {\n            padding: rem(4px);\n\n            @extend %grid-excel-action--compact;\n\n            igx-buttongroup {\n                width: rem(208px);\n\n                [igxButton] > igx-icon + span {\n                    margin-left: rem(8px);\n                }\n            }\n        }\n\n        %grid-excel-move {\n            @extend %grid-excel-action--compact;\n            margin-bottom: 0;\n        }\n\n        %grid-excel-actions {\n            padding: rem(4px);\n        }\n\n        %grid-excel-actions__action {\n            padding: rem(4px);\n            margin: 0 -#{rem(4px)};\n        }\n\n        %grid-excel-main {\n            padding: 0 rem(4px);\n        }\n\n        igx-list {\n            margin: rem(8px) -#{rem(4px)} 0;\n        }\n\n        %grid-excel-menu__footer {\n            padding: rem(8px) rem(4px);\n        }\n    }\n\n    %grid-excel-menu__secondary {\n        width: 520px;\n        min-width: 520px;\n        background: --var($theme, 'filtering-row-background');\n        box-shadow: igx-elevation($elevations, 12);\n        border-radius: rem(4px);\n    }\n\n    %grid-excel-menu__secondary--cosy {\n        %grid-excel-menu__header {\n            padding: rem(8px);\n        }\n\n        %grid-excel-menu__condition {\n            padding: 0 rem(8px);\n        }\n\n        %grid-excel-menu__add-filter {\n            margin: 0 rem(8px) rem(8px);\n        }\n\n        %grid-excel-menu__footer {\n            padding: rem(8px);\n        }\n    }\n\n    %grid-excel-menu__secondary--compact {\n        %grid-excel-menu__header {\n            padding: rem(4px);\n        }\n\n        %grid-excel-menu__condition {\n            padding: 0 rem(4px);\n        }\n\n        %grid-excel-menu__add-filter {\n            margin: 0 rem(4px) rem(4px);\n        }\n\n        %grid-excel-menu__footer {\n            padding: rem(8px) rem(4px);\n        }\n    }\n\n    %grid-excel-menu__secondary-header {\n        border-bottom: 1px solid igx-color($palette, 'grays', 300);\n    }\n\n    %grid-excel-menu__secondary-main {\n        height: 232px;\n        overflow: auto;\n    }\n\n    %grid-excel-menu__secondary-footer {\n        border-top: 1px dashed igx-color($palette, 'grays', 300);\n\n        [igxButton] {\n            flex-grow: 0;\n        }\n    }\n\n    %grid-excel-menu__condition {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        padding: 0 rem(16px);\n\n        igx-input-group {\n            flex-grow: 1;\n            flex-basis: 40%;\n            margin: rem(16px) 0;\n\n            ~ igx-input-group,\n            ~ igx-date-picker {\n                margin-left: rem(16px);\n            }\n        }\n\n        [igxButton='icon'] {\n            margin-left: rem(16px);\n        }\n    }\n\n    %grid-excel-menu__add-filter {\n        margin: 0 rem(16px) rem(16px);\n\n        igx-icon {\n            width: rem(18px);\n            height: rem(18px);\n            font-size: rem(18px);\n            margin-right: rem(8px);\n        }\n    }\n}\n\n/// Adds typography styles for the excel-style-filtering component.\n/// Uses the 'body-1', 'caption'\n/// category from the typographic scale.\n/// @group typography\n/// @access private\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(helper-text: 'caption', input-text: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin _excel-filtering-typography($type-scale, $categories: (\n    header-comfortable: 'overline',\n    header-compact: 'subtitle-1')\n) {\n    $header-comfortable: map-get($categories, 'header-comfortable');\n    $header-compact: map-get($categories, 'header-compact');\n\n\n    %grid-excel-menu {\n        %grid-excel-menu__header > h4 {\n            font-size: rem(18px);\n            margin: 0;\n            line-height: 1;\n            font-weight: 700;\n        }\n    }\n\n    @include igx-scope('.igx-typography') {\n        %grid-excel-menu {\n            %grid-excel-menu__header > h4 {\n                @include igx-type-style($type-scale, 'h6')\n            }\n        }\n\n        %grid-excel-menu__secondary {\n            %grid-excel-menu__header > h4 {\n                @include igx-type-style($type-scale, 'h6');\n            }\n        }\n\n        %grid-excel-sort,\n        %grid-excel-move {\n            header {\n                @include igx-type-style($type-scale, 'overline');\n            }\n        }\n\n        %grid-excel-menu--cosy {\n            %grid-excel-menu__header > h4 {\n                @include igx-type-style($type-scale, 'h6')\n            }\n        }\n\n        %grid-excel-menu--compact {\n            %grid-excel-menu__header > h4 {\n                @include igx-type-style($type-scale, 'subtitle-1')\n            }\n\n            %grid-excel-sort,\n            %grid-excel-move {\n                header {\n                    @include igx-type-style($type-scale, 'body-2');\n                    text-transform: capitalize;\n                }\n            }\n\n            %grid-excel-actions__action {\n                span {\n                    @include igx-type-style($type-scale, 'body-2');\n                }\n            }\n\n            %cbx-label {\n                @include igx-type-style($type-scale, 'body-2');\n            }\n        }\n\n        %grid-excel-menu__secondary--cosy {\n            %grid-excel-menu__header > h4 {\n                @include igx-type-style($type-scale, 'h6');\n            }\n        }\n\n        %grid-excel-menu__secondary--compact {\n            %grid-excel-menu__header > h4 {\n                @include igx-type-style($type-scale, 'subtitle-1');\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n///\n/// @param {Color} $idle-text-color [null] - The input text color in the idle state.\n/// @param {Color} $filled-text-color [null] - The input text color in the filled state.\n/// @param {Color} $focused-text-color [null] - The input text color in the focused state.\n/// @param {Color} $disabled-text-color [null] - The input text color in the disabled state.\n///\n/// @param {Color} $idle-secondary-color [null] - The label color in the idle state.\n/// @param {Color} $filled-secondary-color [null] - The label color in the filled state.\n/// @param {Color} $focused-secondary-color [null] - The label color in the focused state.\n///\n/// @param {Color} $idle-bottom-line-color [null] - The bottom line and border colors in the idle state.\n/// @param {Color} $hover-bottom-line-color [null] - The bottom line and border colors in the hover state.\n/// @param {Color} $focused-bottom-line-color [null] - The bottom line and border colors in the focused state.\n/// @param {Color} $interim-bottom-line-color [null] - The bottom line and border colors during the to-focused transition.\n/// @param {Color} $disabled-bottom-line-color [null] - The bottom line and border colors in the disabled state.\n/// @param {Color} $disabled-border-color [null] - The disabled border color for input groups of type border.\n///\n/// @param {Color} $box-background [null] - The background color of an input group of type box.\n/// @param {Color} $box-disabled-background [null] - The background color of an input group of type box in the disabled state.\n///\n/// @param {Color} $border-background [null] - The background color of an input group of type border.\n/// @param {Color} $border-disabled-background [null] - The background color of an input group of type border in the disabled state.\n///\n/// @param {Color} $search-background [null] - The background color of an input group of type search.\n/// @param {Color} $search-disabled-background [null] - The background color of an input group of type search in the disabled state.\n///\n/// @param {box-shadow} $search-resting-shadow [null] - The shadow color of an input group of type search in its resting state.\n/// @param {box-shadow} $search-hover-shadow [null] - The shadow color of an input group of type search in its hover state.\n/// @param {box-shadow} $search-disabled-shadow [null] - The shadow color of an input group of type search in its disabled state.\n///\n/// @param {Color} $success-secondary-color [null] - The success color used in the valid state.\n/// @param {Color} $warning-secondary-color [null] - The warning color used in the warning state.\n/// @param {Color} $error-secondary-color [null] - The error color used in the error state.\n///\n/// @param {border-radius} $box-border-radius [null] - The border radius used for box input.\n/// @param {border-radius} $border-border-radius [null] - The border radius used for border input.\n/// @param {border-radius} $search-border-radius [null] - The border radius used for search input.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires round-borders\n///\n/// @example scss Change the focused border and label colors\n///   $my-input-group-theme: igx-input-group-theme($focused-secondary-color: pink, $focused-bottom-line-color: pink);\n///   // Pass the theme to the igx-input-group component mixin\n///   @include igx-input-group($my-input-group-theme);\n@function igx-input-group-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $elevations: $elevations,\n\n    $box-border-radius: null,\n    $border-border-radius: null,\n    $search-border-radius: null,\n\n    $idle-text-color: null,\n    $filled-text-color: null,\n    $focused-text-color: null,\n    $disabled-text-color: null,\n\n    $idle-secondary-color: null,\n    $filled-secondary-color: null,\n    $focused-secondary-color: null,\n\n    $idle-bottom-line-color: null,\n    $hover-bottom-line-color: null,\n    $focused-bottom-line-color: null,\n    $interim-bottom-line-color: null,\n    $disabled-bottom-line-color: null,\n    $disabled-border-color: null,\n\n    $box-background: null,\n    $box-disabled-background: null,\n    $border-background: null,\n    $border-disabled-background: null,\n\n    $search-background: null,\n    $search-disabled-background: null,\n\n    $search-resting-shadow: null,\n    $search-hover-shadow: null,\n    $search-disabled-shadow: null,\n\n    $success-secondary-color: null,\n    $warning-secondary-color: null,\n    $error-secondary-color: null,\n\n    $placeholder-color: null,\n    $disabled-placeholder-color: null\n) {\n    $name: 'igx-input-group';\n    $input-group-schema: map-get($schema, $name);\n    $theme: apply-palette($input-group-schema, $palette);\n\n    $box-border-radius: round-borders(\n        if($box-border-radius, $box-border-radius, map-get($input-group-schema, 'box-border-radius')), 0, 20px\n    );\n    $border-border-radius: round-borders(\n        if($border-border-radius, $border-border-radius, map-get($input-group-schema, 'border-border-radius')), 0, 20px\n    );\n    $search-border-radius: round-borders(\n        if($search-border-radius, $search-border-radius, map-get($input-group-schema, 'search-border-radius')), 0, 20px\n    );\n\n    $search-resting-elevation: map-get($input-group-schema, 'search-resting-elevation');\n    $search-hover-elevation: map-get($input-group-schema, 'search-hover-elevation');\n    $search-disabled-elevation: map-get($input-group-schema, 'search-disabled-elevation');\n\n    @if not($placeholder-color) and $box-background {\n        $placeholder-color: text-contrast($box-background);\n    }\n\n    @if not($placeholder-color) and $search-background {\n        $placeholder-color: text-contrast($search-background);\n    }\n\n    @if not($search-resting-shadow) {\n        $search-resting-shadow: igx-elevation($elevations, $search-resting-elevation);\n    }\n\n    @if not($search-hover-shadow) {\n        $search-hover-shadow: igx-elevation($elevations, $search-hover-elevation);\n    }\n\n    @if not($search-disabled-shadow) {\n        $search-disabled-shadow: igx-elevation($elevations, $search-disabled-elevation);\n    }\n\n    @return extend($theme, (\n        palette: $palette,\n        name: $name,\n\n        idle-text-color: $idle-text-color,\n        filled-text-color: $filled-text-color,\n        focused-text-color: $focused-text-color,\n        disabled-text-color: $disabled-text-color,\n\n        box-border-radius: $box-border-radius,\n        border-border-radius: $border-border-radius,\n        search-border-radius: $search-border-radius,\n\n        idle-secondary-color: $idle-secondary-color,\n        filled-secondary-color: $filled-secondary-color,\n        focused-secondary-color: $focused-secondary-color,\n\n        idle-bottom-line-color: $idle-bottom-line-color,\n        hover-bottom-line-color: $hover-bottom-line-color,\n        focused-bottom-line-color: $focused-bottom-line-color,\n        interim-bottom-line-color: $interim-bottom-line-color,\n        disabled-bottom-line-color: $disabled-bottom-line-color,\n        disabled-border-color: $disabled-border-color,\n\n        box-background: $box-background,\n        box-disabled-background: $box-disabled-background,\n\n        border-background: $border-background,\n        border-disabled-background: $border-disabled-background,\n\n        search-background: $search-background,\n        search-disabled-background: $search-disabled-background,\n\n        search-resting-shadow: $search-resting-shadow,\n        search-hover-shadow: $search-hover-shadow,\n        search-disabled-shadow: $search-disabled-shadow,\n\n        success-secondary-color: $success-secondary-color,\n        warning-secondary-color: $warning-secondary-color,\n        error-secondary-color: $error-secondary-color,\n        placeholder-color: $placeholder-color,\n        disabled-placeholder-color: $disabled-placeholder-color,\n    ));\n}\n\n\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires {mixin} ellipsis\n/// @requires --var\n@mixin igx-input-group($theme) {\n    @include igx-root-css-vars($theme);\n\n    $palette: map-get($theme, 'palette');\n\n    $transition-timing: .25s $ease-out-cubic;\n\n    $required-symbol: '*';\n    $required-symbol-margin: 2px;\n\n    // This creates an inverse relationship\n    // between the value of the base scale size and\n    // the sizing of all inner elements.\n    // i.e. the bigger the scale size,\n    // the smaller the padding of the inner items.\n    $base-scale-size: (\n        'comfortable': 16px,\n        'cosy': 19px,\n        'compact': 22px\n    );\n\n    $hint-padding-top: rem(6px, map-get($base-scale-size, 'comfortable'));\n    $hint--box-margin: rem(12px, map-get($base-scale-size, 'comfortable'));\n\n    %form-group-display {\n        position: relative;\n        display: block;\n        color: --var($theme, 'idle-text-color');\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix;\n            outline-style: none;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix;\n            outline-style: none;\n        }\n\n        input,\n        textarea {\n            font: inherit;\n            margin: 0;\n        }\n\n        textarea {\n            overflow: auto;\n        }\n\n        // Don't show the number spinner\n        input[type='number']::-webkit-inner-spin-button {\n            -webkit-appearance: none;\n            height: auto;\n        }\n\n        input[type='search']::-webkit-search-cancel-button,\n        input[type='search']::-webkit-search-decoration {\n            -webkit-appearance: none;\n        }\n    }\n\n    %form-group-display--cosy {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--cosy;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--cosy;\n        }\n    }\n\n    %form-group-display--compact {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--compact;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--compact;\n        }\n    }\n\n    %form-group-display--no-margin {\n        margin-top: 0;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--box;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--box;\n        }\n    }\n\n    %form-group-display--no-margin-cosy {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--box-cosy;\n        }\n    }\n\n    %form-group-display--no-margin-compact {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--box-compact;\n        }\n    }\n\n    %form-group-display--error {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--error;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--error;\n        }\n    }\n\n    %form-group-box-wrapper {\n        border-radius: --var($theme, 'box-border-radius');\n        overflow: hidden;\n    }\n\n    %form-group-display--hover {\n        cursor: pointer;\n    }\n\n    %form-group-display--disabled {\n        pointer-events: none;\n        user-select: none;\n        color: --var($theme, 'disabled-text-color');\n    }\n\n    %form-group-bundle {\n        position: relative;\n        display: flex;\n        align-items: center;\n        flex-flow: row nowrap;\n        padding-top: rem(18px, map-get($base-scale-size, 'comfortable'));\n        box-shadow: inset 0 -1px 0 0 --var($theme, 'idle-bottom-line-color');\n        transition: box-shadow $transition-timing, color $transition-timing;\n    }\n\n    %form-group-bundle--cosy {\n        padding-top: rem(18px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle--compact {\n        padding-top: rem(18px, map-get($base-scale-size, 'compact'));\n    }\n\n    %form-group-bundle--box {\n        padding: 0 rem(16px, map-get($base-scale-size, 'comfortable'));\n        background: --var($theme, 'box-background');\n        box-shadow: inset 0 -2px 0 0 --var($theme, 'idle-bottom-line-color');\n\n        %form-group-label--box + %form-group-input--box {\n            transform: translateY(0);\n        }\n    }\n\n    %form-group-bundle--box-cosy {\n        padding: 0 rem(16px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle--box-compact {\n        padding: 0 rem(16px, map-get($base-scale-size, 'compact'));\n    }\n\n    %form-group-bundle--hover {\n        cursor: pointer;\n        box-shadow: inset 0 -2px 0 0 --var($theme, 'hover-bottom-line-color');\n    }\n\n    %form-group-bundle--focus {\n        caret-color: --var($theme, 'focused-secondary-color');\n        box-shadow: inset 0 -2px 0 0 --var($theme, 'interim-bottom-line-color');\n    }\n\n    %form-group-bundle--success {\n        caret-color: --var($theme, 'success-secondary-color');\n        box-shadow: inset 0 -1px 0 0 --var($theme, 'success-secondary-color');\n    }\n\n    %form-group-bundle--error {\n        caret-color: --var($theme, 'error-secondary-color');\n        box-shadow: inset 0 -1px 0 0 --var($theme, 'error-secondary-color');\n    }\n\n    %form-group-bundle--disabled {\n        box-shadow: none;\n        background-image: linear-gradient(to right, --var($theme, 'disabled-bottom-line-color') 40%, transparent 10%);\n        background-position: bottom;\n        background-size: 4px 1px;\n        background-repeat: repeat-x;\n    }\n\n    %form-group-bundle--box-disabled {\n        background: --var($theme, 'box-disabled-background');\n    }\n\n    %form-group-bundle--border {\n        padding: 0 rem(16px, map-get($base-scale-size, 'comfortable'));\n        box-shadow: inset 0 0 0 1px --var($theme, 'idle-bottom-line-color');\n        border-radius: --var($theme, 'border-border-radius');\n        background: --var($theme, 'border-background');\n\n        %form-group-label--box + %form-group-input--box {\n            transform: translateY(0);\n        }\n    }\n\n    %form-group-bundle--border-cosy {\n        padding: 0 rem(16px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle--border-compact {\n        padding: 0 rem(16px, map-get($base-scale-size, 'compact'));\n    }\n\n    %form-group-bundle-border--hover {\n        box-shadow: inset 0 0 0 2px --var($theme, 'idle-text-color');\n    }\n\n    %form-group-bundle-border--focus {\n        box-shadow: inset 0 0 0 2px --var($theme, 'focused-bottom-line-color');\n    }\n\n    %form-group-bundle-border--error {\n        box-shadow: inset 0 0 0 2px --var($theme, 'error-secondary-color');\n    }\n\n    %form-group-bundle-border--success {\n        box-shadow: inset 0 0 0 2px --var($theme, 'success-secondary-color');\n    }\n\n    %form-group-bundle-border--disabled {\n        background: --var($theme, 'border-disabled-background');\n        box-shadow: inset 0 0 0 1px --var($theme, 'disabled-border-color');\n    }\n\n    %form-group-bundle--search {\n        padding: 0 rem(16px, map-get($base-scale-size, 'comfortable'));\n        border-radius: --var($theme, 'search-border-radius');\n        border-bottom: none;\n        background: --var($theme, 'search-background');\n        box-shadow: --var($theme, 'search-resting-shadow');\n\n        %form-group-label--box + %form-group-input--box {\n            transform: translateY(0);\n        }\n    }\n\n    %form-group-bundle--search-cosy {\n        padding: 0 rem(16px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle--search-compact {\n        padding: 0 rem(16px, map-get($base-scale-size, 'compact'));\n    }\n\n    %form-group-bundle-search--hover {\n        box-shadow: --var($theme, 'search-hover-shadow');\n    }\n\n    %form-group-bundle-search--focus {\n        box-shadow: --var($theme, 'search-hover-shadow');\n    }\n\n    %form-group-bundle-search--error {\n        box-shadow: --var($theme, 'search-hover-shadow');\n    }\n\n    %form-group-bundle-search--success {\n        box-shadow: --var($theme, 'search-hover-shadow');\n    }\n\n    %form-group-bundle-search--disabled {\n        background: --var($theme, 'search-disabled-background');\n        box-shadow: --var($theme, 'search-disabled-shadow');\n    }\n\n    %form-group-bundle-main {\n        position: relative;\n        flex-grow: 1;\n    }\n\n    %form-group-bundle-main--box {\n        padding-top: rem(18px, map-get($base-scale-size, 'comfortable'));\n    }\n\n    %form-group-bundle-main--box-cosy {\n        padding-top: rem(18px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle-main--box-compact {\n        padding-top: rem(18px, map-get($base-scale-size, 'compact'));\n    }\n\n    %form-group-label {\n        @include ellipsis();\n        position: absolute;\n        width: 100%;\n        transform: translateY(50%); /* 8px, base is 16px */\n        line-height: 1 !important;\n        height: rem(18px);\n        backface-visibility: hidden;\n        will-change: transform;\n        transform-origin: top left;\n        transition: transform $transition-timing, color $transition-timing, margin $transition-timing;\n\n        [dir='rtl'] & {\n            transform-origin: top right;\n        }\n    }\n\n    %form-group-label--cosy {\n        margin-top: rem(-2px);\n    }\n\n    %form-group-label--compact {\n        margin-top: rem(-4px);\n    }\n\n    %form-group-label--box {\n        transform: translateY(0);\n    }\n\n    %form-group-label--float {\n        overflow: visible;\n        transform: translateY(-50%) scale(.75);\n        margin-top: auto;\n    }\n\n    %form-group-label--fixed {\n        transition: color $transition-timing;\n    }\n\n    %form-group-label--focus {\n        color: --var($theme, 'focused-secondary-color');\n    }\n\n    %form-group-label--success {\n        color: --var($theme, 'success-secondary-color');\n    }\n\n    %form-group-label--error {\n        color: --var($theme, 'error-secondary-color');\n    }\n\n    %form-group-label--required {\n        &::after {\n            content: '#{$required-symbol}';\n            font-size: inherit;\n            vertical-align: top;\n            margin-left: $required-symbol-margin; /* 2px base is 16px */\n        }\n    }\n\n    %form-group-input {\n        position: relative;\n        display: block;\n        border: none;\n        height: rem(32px, map-get($base-scale-size, 'comfortable'));\n        line-height: 0 !important; /* resets typography styles */\n        width: 100%;\n        min-width: 0;\n        overflow: visible;\n        background: transparent;\n        color: --var($theme, 'filled-text-color');\n        outline-style: none;\n        box-shadow: none;\n        border-top: rem(3px) solid transparent;\n        padding-bottom: rem(3px);\n\n        &::-webkit-input-placeholder {\n            line-height: normal;\n        }\n\n        &::placeholder {\n            color: --var($theme, 'placeholder-color');\n            opacity: 1;\n        }\n    }\n\n    %form-group-input--cosy {\n        height: rem(32px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-input--compact {\n        font-size: rem(map-get($base-scale-size, 'compact') - 1px, map-get($base-scale-size, 'compact'));\n        height: rem(32px, map-get($base-scale-size, 'compact'));\n    }\n\n    %chrome-autofill-fix {\n        &:-webkit-autofill,\n        &:-webkit-autofill:hover,\n        &:-webkit-autofill:focus,\n        &:-webkit-autofill:active { -webkit-transition-delay: 99999s; }\n    }\n\n    %edge-clear-icon-fix {\n        &::-ms-clear {\n            display: none;\n        }\n    }\n\n    %form-group-input--box {\n        transform: translateY(-25%);\n    }\n\n    %form-group-input--hover {\n        cursor: pointer;\n    }\n\n    %form-group-input--focus {\n        cursor: text;\n        color: --var($theme, 'focused-text-color');\n    }\n\n    %form-group-input--disabled {\n        color: --var($theme, 'disabled-text-color');\n\n        &::placeholder {\n            color: --var($theme, 'disabled-placeholder-color');\n        }\n    }\n\n    %form-group-textarea {\n        min-height: rem(82px, map-get($base-scale-size, 'comfortable')); /* 3 lines * 22px + 8px bottom padding + 8px top padding */\n        margin-right: -#{rem(16px, map-get($base-scale-size, 'comfortable'))}; /* this fixes resizing in chrome !?!? */\n        line-height: normal !important; /* resets typography styles */\n        height: auto;\n        resize: vertical;\n        overflow: hidden;\n\n        [dir='rtl'] & {\n            margin-right: initial;\n            margin-left: -#{rem(16px, map-get($base-scale-size, 'comfortable'))};\n        }\n    }\n\n    %form-group-textarea--cosy {\n        min-height: rem(82px, map-get($base-scale-size, 'cosy'));\n        margin-right: -#{rem(16px, map-get($base-scale-size, 'cosy'))};\n\n        [dir='rtl'] & {\n            margin-left: -#{rem(16px, map-get($base-scale-size, 'cosy'))};\n        }\n    }\n\n    %form-group-textarea--compact {\n        min-height: rem(82px, map-get($base-scale-size, 'compact'));\n        margin-right: -#{rem(16px, map-get($base-scale-size, 'compact'))};\n\n        [dir='rtl'] & {\n            margin-left: -#{rem(16px, map-get($base-scale-size, 'compact'))};\n        }\n    }\n\n    %form-group-textarea--box {\n        width: calc(100% + #{rem(16px, map-get($base-scale-size, 'comfortable')) * 2}); /* add the padding to the width */\n        margin: 0 -#{rem(16px, map-get($base-scale-size, 'comfortable'))};\n        padding-left: rem(16px, map-get($base-scale-size, 'comfortable'));\n        padding-right: rem(16px, map-get($base-scale-size, 'comfortable'));\n    }\n\n    %form-group-textarea--box-cosy {\n        width: calc(100% + #{rem(16px, map-get($base-scale-size, 'cosy')) * 2}); /* add the padding to the width */\n        margin: 0 -#{rem(16px, map-get($base-scale-size, 'cosy'))};\n        padding-left: rem(16px, map-get($base-scale-size, 'cosy'));\n        padding-right: rem(16px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-textarea--box-compact {\n        width: calc(100% + #{rem(16px, map-get($base-scale-size, 'compact')) * 2}); /* add the padding to the width */\n        margin: 0 -#{rem(16px, map-get($base-scale-size, 'compact'))};\n        padding-left: rem(16px, map-get($base-scale-size, 'compact'));\n        padding-right: rem(16px, map-get($base-scale-size, 'compact'));\n    }\n\n    %form-group-prefix,\n    %form-group-suffix {\n        position: relative;\n        display: inline-flex;\n        align-items: center;\n        height: rem(32px, map-get($base-scale-size, 'comfortable'));\n        transition: color $transition-timing;\n    }\n\n    %form-group-prefix {\n        padding: rem(8px, map-get($base-scale-size, 'comfortable'))\n            rem(8px, map-get($base-scale-size, 'comfortable'))\n            rem(8px, map-get($base-scale-size, 'comfortable'))\n            0;\n\n        [dir='rtl'] & {\n            padding: rem(8px, map-get($base-scale-size, 'comfortable'))\n                0\n                rem(8px, map-get($base-scale-size, 'comfortable'))\n                rem(8px, map-get($base-scale-size, 'comfortable'));\n        }\n    }\n\n    %form-group-suffix {\n        padding: rem(8px, map-get($base-scale-size, 'comfortable')) 0;\n    }\n\n    %form-group-prefix--cosy,\n    %form-group-suffix--cosy {\n        height: rem(32px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-prefix--compact,\n    %form-group-suffix--compact {\n        font-size: rem(map-get($base-scale-size, 'compact') - 1px, map-get($base-scale-size, 'compact'));\n        height: rem(32px, map-get($base-scale-size, 'compact'));\n    }\n\n    %form-group-prefix--cosy {\n        padding: rem(8px, map-get($base-scale-size, 'cosy'))\n            rem(8px, map-get($base-scale-size, 'cosy'))\n            rem(8px, map-get($base-scale-size, 'cosy'))\n            0;\n\n        [dir='rtl'] & {\n            padding: rem(8px, map-get($base-scale-size, 'cosy'))\n                0\n                rem(8px, map-get($base-scale-size, 'cosy'))\n                rem(8px, map-get($base-scale-size, 'cosy'));\n        }\n    }\n\n    %form-group-prefix--compact {\n        padding: rem(8px, map-get($base-scale-size, 'compact'))\n            rem(8px, map-get($base-scale-size, 'compact'))\n            rem(8px, map-get($base-scale-size, 'compact'))\n            0;\n\n        [dir='rtl'] & {\n            padding: rem(8px, map-get($base-scale-size, 'compact'))\n                0\n                rem(8px, map-get($base-scale-size, 'compact'))\n                rem(8px, map-get($base-scale-size, 'compact'));\n        }\n    }\n\n    %form-group-suffix--cosy {\n        padding: rem(8px, map-get($base-scale-size, 'cosy')) 0;\n    }\n\n    %form-group-suffix--compact {\n        padding: rem(8px, map-get($base-scale-size, 'compact')) 0;\n    }\n\n    %form-group-prefix--box,\n    %form-group-suffix--box {\n        height: 100%;\n    }\n\n    %form-group-prefix--box {\n        padding: 0 rem(8px, map-get($base-scale-size, 'comfortable')) 0 0;\n\n        [dir='rtl'] & {\n            padding: 0 0 0 rem(8px, map-get($base-scale-size, 'comfortable')); /* 8px, base is 16px */\n        }\n    }\n\n    %form-group-prefix--box-cosy {\n        padding: 0 rem(8px, map-get($base-scale-size, 'cosy')) 0 0;\n\n        [dir='rtl'] & {\n            padding: 0 0 0 rem(8px, map-get($base-scale-size, 'cosy')); /* 8px, base is 16px */\n        }\n    }\n\n    %form-group-prefix--box-compact {\n        padding: 0 rem(8px, map-get($base-scale-size, 'compact')) 0 0;\n\n        [dir='rtl'] & {\n            padding: 0 0 0 rem(8px, map-get($base-scale-size, 'compact')); /* 8px, base is 16px */\n        }\n    }\n\n    %form-group-suffix--box {\n        padding: 0;\n    }\n\n    %form-group-prefix--error,\n    %form-group-suffix--error {\n        color: --var($theme, 'error-secondary-color');\n    }\n\n    %form-group-border {\n        height: 2px; /* 2px, when base is 16px */\n        margin-top: -2px; /* 2px, when base is 16px */\n        transform: scaleX(0);\n        transform-origin: center;\n        background: --var($theme, 'focused-secondary-color');\n    }\n\n    %form-group-border--focus {\n        transform: scaleX(1);\n        transition: transform $transition-timing;\n    }\n\n    %form-group-border--success {\n        background: --var($theme, 'success-secondary-color');\n    }\n\n    %form-group-border--warning {\n        background: --var($theme, 'warning-secondary-color');\n    }\n\n    %form-group-border--error {\n        background: --var($theme, 'error-secondary-color');\n    }\n\n    %form-group-border--hidden {\n        display: none;\n    }\n\n    %form-group-helper {\n        position: relative;\n        display: flex;\n        justify-content: space-between;\n        padding-top: rem(6px, map-get($base-scale-size, 'comfortable'));\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %form-group-help--cosy {\n        padding-top: rem(6px, map-get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-help--compact {\n        padding-top: rem(6px, map-get($base-scale-size, 'compact'));\n    }\n\n    %form-group-helper--box {\n        margin-left: $hint--box-margin; /* 16px, base is 12px */\n        margin-right: $hint--box-margin; /* 16px, base is 12px */\n    }\n\n    %form-group-helper--success {\n        color: --var($theme, 'success-secondary-color');\n    }\n\n    %form-group-helper--error {\n        color: --var($theme, 'error-secondary-color');\n    }\n\n    %form-group-helper-item {\n        @include ellipsis();\n        position: relative;\n        min-width: 0;\n        max-width: 100%;\n    }\n\n    %form-group-helper-item--start {\n        order: 0;\n    }\n\n    %form-group-helper-item--end {\n        order: 1;\n    }\n}\n\n/// Adds typography styles for the igx-input-group component.\n/// Uses the 'body-1', 'caption'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(helper-text: 'caption', input-text: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-input-group-typography($type-scale, $categories: (\n    helper-text: 'caption',\n    input-text: 'subtitle-1')\n) {\n    $helper-text: map-get($categories, 'helper-text');\n    $input-text: map-get($categories, 'input-text');\n    $input-text-props: igx-type-scale-category($type-scale, $input-text);\n\n    @include igx-scope('.igx-typography') {\n        %form-group-input {\n            @include igx-type-style($type-scale, $input-text) {\n                margin: 0;\n            }\n        }\n\n        %form-group-helper {\n            @include igx-type-style($type-scale, $helper-text) {\n                margin: 0;\n            }\n        }\n\n        %form-group-prefix,\n        %form-group-suffix {\n            @include igx-type-style($type-scale, $input-text) {\n                margin: 0;\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n///\n/// @param {Color} $background [null] - The navbar background color.\n/// @param {Color} $text-color [null] - The navbar text color.\n/// @param {box-shadow} $shadow [null] - The shadow of the navbar.\n/// @param {Color} $idle-icon-color [null] - The navbar idle icon color.\n/// @param {Color} $hover-icon-color [null] - The navbar hover icon color.\n/// @param {Bool} $disable-shadow [true] - Sets the navbar shadow visibility.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevations\n/// @requires $elevations\n///\n/// @example scss Change the background color\n///   $my-navbar-theme: igx-navbar-theme($background: green);\n///   // Pass the theme to the igx-navbar component mixin\n///   @include igx-navbar($my-navbar-theme);\n@function igx-navbar-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $elevations: $elevations,\n\n    $background: null,\n    $text-color: null,\n    $shadow: null,\n    $idle-icon-color: null,\n    $hover-icon-color: null,\n    $disable-shadow: false\n) {\n    $name: 'igx-navbar';\n    $navbar-schema: map-get($schema, $name);\n    $theme: apply-palette($navbar-schema, $palette);\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @if not($idle-icon-color) and $background {\n        $idle-icon-color: text-contrast($background);\n    }\n\n    @if not($hover-icon-color) and $background {\n        $hover-icon-color: text-contrast($background);\n    }\n\n    @if not($shadow) {\n        $elevation: map-get($navbar-schema, 'elevation');\n        $shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @if $disable-shadow {\n        $shadow: none;\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        background: $background,\n        text-color: $text-color,\n        idle-icon-color: $idle-icon-color,\n        hover-icon-color: $hover-icon-color,\n        shadow: $shadow\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires em\n/// @requires --var\n@mixin igx-navbar($theme) {\n    @include igx-root-css-vars($theme);\n\n    $navbar-padding: 0 em(16px);\n    $navbar-title-fz: em(18px, 16px);\n    $navbar-title-lh: em(18px, 16px);\n    $navbar-title-margin: 0;\n\n    %igx-navbar-display {\n        display: flex;\n        position: relative;\n        flex-flow: row nowrap;\n        align-items: center;\n        justify-content: space-between;\n        width: 100%;\n        height: 56px;\n        padding: $navbar-padding;\n        background: --var($theme, 'background');\n        color: --var($theme, 'text-color');\n        box-shadow: --var($theme, 'shadow');\n        z-index: 4;\n    }\n\n    %igx-navbar-title {\n        margin: $navbar-title-margin;\n    }\n\n    %igx-navbar-bundle {\n        display: flex;\n        align-items: center;\n        user-select: none;\n\n        > * + * {\n            margin-left: 16px;\n        }\n    }\n\n    %igx-navbar-icon-display {\n        igx-icon {\n            cursor: pointer;\n            color: --var($theme, 'idle-icon-color');\n            transition: color .15s $ease-out-quad;\n\n            &:hover {\n                color: --var($theme, 'hover-icon-color');\n            }\n        }\n    }\n\n    igx-action-icon {\n        display: flex;\n        align-items: center;\n    }\n}\n\n/// Adds typography styles for the igx-navbar component.\n/// Uses the 'body-1', 'caption'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(title: 'h6')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-navbar-typography($type-scale, $categories: (title: 'h6')) {\n    $title: map-get($categories, 'title');\n\n    @include igx-scope('.igx-typography') {\n        %igx-navbar-title {\n            @include igx-type-style($type-scale, $title);\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n///\n/// @param {Color} $background [null] - The navigation drawer background color.\n/// @param {Color} $border-color [null] - The navigation drawer right border color.\n/// @param {Color} $item-header-text-color [null] - The header's idle text color.\n/// @param {Color} $item-text-color [null] - The item's idle text color.\n/// @param {Color} $item-icon-color [null] - The item's icon color.\n/// @param {Color} $item-active-text-color [null] - The item's active text color.\n/// @param {Color} $item-active-background [null] - The item's active background color.\n/// @param {Color} $item-active-icon-color [null] - The item's icon active color.\n/// @param {Color} $item-hover-background [null] - The item's hover background color.\n/// @param {Color} $item-hover-text-color [null] - The item's hover text color.\n/// @param {Color} $item-hover-icon-color [null] - The item's hover icon color.\n/// @param {Color} $shadow [null] - Sets a custom shadow to be used by the drawer.\n/// @param {border-radius} border-radius [null] - The border radius used for the navdrawer.\n/// @param {border-radius} item-border-radius [null] - The border radius used for the navdrawer item.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires round-borders\n///\n/// @example scss Change the background and item colors\n///   $navdrawer-theme: igx-navdrawer-theme(\n///     $background: #2d313a,\n///     $item-active-background: #ecc256,\n///     $item-icon-color: #ecc256\n///   );\n///   // Pass the theme to the igx-navdrawer component mixin\n///   @include igx-navdrawer($navdrawer-theme);\n@function igx-navdrawer-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $elevations: $elevations,\n\n    $border-radius: null,\n    $item-border-radius: null,\n\n    $background: null,\n    $border-color: null,\n\n    $item-header-text-color: null,\n    $item-text-color: null,\n    $item-icon-color: null,\n\n    $item-active-text-color: null,\n    $item-active-background: null,\n    $item-active-icon-color:null,\n\n    $item-hover-background: null,\n    $item-hover-text-color: null,\n    $item-hover-icon-color: null,\n    $shadow: null\n) {\n    $name: 'igx-navdrawer';\n    $navdrawer-schema: map-get($schema, $name);\n    $theme: apply-palette($navdrawer-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map-get($navdrawer-schema, 'border-radius')), 0, 36px\n    );\n\n    $item-border-radius: round-borders(\n        if($item-border-radius, $item-border-radius, map-get($navdrawer-schema, 'item-border-radius')), 0, 24px\n    );\n\n    @if not($item-header-text-color) and $background {\n        $item-header-text-color: text-contrast($background);\n    }\n\n    @if not($item-text-color) and $background {\n        $item-text-color: text-contrast($background);\n    }\n\n    @if not($item-icon-color) and $background {\n        $item-icon-color: text-contrast($background);\n    }\n\n    @if not($item-active-background) and $background {\n        @if type-of($background) == 'color' {\n            $item-active-background: rgba(text-contrast($background), .24);\n        }\n    }\n\n    @if not($item-active-text-color) and $item-active-background {\n        $item-active-text-color: text-contrast($item-active-background);\n    }\n\n    @if not($item-active-icon-color) and $item-active-background {\n        $item-active-icon-color: text-contrast($item-active-background);\n    }\n\n    @if not($item-hover-background) and $background {\n        @if type-of($background) == 'color' {\n            $item-hover-background: rgba(text-contrast($background), .08);\n        }\n    }\n\n    @if not($item-hover-text-color) and $background {\n        $item-hover-text-color: text-contrast($background);\n    }\n\n    @if not($shadow) {\n        $elevation: map-get($navdrawer-schema, 'elevation');\n        $shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        border-radius: $border-radius,\n        item-border-radius: $item-border-radius,\n        background: $background,\n        border-color: $border-color,\n        item-text-color:$item-text-color,\n        item-active-text-color: $item-active-text-color,\n        item-active-background: $item-active-background,\n        item-hover-background: $item-hover-background,\n        item-hover-text-color:$item-hover-text-color,\n        item-header-text-color:$item-header-text-color,\n        item-icon-color:$item-icon-color,\n        item-active-icon-color:$item-active-icon-color,\n        item-hover-icon-color: $item-hover-icon-color,\n        shadow: $shadow,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires $overlay-color\n/// @requires rem\n/// @requires --var\n@mixin igx-navdrawer($theme) {\n    @include igx-root-css-vars($theme);\n\n    %animation {\n        transition: flex-basis;\n        transition-duration: .3s;\n        transition-timing-function: $ease-out-quad;\n    }\n\n    %aside {\n        position: fixed;\n        height: 100%;\n        max-width: 90%;\n        min-height: 100%;\n        overflow-x: hidden;\n        background: --var($theme, 'background');\n        top: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 999;\n        transition: width, transform;\n        transition-timing-function: $ease-out-quad, $ease-out-quad;\n        box-shadow: --var($theme, 'shadow');\n        border-right: 1px solid --var($theme, 'border-color');\n        border-radius: --var($theme, 'border-radius');\n    }\n\n    %aside-panning {\n        overflow-x: hidden;\n        transition: none;\n    }\n\n    %aside--pinned {\n        position: relative;\n        max-width: 100%;\n        box-shadow: none;\n        z-index: 0;\n    }\n\n    %aside--collapsed--right {\n        transform: translate3d(300px, 0, 0);\n        box-shadow: none;\n    }\n\n    %igx-nav-drawer__aside--collapsed {\n        transform: none;\n        width: 0;\n        overflow: hidden;\n        border: none;\n    }\n\n    %aside--collapsed {\n        transform: translate3d(-300px, 0, 0);\n        box-shadow: none;\n    }\n\n    %aside--right {\n        left: auto;\n        right: 0;\n        border-right: none;\n        border-left: 1px solid --var($theme, 'border-color');\n    }\n\n    %aside--mini {\n        width: rem(60px);\n        transition-duration: .2s, .2s;\n    }\n\n    %aside--normal {\n        width: rem(242px);\n        transition-duration: .3s, .3s;\n    }\n\n    %overlay {\n        opacity: 1;\n        background: $overlay-color;\n        transition: opacity, visibility;\n        transition-duration: .25s, .25s;\n        transition-timing-function: ease-in, step-start;\n        transition-delay: 0s, 0s;\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        visibility: visible;\n        z-index: 999;\n    }\n\n    %overlay-panning {\n        transform: translate3d(0, 0, 0);\n        transition: none;\n    }\n\n    %overlay--hidden {\n        transition-timing-function: ease-in-out, step-end;\n        visibility: hidden;\n        opacity: 0;\n    }\n\n    %overlay-panning--hidden {\n        /* must be visible during pan.. */\n        visibility: visible;\n    }\n\n    %item {\n        position: relative;\n        display: flex;\n        flex-flow: row nowrap;\n        color: --var($theme, 'item-text-color');\n        max-height: rem(48px);\n        padding: rem(12px) rem(16px);\n        cursor: pointer;\n        align-items: center;\n        user-select: none;\n        outline: transparent;\n        white-space: nowrap;\n        border-radius: --var($theme, 'item-border-radius');\n        margin: 8px;\n\n        > igx-icon + span {\n            margin-left: rem(32px);\n        }\n\n        &[dir='rtl'] {\n            > igx-icon + span {\n                margin-right: rem(32px);\n            }\n        }\n\n        igx-icon {\n            color: --var($theme, 'item-icon-color');\n        }\n\n        &:hover,\n        &:focus {\n            background: --var($theme, 'item-hover-background');\n            color: --var($theme, 'item-hover-text-color');\n\n            igx-icon {\n                color: --var($theme, 'item-hover-icon-color');\n            }\n        }\n    }\n\n    %item--active {\n        // should be app primary color\n        color: --var($theme, 'item-active-text-color');\n        background: --var($theme, 'item-active-background');\n\n        igx-icon {\n            color: --var($theme, 'item-active-icon-color');\n        }\n\n        &:focus,\n        &:hover {\n            color: --var($theme, 'item-active-text-color');\n            background: --var($theme, 'item-active-background');\n\n            igx-icon {\n                color: --var($theme, 'item-active-icon-color');\n            }\n        }\n    }\n\n    %item--header {\n        display: block;\n        padding: rem(12px) rem(16px);\n        white-space: nowrap;\n        color: --var($theme, 'item-header-text-color');\n    }\n\n    %style-dummy {\n        height: 0;\n        background: none;\n        box-shadow: none;\n        transition: none;\n        visibility: hidden;\n    }\n}\n\n/// Adds typography styles for the igx-navdrawer component.\n/// Uses the 'subtitle-1', 'subtitle-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(item: 'subtitle-2', header: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-navdrawer-typography(\n    $type-scale,\n    $categories: (\n        item: 'subtitle-2',\n        header: 'subtitle-1'\n    )\n) {\n    $item: map-get($categories, 'item');\n    $header: map-get($categories, 'header');\n\n    @include igx-scope('.igx-typography') {\n        %item {\n            @include igx-type-style($type-scale, $item);\n        }\n\n        %item--header {\n            @include igx-type-style($type-scale, $header) {\n                margin: 0;\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $background [null] - The list background color.\n/// @param {Color} $header-background [null] - The list header background color.\n/// @param {Color} $header-text-color [null] - The list header text color.\n///\n/// @param {Color} $item-background [null] - The list item background color.\n/// @param {Color} $item-background-hover [null] - The list item hover background color.\n/// @param {Color} $item-background-active [null] - The active list item background color.\n//\n/// @param {Color} $item-text-color [null] - The list item text color.\n/// @param {Color} $item-text-color-hover [null] - The list item hover text color.\n/// @param {Color} $item-text-color-active [null] - The active list item text color.\n///\n/// @param {Color} $item-title-color [null] - The list item title color.\n/// @param {Color} $item-title-color-hover [null] - The list item hover title color.\n/// @param {Color} $item-title-color-active [null] - The active list item title color.\n///\n/// @param {Color} $item-subtitle-color [null] - The list item subtitle color.\n/// @param {Color} $item-subtitle-color-hover [null] - The list item hover subtitle color.\n/// @param {Color} $item-subtitle-color-active [null] - The active list item subtitle color.\n///\n/// @param {Color} $item-action-color [null] - The list item action color.\n/// @param {Color} $item-action-color-hover [null] - The list item hover action color.\n/// @param {Color} $item-action-color-active [null] - The active list item action color.\n///\n/// @param {Color} $item-thumbnail-color [null] - The list item thumbnail color.\n/// @param {Color} $item-thumbnail-color-hover [null] - The list item hover thumbnail color.\n/// @param {Color} $item-thumbnail-color-active [null] - The active list item thumbnail color.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for list component.\n/// @param {border-radius} $item-border-radius [null] - The border radius used for list item.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires hexrgba\n/// @requires text-contrast\n/// @requires round-borders\n///\n/// @example scss Change the list background color\n///   $my-list-theme: igx-list-theme($background: black);\n///   // Pass the theme to the igx-list component mixin\n///   @include igx-list($my-list-theme);\n@function igx-list-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $border-radius: null,\n    $item-border-radius: null,\n    $background: null,\n    $header-background: null,\n    $header-text-color: null,\n    $item-background: null,\n    $item-background-hover: null,\n    $item-background-active: null,\n    $item-text-color: null,\n    $item-text-color-hover: null,\n    $item-text-color-active: null,\n    $item-title-color: null,\n    $item-title-color-hover: null,\n    $item-title-color-active: null,\n    $item-subtitle-color: null,\n    $item-subtitle-color-hover: null,\n    $item-subtitle-color-active: null,\n    $item-action-color: null,\n    $item-action-color-hover: null,\n    $item-action-color-active: null,\n    $item-thumbnail-color: null,\n    $item-thumbnail-color-hover: null,\n    $item-thumbnail-color-active: null\n) {\n    $name: 'igx-list';\n    $list-schema: map-get($schema, $name);\n    $theme: apply-palette($list-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map-get($list-schema, 'border-radius')), 0, 24px\n    );\n\n    $item-border-radius: round-borders(\n        if($item-border-radius, $item-border-radius, map-get($list-schema, 'item-border-radius')), 0, 24px\n    );\n\n    @if not($header-background) and $background {\n        $header-background: $background;\n    }\n\n    @if not($header-background) and $item-background {\n        $header-background: $item-background;\n    }\n\n    @if not($item-background) and $background {\n        $item-background: $background;\n    }\n\n    @if not($background) and $item-background {\n        $background: $item-background;\n    }\n\n    @if not($item-background-hover) and $item-background {\n        @if type-of($item-background) == 'color' and luminance($item-background) < .5 {\n            $item-background-hover: lighten-color($item-background, 8%);\n        } @else {\n            $item-background-hover: darken-color($item-background, 8%);\n        }\n    }\n\n    @if not($item-background-active) and $item-background {\n        @if type-of($item-background) == 'color' and luminance($item-background) < .5 {\n            $item-background-active: lighten-color($item-background, 8%);\n        } @else {\n            $item-background-active: darken-color($item-background, 8%);\n        }\n    }\n\n    @if not($header-text-color) and $header-background {\n        $header-text-color: text-contrast($header-background);\n    }\n\n    @if not($item-text-color) and $item-background {\n        $item-text-color: text-contrast($item-background);\n    }\n\n    @if not($item-title-color) and $item-background {\n        $item-title-color: text-contrast($item-background);\n    }\n\n    @if not($item-action-color) and $item-background {\n        $item-action-color: text-contrast($item-background);\n    }\n\n    @if not($item-thumbnail-color) and $item-background {\n        $item-thumbnail-color: text-contrast($item-background);\n    }\n\n    @if not($item-subtitle-color) and $item-background {\n        $item-subtitle-color: rgba(text-contrast($item-background), .74);\n    }\n\n    @if not($item-subtitle-color) and $item-text-color {\n        $item-subtitle-color: $item-text-color;\n    }\n\n    @if not($item-text-color-hover) and $item-background-hover {\n        $item-text-color-hover: text-contrast($item-background-hover);\n    }\n\n    @if not($item-title-color-hover) and $item-background-hover {\n        $item-title-color-hover: text-contrast($item-background-hover);\n    }\n\n    @if not($item-action-color-hover) and $item-background-hover {\n        $item-action-color-hover: text-contrast($item-background-hover);\n    }\n\n    @if not($item-thumbnail-color-hover) and $item-background-hover {\n        $item-thumbnail-color-hover: text-contrast($item-background-hover);\n    }\n\n    @if not($item-subtitle-color-hover) and $item-background-hover {\n        $item-subtitle-color-hover: rgba(text-contrast($item-background-hover), .74);\n    }\n\n    @if not($item-subtitle-color-hover) and $item-text-color-hover {\n        $item-subtitle-color-hover: $item-text-color-hover;\n    }\n\n    @if not($item-text-color-active) and $item-background-active {\n        $item-text-color-active: text-contrast($item-background-active);\n    }\n\n    @if not($item-title-color-active) and $item-background-active {\n        $item-title-color-active: text-contrast($item-background-active);\n    }\n\n    @if not($item-action-color-active) and $item-background-active {\n        $item-action-color-active: text-contrast($item-background-active);\n    }\n\n    @if not($item-thumbnail-color-active) and $item-background-active {\n        $item-thumbnail-color-active: text-contrast($item-background-active);\n    }\n\n    @if not($item-subtitle-color-active) and $item-background-active {\n        $item-subtitle-color-active: rgba(text-contrast($item-background-active), .74);\n    }\n\n    @if not($item-subtitle-color-active) and $item-text-color-active {\n        $item-subtitle-color-active: $item-text-color-active;\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        border-radius: $border-radius,\n        item-border-radius: $item-border-radius,\n        background: $background,\n        header-background: $header-background,\n        header-text-color: $header-text-color,\n        item-background: $item-background,\n        item-background-hover: $item-background-hover,\n        item-background-active: $item-background-active,\n        item-text-color: $item-text-color,\n        item-text-color-hover: $item-text-color-hover,\n        item-text-color-active: $item-text-color-active,\n        item-title-color:$item-title-color,\n        item-title-color-hover:$item-title-color-hover,\n        item-title-color-active:$item-title-color-active,\n        item-subtitle-color: $item-subtitle-color,\n        item-subtitle-color-hover: $item-subtitle-color-hover,\n        item-subtitle-color-active: $item-subtitle-color-active,\n        item-action-color: $item-action-color,\n        item-action-color-hover: $item-action-color-hover,\n        item-action-color-active: $item-action-color-active,\n        item-thumbnail-color: $item-thumbnail-color,\n        item-thumbnail-color-hover: $item-thumbnail-color-hover,\n        item-thumbnail-color-active: $item-thumbnail-color-active\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires em\n/// @requires --var\n@mixin igx-list($theme) {\n    @include igx-root-css-vars($theme);\n\n    $list-empty-padding: (\n        comfortable: rem(16px),\n        cosy: rem(8px),\n        compact: rem(4px)\n    );\n\n    $list-item-padding: (\n        comfortable: rem(8px) rem(16px),\n        cosy: rem(4px) rem(8px),\n        compact: rem(2px) rem(4px)\n    );\n\n    $list-icon-margin: (\n        comfortable: rem(8px) rem(16px) rem(8px) 0,\n        cosy: rem(6px) rem(8px) rem(6px) 0,\n        compact: rem(4px) rem(4px) rem(4px) 0\n    );\n\n    $list-icon-margin-rtl: (\n        comfortable: rem(8px) 0 rem(8px) rem(16px),\n        cosy: rem(6px) 0 rem(6px) rem(8px),\n        compact: rem(4px) 0 rem(4px) rem(4px)\n    );\n\n    $list-line-margin: (\n        comfortable: 0 0 0 rem(16px),\n        cosy: 0 0 0 rem(12px),\n        compact: 0 0 0 rem(8px)\n    );\n\n    $list-line-margin-rtl: (\n        comfortable: 0 rem(16px) 0 0 ,\n        cosy: 0 rem(12px) 0 0 ,\n        compact: 0 rem(8px) 0 0\n    );\n\n    %igx-list {\n        position: relative;\n        display: flex;\n        flex-flow: column nowrap;\n        background: --var($theme, 'background');\n        height: 100%;\n        overflow: hidden;\n        z-index: 0;\n        border-radius: --var($theme, 'border-radius');\n    }\n\n    %igx-list-empty {\n        justify-content: center;\n        align-items: center;\n    }\n\n    %igx-list-empty-image {\n        width: auto;\n        max-height: 120px;\n    }\n\n    %igx-list-empty-message {\n        text-align: center;\n        color: --var($theme, 'item-text-color');\n        padding: map-get($list-empty-padding, 'comfortable');\n        z-index: 1;\n    }\n\n    %igx-list-empty-message--cosy {\n        padding: map-get($list-empty-padding, 'cosy');\n    }\n\n    %igx-list-empty-message--compact {\n        padding: map-get($list-empty-padding, 'compact');\n    }\n\n    %igx-list-header {\n        display: flex;\n        align-items: center;\n        color: --var($theme, 'header-text-color');\n        background: --var($theme, 'header-background');\n        padding: map-get($list-item-padding, 'comfortable');\n        user-select: none;\n    }\n\n    %igx-list-header--cosy {\n        padding: map-get($list-item-padding, 'cosy');\n    }\n\n    %igx-list-header--compact {\n        padding: map-get($list-item-padding, 'compact');\n    }\n\n    %igx-list-item-base {\n        display: flex;\n        flex-flow: column wrap;\n        justify-content: center;\n        border-radius: --var($theme, 'item-border-radius');\n    }\n\n    %igx-list-item-pan {\n        position: absolute;\n        visibility: hidden;\n        display: flex;\n        z-index: 1;\n    }\n\n    %igx-list__item-lines {\n        color: --var($theme, 'item-text-color');\n        display: flex;\n        flex-direction: column;\n        flex: 1 0 0%;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-list__item-line-subtitle {\n        color: --var($theme, 'item-subtitle-color');\n        opacity: .74\n    }\n\n    %igx-list__item-line-title {\n        color: --var($theme, 'item-title-color');\n    }\n\n    %igx-list__item-actions {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: --var($theme, 'item-action-color');\n\n        > * {\n            margin-left: rem(8px);\n        }\n\n        &:empty {\n            display: none;\n        }\n\n        %igx-icon-display {\n            color: --var($theme, 'item-action-color')\n        }\n    }\n\n    %igx-list-item-content {\n        display: flex;\n        align-items: center;\n        position: relative;\n        padding: map-get($list-item-padding, 'comfortable');\n        color: --var($theme, 'item-text-color');\n        background: --var($theme, 'item-background');\n        border-radius: --var($theme, 'item-border-radius');\n        z-index: 2;\n\n        &:hover {\n            color: --var($theme, 'item-text-color-hover');\n            background: --var($theme, 'item-background-hover');\n\n            %igx-list__item-lines {\n                color: currentColor;\n            }\n\n            %igx-list__item-line-title {\n                color: --var($theme, 'item-title-color-hover');\n            }\n\n            %igx-list__item-line-subtitle {\n                color: --var($theme, 'item-subtitle-color-hover');\n            }\n\n            %igx-list__item-actions {\n                color: --var($theme, 'item-action-color-hover');\n\n                %igx-icon-display {\n                    color: --var($theme, 'item-action-color-hover')\n                }\n            }\n\n            %igx-list__item-thumbnail {\n                color: --var($theme, 'item-thumbnail-color-hover');\n\n                %igx-icon-display {\n                    color: --var($theme, 'item-thumbnail-color-hover')\n                }\n            }\n        }\n    }\n\n    %igx-list-item-content--compact {\n        padding: map-get($list-item-padding, 'compact');\n    }\n\n    %igx-list-item-content--cosy {\n        padding: map-get($list-item-padding, 'cosy');\n    }\n\n    %igx-list__item-thumbnail {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        align-self: flex-start;\n        padding: 0;\n        color: --var($theme, 'item-thumbnail-color');\n\n        > %igx-icon-display {\n            margin: map-get($list-icon-margin, 'comfortable');\n        }\n\n        > %igx-avatar-display {\n            > %igx-icon-display {\n                margin: 0;\n            }\n        }\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-list__item-thumbnail:not(:empty) + %igx-list__item-lines {\n        margin: map-get($list-line-margin, 'comfortable');\n    }\n\n    %igx-list__item-thumbnail--cosy:not(:empty) + %igx-list__item-lines {\n        margin: map-get($list-line-margin, 'cosy');\n    }\n\n    %igx-list__item-thumbnail--compact:not(:empty) + %igx-list__item-lines {\n        margin: map-get($list-line-margin, 'compact');\n    }\n\n    %igx-list__item-thumbnail--cosy {\n        > %igx-icon-display {\n            margin: map-get($list-icon-margin, 'cosy');\n        }\n    }\n\n    %igx-list__item-thumbnail--compact {\n        > %igx-icon-display {\n            margin: map-get($list-icon-margin, 'compact');\n        }\n    }\n\n    %igx-list__item-actions--cosy {\n        > * {\n            margin-left: rem(6px);\n        }\n    }\n\n    %igx-list__item-actions--compact {\n        > * {\n            margin-left: rem(4px);\n        }\n    }\n\n    %igx-list__item-lines + %igx-list__item-actions {\n        margin-left: rem(8px);\n    }\n\n    %igx-list-item-content--active {\n        %igx-list__item-line-title {\n            color: --var($theme, 'item-title-color-active')\n        }\n\n        %igx-list__item-line-subtitle {\n            color: --var($theme, 'item-subtitle-color-active')\n        }\n\n        %igx-list__item-actions {\n            color: --var($theme, 'item-action-color-active');\n\n            %igx-icon-display {\n                color: --var($theme, 'item-action-color-active')\n            }\n        }\n\n        %igx-list__item-thumbnail {\n            color: --var($theme, 'item-thumbnail-color-active');\n\n            %igx-icon-display {\n                color: --var($theme, 'item-thumbnail-color-active')\n            }\n        }\n\n        color: --var($theme, 'item-text-color-active');\n        background: --var($theme, 'item-background-active');\n        z-index: 3;\n    }\n\n    [dir='rtl'] {\n        %igx-list__item-thumbnail:not(:empty) + %igx-list__item-lines {\n            margin: map-get($list-line-margin-rtl, 'comfortable');\n        }\n\n        %igx-list__item-thumbnail {\n            > %igx-icon-display {\n                margin: map-get($list-icon-margin-rtl, 'comfortable');\n            }\n\n            > %igx-avatar-display {\n                > %igx-icon-display {\n                    margin: 0;\n                }\n            }\n        }\n\n        %igx-list__item-actions {\n            > * {\n                margin-left: 0;\n                margin-right: rem(8px);\n            }\n        }\n\n        %igx-list__item-actions--cosy {\n            > * {\n                margin-left: 0;\n                margin-right: rem(6px);\n            }\n        }\n\n        %igx-list__item-actions--compact {\n            > * {\n                margin-left: 0;\n                margin-right: rem(4px);\n            }\n        }\n\n        %igx-list__item-lines + %igx-list__item-actions {\n            margin-left: 0;\n            margin-right: rem(8px);\n        }\n    }\n\n    %igx-list-item-content--inactive {\n        transition: transform .3s $ease-out-quad;\n    }\n}\n\n/// Adds typography styles for the igx-list component.\n/// Uses the 'caption' and 'subtitle-1'\n/// categories from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(header: 'overline', item: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-list-typography(\n    $type-scale,\n    $categories: (\n        header: 'overline',\n        item: 'subtitle-1',\n        title: 'subtitle-1',\n        subtitle: 'caption'\n    )\n) {\n    $header: map-get($categories, 'header');\n    $item: map-get($categories, 'item');\n    $title: map-get($categories, 'title');\n    $subtitle: map-get($categories, 'subtitle');\n\n    @include igx-scope('.igx-typography') {\n        %igx-list-header {\n            @include igx-type-style($type-scale, $header) {\n                margin: 0;\n            }\n        }\n\n        %igx-list-item {\n            @include igx-type-style($type-scale, $item) {\n                margin: 0;\n            }\n        }\n\n        %igx-list__item-lines,\n        %igx-list__item-line-title {\n            @include igx-type-style($type-scale, $title) {\n                margin: 0;\n            }\n        }\n\n        %igx-list__item-line-subtitle {\n            @include igx-type-style($type-scale, $subtitle) {\n                margin: 0;\n            }\n        }\n    }\n}\n","@import '../ripple/ripple-theme';\n@import '../ripple/ripple-component';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $label-color [null]- The text color used for the label text.\n/// @param {Color} $empty-color [null] - The unchecked border color.\n/// @param {Color} $fill-color [null] - The checked border and dot colors.\n/// @param {Color} $disabled-color [null] - The disabled border and dot colors.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n///\n/// Set light to true when the surrounding area is dark.\n/// @example scss Change the checked dot and border colors\n///   $my-radio-theme: igx-radio-theme($fill-color: magenta);\n///   // Pass the theme to the igx-radio component mixin\n///   @include igx-radio($my-radio-theme);\n@function igx-radio-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $label-color: null,\n    $empty-color: null,\n    $fill-color: null,\n    $disabled-color: null\n\n) {\n    $name: 'igx-radio';\n    $theme: apply-palette(map-get($schema, $name), $palette);\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        label-color: $label-color,\n        empty-color: $empty-color,\n        fill-color: $fill-color,\n        disabled-color: $disabled-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires {mixin} igx-css-vars\n/// @requires {mixin} scale-in-out\n/// @requires {mixin} animation\n/// @requires {mixin} igx-ripple\n/// @requires {mixin} hide-default\n/// @requires igx-ripple-theme\n/// @requires em\n/// @requires --var\n@mixin igx-radio($theme) {\n    @include igx-root-css-vars($theme);\n    @include scale-in-out($start-scale: .9);\n\n    $label-margin: em(8px);\n\n    $size: em(20px);\n\n    $border-style: 2px solid;\n    $border-radius: 50% 50%;\n\n    $transition: all .2s ease-in;\n\n    $ripple-size: em(48px);\n    $ripple-radius: $ripple-size / 2;\n\n    $ripple-theme: igx-ripple-theme(\n        $color: --var($theme, 'fill-color')\n    );\n\n    %radio-display {\n        position: relative;\n        display: inline-flex;\n        flex-flow: row nowrap;\n        align-items: center;\n        color: --var($theme, 'label-color');\n    }\n\n    %radio-input {\n        @include hide-default();\n    }\n\n    %radio-display--disabled {\n        pointer-events: none;\n        color: --var($theme, 'disabled-color');\n        user-select: none;\n    }\n\n    %radio-composite {\n        position: relative;\n        display: inline-block;\n        width: $size;\n        height: $size;\n        min-width: $size;\n        line-height: $size;\n        cursor: pointer;\n        color: --var($theme, 'label-color');\n        user-select: none;\n\n        &::before,\n        &::after {\n            position: absolute;\n            content: '';\n            width: $size;\n            height: $size;\n            left: 0;\n            top: 0;\n            border-radius: $border-radius;\n        }\n\n        &::before {\n            backface-visibility: hidden;\n            transform: scale3d(0, 0, 0);\n            transition: $transition;\n        }\n\n        &::after {\n            border: $border-style --var($theme, 'empty-color');\n        }\n    }\n\n    %radio-composite--x {\n        &::before {\n            border: $border-style --var($theme, 'fill-color');\n            background: --var($theme, 'fill-color');\n            transform: scale3d(.5, .5, .5);\n        }\n\n        &::after {\n            border: $border-style --var($theme, 'fill-color');\n        }\n    }\n\n    %radio-composite--disabled {\n        &::after {\n            border: $border-style --var($theme, 'disabled-color');\n        }\n    }\n\n    %radio-composite--x--disabled {\n        &::after {\n            border: $border-style --var($theme, 'disabled-color');\n        }\n\n        &::before {\n            background: --var($theme, 'disabled-color');\n            border: $border-style transparent;\n        }\n    }\n\n    %radio-label {\n        color: currentColor;\n        cursor: pointer;\n        user-select: none;\n        word-wrap: break-all;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %radio-label--after {\n        margin-left: $label-margin;\n\n        [dir='rtl'] & {\n            margin-left: initial;\n            margin-right: $label-margin;\n\n            &:empty {\n                margin: 0;\n            }\n        }\n    }\n\n    %radio-label--before {\n        order: -1;\n        margin-right: $label-margin;\n\n        [dir='rtl'] & {\n            margin-right: initial;\n            margin-left: $label-margin;\n\n            &:empty {\n                margin: 0;\n            }\n        }\n    }\n\n    %radio-ripple {\n        @include igx-ripple($ripple-theme);\n        @include igx-css-vars($ripple-theme);\n        position: absolute;\n        top: calc(50% - #{$ripple-radius});\n        left: calc(50% - #{$ripple-radius});\n        width: $ripple-size;\n        height: $ripple-size;\n        border-radius: $ripple-radius;\n        overflow: hidden;\n        pointer-events: none;\n        filter: opacity(1);\n    }\n\n    %radio-ripple--focused {\n        @include animation('scale-in-out' 1s $ease-out-quad infinite);\n        background: --var($theme, 'empty-color');\n        transition: background .2s $ease-out-quad;\n        opacity: .12;\n    }\n\n    %radio-ripple--focused-checked {\n        background: --var($theme, 'fill-color');\n    }\n\n    %radio-ripple--hover {\n        &::after {\n            position: absolute;\n            content: '';\n            opacity: .06;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n        }\n    }\n\n    %radio-ripple--hover-unchecked {\n        &::after {\n            background: --var($theme, 'empty-color');\n        }\n    }\n\n    %radio-ripple--hover-checked {\n        &::after {\n            background: --var($theme, 'fill-color');\n        }\n    }\n\n    %radio-ripple--pressed {\n        &::after {\n            opacity: .12;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-radio component.\n/// Uses the 'subtitle-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-radio-typography(\n    $type-scale,\n    $categories: (label: 'subtitle-1')\n) {\n    $label: map-get($categories, 'label');\n\n    @include igx-scope('.igx-typography') {\n        %radio-label {\n            @include igx-type-style($type-scale, $label) {\n                margin-top: 0;\n                margin-bottom: 0;\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If you specify a background color, but do not specify colors for either the\n/// button or the text, their colors will be set automatically to a contrasting color.\n///\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n///\n/// @param {Color} $background [null] - The background color used in the snackbar.\n/// @param {Color} $text-color [null] - The text color used in the snackbar.\n/// @param {Color} $button-color [null] - The button color used in the snackbar.\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the snackbar.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for the snackbar component.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires round-borders\n///\n/// @example scss Set a custom background color\n///   $my-snackbar-theme: igx-snackbar-theme($background: white);\n///   // Pass the theme to the igx-bottom-nav component mixin\n///   @include igx-snackbar($my-snackbar-theme);\n@function igx-snackbar-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $elevations: $elevations,\n\n    $border-radius: null,\n    $background: null,\n    $text-color: null,\n    $button-color: null,\n    $shadow: null\n) {\n    $name: 'igx-snackbar';\n    $snackbar-schema: map-get($schema, $name);\n    $theme: apply-palette($snackbar-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map-get($snackbar-schema, 'border-radius')), 0, 24px\n    );\n\n    @if not($button-color) and $background {\n        $button-color: text-contrast($background);\n    }\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @if not($shadow) {\n        $elevation: map-get($snackbar-schema, 'elevation');\n        $shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        border-radius: $border-radius,\n        background: $background,\n        text-color: $text-color,\n        button-color: $button-color,\n        shadow: $shadow\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-snackbar($theme) {\n    @include igx-root-css-vars($theme);\n\n    // @debug $theme;\n\n    $snackbar-min-height: rem(48px);\n    $snackbar-padding: rem(7px) rem(24px);\n    $snackbar-button-left-margin: rem(24px);\n    $snackbar-button-line-height: rem(16px);\n    $snackbar-button-font-weight: 600;\n\n    %igx-snackbar-display {\n        position: relative;\n        display: flex;\n        flex-flow: row nowrap;\n        align-items: center;\n        justify-content: space-between;\n        min-height: $snackbar-min-height;\n        padding: $snackbar-padding;\n        margin: 8px;\n        color: --var($theme, 'text-color');\n        background: --var($theme, 'background');\n        backface-visibility: hidden;\n        box-shadow: --var($theme, 'shadow');\n        border-radius: --var($theme, 'border-radius')\n    }\n\n    %igx-snackbar-button {\n        background: transparent;\n        color: --var($theme, 'button-color');\n        border: 0;\n        line-height: $snackbar-button-line-height;\n        margin-left: $snackbar-button-left-margin;\n        text-transform: uppercase;\n        user-select: none;\n        font-weight: $snackbar-button-font-weight;\n        -webkit-tap-highlight-color: transparent;\n        outline: none;\n        transition: color .2s ease;\n        font-size: inherit;\n        font-family: inherit;\n        cursor: pointer;\n\n        &:hover {\n            color: --var($theme, 'button-color');\n        }\n    }\n}\n\n/// Adds typography styles for the igx-snackbar component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-snackbar-typography($type-scale, $categories: (text: 'body-2')) {\n    $text: map-get($categories, 'text');\n\n    @include igx-scope('.igx-typography') {\n        %igx-snackbar-message {\n            @include igx-type-style($type-scale, $text);\n        }\n    }\n}\n","@import '../ripple/ripple-theme';\n@import '../ripple/ripple-component';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n///\n/// @param {Color} $thumb-on-color [null] - The color of the thumb when the switch is on.\n/// @param {Color} $track-on-color [null] - The color of the track when the switch is on.\n/// @param {Color} $thumb-off-color [null] - The color of the thumb when the switch is off.\n/// @param {Color} $track-off-color [null] - The color of the track when the switch is off.\n/// @param {Color} $thumb-disabled-color [null] - The color of the thumb when the switch is disabled.\n/// @param {Color} $track-disabled-color [null] - The color of the track when the switch is disabled.\n/// @param {Color} $label-color [null] - The color of the switch label\n/// @param {Color} $label-disabled-color [null] - The color of the switch label when the switch is disabled\n/// @param {box-shadow} $resting-shadow [null] - The shadow used for the thumb in resting state of the switch.\n/// @param {box-shadow} $hover-shadow [null] - The shadow used for the thumb in hover state of the switch.\n/// @param {box-shadow} $disabled-shadow [null] - The shadow used for the thumb in disable state of the switch.\n///\n/// @param {border-radius} border-radius-track [null] - The border radius used for switch track.\n/// @param {border-radius} border-radius-thumb [null] - The border radius used for switch thumb.\n/// @param {border-radius} border-radius-ripple [null] - The border radius used for switch ripple.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires igx-elevation\n/// @requires $elevations\n///\n/// @example scss Set custom track and thumb on colors\n///   $my-switch-theme: igx-toast-theme($thumb-on-color: black, $track-on-color: yellow);\n///   // Pass the theme to the igx-bottom-nav component mixin\n///   @include igx-switch($my-switch-theme);\n@function igx-switch-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $thumb-on-color: null,\n    $track-on-color: null,\n\n    $thumb-off-color: null,\n    $track-off-color: null,\n\n    $track-disabled-color: null,\n    $thumb-disabled-color: null,\n\n    $label-color: null,\n    $label-disabled-color: null,\n\n    $resting-shadow: null,\n    $hover-shadow: null,\n    $disabled-shadow: null,\n\n    $border-radius-track: null,\n    $border-radius-thumb: null,\n    $border-radius-ripple: null\n) {\n    $name: 'igx-switch';\n    $switch-schema: map-get($schema, $name);\n    $theme: apply-palette($switch-schema, $palette);\n\n    $border-radius-track: round-borders(\n        if($border-radius-track, $border-radius-track, map-get($switch-schema, 'border-radius-track')), 0, 7px\n    );\n\n    $border-radius-thumb: round-borders(\n        if($border-radius-thumb, $border-radius-thumb, map-get($switch-schema, 'border-radius-thumb')), 0, 10px\n    );\n\n    $border-radius-ripple: round-borders(\n        if($border-radius-ripple, $border-radius-ripple, map-get($switch-schema, 'border-radius-ripple')), 0, 24px\n    );\n\n    @if not($resting-shadow) {\n        $resting-elevation: map-get($switch-schema, 'resting-elevation');\n        $resting-shadow: igx-elevation($elevations, $resting-elevation);\n    }\n\n    @if not($hover-shadow) {\n        $hover-elevation: map-get($switch-schema, 'hover-elevation');\n        $hover-shadow: igx-elevation($elevations, $hover-elevation);\n    }\n\n    @if not($disabled-shadow) {\n        $disabled-elevation: map-get($switch-schema, 'disabled-elevation');\n        $disabled-shadow: igx-elevation($elevations, $disabled-elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n\n        thumb-on-color: $thumb-on-color,\n        track-on-color: $track-on-color,\n\n        thumb-off-color: $thumb-off-color,\n        track-off-color: $track-off-color,\n\n        track-disabled-color: $track-disabled-color,\n        thumb-disabled-color: $thumb-disabled-color,\n\n        label-color: $label-color,\n        label-disabled-color: $label-disabled-color,\n\n        resting-shadow: $resting-shadow,\n        hover-shadow: $hover-shadow,\n        disabled-shadow: $disabled-shadow,\n\n        border-radius-track: $border-radius-track,\n        border-radius-thumb: $border-radius-thumb,\n        border-radius-ripple: $border-radius-ripple\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires {mixin} igx-css-vars\n/// @requires {mixin} scale-in-out\n/// @requires {mixin} igx-ripple\n/// @requires {mixin} hide-default\n/// @requires igx-ripple-theme\n/// @requires em\n/// @requires {mixin} scale-in-out\n/// @requires {mixin} animation\n/// @requires --var\n@mixin igx-switch($theme) {\n    @include igx-root-css-vars($theme);\n    @include scale-in-out($start-scale: .9);\n\n    $switch-width: 36px ;\n    $switch-height: 14px ;\n\n    $switch-thumb-width: 20px ;\n    $switch-thumb-height: $switch-thumb-width ;\n\n    $ripple-size: em(48px);\n    $ripple-radius: $ripple-size / 2;\n\n    $label-margin: em(8px);\n\n    $input-transition: all .2s $ease-in-out-quad;\n\n    $ripple-theme: igx-ripple-theme(\n        $color: --var($theme, 'thumb-on-color')\n    );\n\n    %switch-display {\n        position: relative;\n        display: inline-flex;\n        flex-flow: row nowrap;\n        align-items: center;\n    }\n\n    %switch-input {\n        @include hide-default();\n    }\n\n    %switch-display--disabled {\n        user-select: none;\n        pointer-events: none;\n        cursor: initial;\n    }\n\n    %switch-composite {\n        display: flex;\n        align-items: center;\n        width: $switch-width;\n        height: $switch-height;\n        border-radius: --var($theme, 'border-radius-track');\n        background: --var($theme, 'track-off-color');\n        cursor: pointer;\n        user-select: none;\n        transition: $input-transition;\n    }\n\n    %switch-composite--x {\n        background: --var($theme, 'track-on-color');\n    }\n\n    %switch-composite--disabled {\n        background: --var($theme, 'track-disabled-color');\n    }\n\n    %switch-composite-thumb {\n        position: relative;\n        display: block;\n        width: $switch-thumb-width;\n        height: $switch-thumb-height;\n        min-width: $switch-thumb-width;\n        border-radius: --var($theme, 'border-radius-thumb');\n        background: --var($theme, 'thumb-off-color');\n        box-shadow: --var($theme, 'resting-shadow');\n        transition: $input-transition;\n\n        &:hover {\n            box-shadow: --var($theme, 'hover-shadow');\n        }\n    }\n\n    %switch-composite-thumb--x {\n        transform: translateX(#{$switch-width - $switch-thumb-width});\n        background: --var($theme, 'thumb-on-color');\n\n        [dir='rtl'] & {\n            transform: translateX(-#{$switch-width - $switch-thumb-width});\n        }\n    }\n\n    %switch-composite-thumb--disabled {\n        background: --var($theme, 'thumb-disabled-color');\n        box-shadow: --var($theme, 'disabled-shadow');\n    }\n\n    %switch-ripple {\n        @include igx-ripple($ripple-theme);\n        @include igx-css-vars($ripple-theme);\n        position: absolute;\n        top: calc(50% - #{$ripple-radius});\n        left: calc(50% - #{$ripple-radius});\n        width: $ripple-size;\n        height: $ripple-size;\n        overflow: hidden;\n        pointer-events: none;\n        filter: opacity(1);\n        border-radius: --var($theme, 'border-radius-ripple');\n    }\n\n    %switch-ripple--focused {\n        @include animation('scale-in-out' 1s $ease-out-quad infinite);\n        background: --var($theme, 'track-off-color');\n        transition: background .2s $ease-out-quad;\n        opacity: .12;\n    }\n\n    %switch-ripple--focused-checked {\n        background: --var($theme, 'thumb-on-color');\n    }\n\n    %switch-label {\n        display: inline-block;\n        color: --var($theme, 'label-color');\n        cursor: pointer;\n        user-select: none;\n        word-wrap: break-all;\n\n        &:empty {\n            margin: 0;\n        }\n    }\n\n    %switch-label--after {\n        margin-left: $label-margin;\n\n        [dir='rtl'] & {\n            margin-left: initial;\n            margin-right: $label-margin;\n\n            &:empty {\n                margin: 0;\n            }\n        }\n    }\n\n    %switch-label--before {\n        order: -1;\n        margin-right: $label-margin;\n\n        [dir='rtl'] & {\n            margin-right: initial;\n            margin-left: $label-margin;\n\n            &:empty {\n                margin: 0;\n            }\n        }\n    }\n\n    %switch-label--disabled {\n        color: --var($theme, 'label-disabled-color');\n    }\n\n    %switch-ripple--hover {\n        &::after {\n            position: absolute;\n            content: '';\n            opacity: .06;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n        }\n    }\n\n    %switch-ripple--hover-unchecked {\n        &::after {\n            background: --var($theme, 'track-off-color');\n        }\n    }\n\n    %switch-ripple--hover-checked {\n        &::after {\n            background: --var($theme, 'thumb-on-color');\n        }\n    }\n\n    %switch-ripple--pressed {\n        &::after {\n            opacity: .12;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-checkbox component.\n/// Uses the 'subtitle-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-switch-typography(\n    $type-scale,\n    $categories: (label: 'subtitle-1')\n) {\n    $label: map-get($categories, 'label');\n\n    @include igx-scope('.igx-typography') {\n        %switch-label {\n            @include igx-type-style($type-scale, $label) {\n                margin-top: 0;\n                margin-bottom: 0;\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified,\n/// the idle item color will be assigned automatically to a contrasting color.\n///\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $item-text-color [null] - The color used for the tab text color.\n/// @param {Color} $item-background [null] - The background color used for the tabs header.\n/// @param {Color} $item-hover-background [null] - The background used for the tabs on hover.\n/// @param {Color} $item-hover-color [null] - The text color used for the tabs on hover.\n///\n/// @param {Color} $item-active-color [null] - The color used for the active tabs text.\n/// @param {Color} $item-active-icon-color [null] - The color used for the active tabs icon.\n/// @param {Color} $item-active-background [null] - The color used for the active/focused tab background.\n///\n/// @param {Color} $indicator-color [null] - The color used for the active tab indicator.\n/// @param {Color} $button-color [null] - The color used for the button icon/text color.\n/// @param {Color} $button-hover-color [null] - The color used for the button icon/text color on hover.\n/// @param {Color} $button-background [null] - The color used for the button background.\n/// @param {Color} $button-hover-background [null] - The color used for the button background on hover.\n///\n/// @param {Color} $tab-ripple-color [null] - The color used for the button background.\n/// @param {Color} $button-ripple-color [null] - The color used for the button background on hover.\n/// @param {Bool} $disable-shadow [true] - Sets the tabs header shadow visibility.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires igx-elevation\n/// @requires text-contrast\n///\n/// @example scss Set a custom background color\n///   $my-tabs-theme: igx-tabs-theme(\n///      $item-background: orange\n///    );\n///   // Pass the theme to the igx-tabs component mixin\n///   @include igx-tabs($my-tabs-theme);\n\n@function igx-tabs-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $item-text-color: null,\n    $item-background: null,\n\n    $item-hover-background: null,\n    $item-hover-color: null,\n\n    $item-active-color: null,\n    $item-active-icon-color: null,\n    $item-active-background: null,\n    $indicator-color: null,\n\n    $button-color: null,\n    $button-background: null,\n    $button-hover-background: null,\n    $button-hover-color: null,\n\n    $tab-ripple-color: null,\n    $button-ripple-color: null,\n\n    $disable-shadow: true\n) {\n    $name: 'igx-tabs';\n    $theme: apply-palette(map-get($schema, $name), $palette);\n\n    $tab-area-shadow: if($disable-shadow == true, none, igx-elevation($elevations, 1));\n\n    @if not($item-text-color) and $item-background {\n        @if type-of($item-background) == 'color' {\n            $item-text-color: rgba(text-contrast($item-background), .54);\n        }\n    }\n\n    @if not($item-hover-color) and $item-background {\n        $item-hover-color: text-contrast($item-background);\n    }\n\n    @if not($item-hover-color) and $item-hover-background {\n        $item-hover-color: text-contrast($item-hover-background);\n    }\n\n    @if not($item-active-icon-color) and $item-active-background {\n        $item-active-icon-color: text-contrast($item-active-background);\n    }\n\n    @if not($item-active-icon-color) and $item-background {\n        $item-active-icon-color: text-contrast($item-background);\n    }\n\n    @if not($indicator-color) and $item-background {\n        $indicator-color: text-contrast($item-background);\n    }\n\n    @if not($item-active-color) and $item-active-icon-color {\n        $item-active-color: $item-active-icon-color;\n    }\n\n\n    // Button\n    @if not($button-color) and $item-background {\n        $button-color: text-contrast($item-background);\n    }\n\n    @if not($button-color) and $button-background {\n        $button-color: text-contrast($button-background);\n    }\n\n    @if not($button-color) and $item-background {\n        $button-background: transparent;\n    }\n\n    @if not($button-hover-color) and $button-hover-background {\n        $button-hover-color: text-contrast($button-hover-background);\n    }\n\n    @if not($button-hover-background) and $item-background {\n        $button-hover-color: text-contrast($item-background);\n    }\n\n    @if not($button-background) and $item-background {\n        @if type-of($item-background) == 'color' and lightness($item-background) > 50 {\n            $button-background: transparent;\n        } @else {\n            $button-background: rgba(255, 255, 255 , .1);\n        }\n    }\n\n    @if not($button-hover-background) and $item-background {\n        @if type-of($item-background) == 'color' and lightness($item-background) > 50 {\n            $button-hover-background: rgba(0, 0, 0, .05);\n        } @else {\n            $button-hover-background: rgba(255, 255, 255 , .14);\n        }\n    }\n\n    @if not($button-ripple-color) and $button-background {\n        @if type-of($item-background) == 'color' and lightness($item-background) > 50 {\n            $button-ripple-color: rgba(0, 0, 0, .4);\n        } @else {\n            $button-ripple-color: rgba(255, 255, 255, .4);\n        }\n    }\n\n    // Button end\n\n    @if not($tab-ripple-color) and $item-active-background {\n        $tab-ripple-color: text-contrast($item-active-background);\n    }\n\n    @if not($tab-ripple-color) and $item-background {\n        $tab-ripple-color: text-contrast($item-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        item-text-color: $item-text-color,\n        item-background: $item-background,\n        item-hover-color: $item-hover-color,\n        item-hover-background: $item-hover-background,\n        item-active-color: $item-active-color,\n        item-active-icon-color: $item-active-icon-color,\n        item-active-background: $item-active-background,\n        indicator-color: $indicator-color,\n        button-color: $button-color,\n        button-background: $button-background,\n        button-hover-background:$button-hover-background,\n        button-hover-color:$button-hover-color,\n        tab-ripple-color: $tab-ripple-color,\n        button-ripple-color: $button-ripple-color,\n        tab-area-shadow: $tab-area-shadow,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires {mixin} igx-css-vars\n/// @requires {mixin} ellipsis\n/// @requires igx-ripple-theme\n/// @requires {mixin} igx-ripple\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires rem\n/// @requires --var\n@mixin igx-tabs($theme) {\n    @include igx-root-css-vars($theme);\n    $item-min-width: 90px;\n    $item-max-width: 360px;\n\n    $item-padding: 0 rem(16px);\n    $tabs-height: rem(48px);\n    $tabs-height-icon: rem(72px);\n    $tabs-animation-function: cubic-bezier(.35, 0, .25, 1);\n    $icon-label-space: rem(12px);\n\n    $tabs-ripple-theme: igx-ripple-theme($color: --var($theme, 'tab-ripple-color'));\n    $button-ripple-theme: igx-ripple-theme($color: --var($theme, 'button-ripple-color'));\n\n    %igx-tabs {\n        display: flex;\n        flex-direction: column;\n    }\n\n    %igx-tabs__header {\n        display: flex;\n        align-items: center;\n        overflow: hidden;\n        background: --var($theme, 'item-background');\n        box-shadow: --var($theme, 'tab-area-shadow');\n    }\n\n    %igx-tabs__content-fixed,\n    %igx-tabs__header-wrapper-fixed {\n        flex: 1 1 auto;\n        overflow: hidden;\n    }\n\n    // ITEM HOLDER (The element that scrolls)\n    %igx-tabs__content-fluid,\n    %igx-tabs__header-wrapper-fluid {\n        position: relative;\n        flex-wrap: nowrap;\n        transition: transform .2s $tabs-animation-function;\n    }\n\n    %igx-tabs__header-wrapper-fluid {\n        display: inline-flex;\n        align-items: center;\n        min-width: 100%;\n    }\n\n    %igx-tabs__content-fluid {\n        display: flex;\n    }\n\n    // MENU ITEM\n    %igx-tabs__header-menu-item {\n        display: inline-flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        min-width: $item-min-width;\n        max-width: $item-max-width;\n        word-wrap: break-word;\n        height: $tabs-height;\n        // Flex basis & shrink are Needed for IE11\n        flex-basis: auto;\n        flex-shrink: 0;\n        padding: $item-padding;\n        overflow: hidden;\n        cursor: pointer;\n        position: relative;\n        transition: all .3s $tabs-animation-function;\n        user-select: none;\n        background: --var($theme, 'item-background');\n        color: --var($theme, 'item-text-color');\n        outline: 0;\n\n        &::-moz-focus-inner {\n            border: 0;\n        }\n\n        &:focus {\n            background: --var($theme, 'item-active-background');\n        }\n\n        &:hover {\n            background: --var($theme, 'item-hover-background');\n            color: --var($theme, 'item-hover-color');\n        }\n\n        @include igx-ripple($tabs-ripple-theme);\n        @include igx-css-vars($tabs-ripple-theme);\n    }\n\n    %igx-tabs__header-menu-item--selected {\n        outline: 0;\n        color: --var($theme, 'item-active-color');\n\n        &:focus {\n            background: --var($theme, 'item-active-background');\n            color: --var($theme, 'item-active-color');\n        }\n\n        &:hover {\n            background: --var($theme, 'item-active-background');\n            color: --var($theme, 'item-active-color');\n        }\n\n        %igx-tabs__header-menu-item-icon {\n            color: --var($theme, 'item-active-icon-color');\n\n            igx-icon {\n                color: --var($theme, 'item-active-icon-color');\n            }\n        }\n    }\n\n    %igx-tabs__header-menu-item--disabled {\n        outline: 0;\n        opacity: .5;\n        cursor: default;\n        pointer-events: none;\n    }\n\n    %igx-tabs__header-menu-item-icon {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        + %igx-tabs__item-label {\n            @include ellipsis();\n            padding-top: $icon-label-space;\n        }\n    }\n\n    %igx-tabs__header-menu-item-indicator {\n        position: absolute;\n        bottom: 0;\n        // We need to explicitly set the default for IE 11\n        left: 0;\n        transform: translateX(0);\n        height: 2px;\n        min-width: $item-min-width;\n        background: --var($theme, 'indicator-color');\n        transition: transform .3s $tabs-animation-function, width .2s $tabs-animation-function;\n    }\n\n    // SCROLL BUTTONS\n    %igx-tabs__header-button {\n        z-index: 1;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border: none;\n        padding: 0;\n        min-width: rem(48px);\n        width: rem(48px);\n        min-height: $tabs-height;\n        height: $tabs-height;\n        cursor: pointer;\n        position: relative;\n        background: --var($theme, 'button-background');\n        color: --var($theme, 'button-color');\n        outline: 0;\n        box-shadow: igx-elevation($elevations, 4);\n\n        &:hover {\n            background: --var($theme, 'button-hover-background');\n            color: --var($theme, 'button-hover-color');\n        }\n\n        &:focus {\n            outline: 0;\n            background: --var($theme, 'button-hover-background');\n        }\n\n        &::-moz-focus-inner {\n            // remove focus dotted border in firefox\n            border: 0;\n        }\n\n        @include igx-ripple($button-ripple-theme);\n        @include igx-css-vars($button-ripple-theme);\n    }\n\n    %igx-tabs__header-button--hidden {\n        visibility: hidden;\n    }\n\n    %igx-tabs__header-button--none {\n        display: none;\n    }\n\n    %igx-tabs__item-label {\n        word-break: break-word;\n        max-width: 100%;\n        text-align: center;\n\n        + %igx-tabs__header-menu-item-icon {\n            padding-top: $icon-label-space;\n        }\n    }\n\n    %igx-tabs__group {\n        display: inline-block;\n        min-width: 100%;\n    }\n\n    %igx-tabs--fixed {\n        %igx-tabs__header-menu-item {\n            flex: 1 1 auto;\n            width: 100%;\n        }\n    }\n\n    %igx-tabs--icons {\n        %igx-tabs__header-button,\n        %igx-tabs__header-menu-item {\n            min-height: $tabs-height-icon;\n            height: $tabs-height-icon;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-tabs component.\n/// Uses the 'subtitle-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'button')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-tabs-typography($type-scale, $categories: (label: 'button')) {\n    $label: map-get($categories, 'label');\n\n    @include igx-scope('.igx-typography') {\n        %igx-tabs__item-label {\n            @include igx-type-style($type-scale, $label) {\n                margin-top: 0;\n                margin-bottom: 0;\n            }\n        }\n    }\n}\n\n\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// Does ___not___ apply for disabled state colors.\n///\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n///\n/// @param {Color} $text-color [null] - The text color of a open time picker.\n/// @param {Color} $hover-text-color [null] - The hover text color of a open time picker.\n/// @param {Color} $selected-text-color [null] -  The text color of a selected item in time picker.\n/// @param {Color} $active-item-background [null] - The background color for current item in focused column inside the time picker.\n/// @param {Color} $header-background [null] - The header background color of a time picker.\n/// @param {Color} $header-hour-text-color [null] - The header hour text color of a time picker.\n/// @param {Color} $header-time-period-color [null] - The header AM/PM text color of a time picker.\n/// @param {Color} $background-color [null] - The time-picker panel background color.\n/// @param {box-shadow} $modal-shadow [null] - The custom shadow to be used for the time picker in modal mode.\n/// @param {box-shadow} $dropdown-shadow [null] - The custom shadow to be used for the time picker in dropdown mode.\n/// @param {border-radius} $border-radius [null] - The border radius used for the outline of the picker.\n/// @param {border-radius} $active-item-border-radius [null] - The border radius used for the outline of the currently active item (hours, minutes, AM/PM).\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires extend\n///\n/// @example scss Change the background and text colors in  time picker\n///   $my-time-picker-theme: igx-time-picker-theme(\n///     $text-color: white,\n///     $background-color: black\n///   );\n///   // Pass the theme to the igx-time-picker component mixin\n///   @include igx-time-picker($my-time-picker-theme);\n@function igx-time-picker-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $elevations: $elevations,\n\n    $border-radius: null,\n    $active-item-border-radius: null,\n\n    $text-color: null,\n    $hover-text-color: null,\n    $selected-text-color: null,\n    $active-item-background: null,\n    $header-background: null,\n    $header-hour-text-color: null,\n    $header-time-period-color: null,\n    $background-color: null,\n    $modal-shadow: null,\n    $dropdown-shadow: null\n) {\n    $name: 'igx-time-picker';\n    $time-picker-schema: map-get($schema, $name);\n\n    $theme: apply-palette($time-picker-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map-get($time-picker-schema, 'border-radius')), 0, 20px\n    );\n\n    $active-item-border-radius: round-borders(\n        if($active-item-border-radius, $active-item-border-radius, map-get($time-picker-schema, 'active-item-border-radius')), 0, 20px\n    );\n\n    @if not($text-color) and $background-color {\n        $text-color: text-contrast($background-color);\n    }\n\n    @if not($header-hour-text-color) and $header-background {\n        $header-hour-text-color: text-contrast($header-background);\n    }\n\n    @if not($header-time-period-color) and $header-background {\n        @if type-of($header-background) == 'color' {\n            $header-time-period-color: rgba(text-contrast($header-background), .8);\n        }\n    }\n\n    @if not($selected-text-color) and $active-item-background {\n        $selected-text-color: text-contrast($active-item-background);\n    }\n\n    @if not($active-item-background) and $background-color {\n        @if type-of($background-color) == 'color' {\n            $active-item-background: rgba(text-contrast($background-color), .12);\n        }\n    }\n\n    @if not($modal-shadow) {\n        $elevation: map-get($time-picker-schema, 'modal-elevation');\n        $modal-shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @if not($dropdown-shadow) {\n        $elevation: map-get($time-picker-schema, 'dropdown-elevation');\n        $dropdown-shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        text-color: $text-color,\n        hover-text-color: $hover-text-color,\n        selected-text-color: $selected-text-color,\n        active-item-background: $active-item-background,\n        header-background: $header-background,\n        header-hour-text-color: $header-hour-text-color,\n        header-time-period-color: $header-time-period-color,\n        background-color: $background-color,\n        modal-shadow: $modal-shadow,\n        dropdown-shadow: $dropdown-shadow,\n        border-radius: $border-radius,\n        active-item-border-radius: $active-item-border-radius,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-time-picker($theme) {\n    @include igx-root-css-vars($theme);\n\n    $vertical-header-width: rem(168px);\n\n    %time-picker-display {\n        display: flex;\n        flex-flow: column nowrap;\n        max-width: rem(340px);\n        min-width: rem(320px);\n        border-radius: --var($theme, 'border-radius');\n        box-shadow: --var($theme, 'modal-shadow');\n        overflow: hidden;\n    }\n\n    %time-picker-display--vertical {\n        flex-flow: row nowrap;\n        min-width: rem(540px);\n    }\n\n    %time-picker__main {\n        background: --var($theme, 'background-color');\n        flex: 1 1 auto;\n    }\n\n    %time-picker--dropdown {\n        min-width: rem(200px);\n        box-shadow: --var($theme, 'dropdown-shadow');\n    }\n\n    %time-picker__body {\n        display: flex;\n        padding: rem(10px) 0;\n        justify-content: center;\n    }\n\n    %time-picker-content {\n        width: 100%;\n        padding: 0;\n        color: inherit;\n        line-height: initial;\n    }\n\n    %time-picker-dialog-title {\n        display: none;\n    }\n\n    %time-picker-dialog-actions {\n        margin: 0;\n    }\n\n    %time-picker__hourList {\n        text-align: right;\n    }\n\n    %time-picker__minuteList {\n        text-align: center;\n    }\n\n    %time-picker__ampmList {\n        display: flex;\n        flex-direction: column;\n        padding-top: rem(48px);\n    }\n\n    %time-picker__column {\n        max-width: rem(64px);\n        height: rem(325px);\n        padding: 0;\n        cursor: pointer;\n        display: flex;\n        flex-flow: column nowrap;\n        justify-content: space-between;\n        align-items: center;\n        color: --var($theme, 'text-color');\n        overflow: hidden;\n\n        &:focus,\n        &:active {\n            outline: none;\n        }\n    }\n\n    %time-picker__item {\n        width: rem(54px);\n        padding: rem(5px) rem(10px);\n        border-radius: --var($theme, 'active-item-border-radius');\n        height: rem(48px);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        &:focus,\n        &:active {\n            outline: none;\n        }\n\n        &:hover {\n            color: --var($theme, 'hover-text-color');\n        }\n    }\n\n    %time-picker__item--selected {\n        font-size: rem(24px);\n        color: --var($theme, 'selected-text-color');\n    }\n\n    %time-picker__item--active {\n        background: --var($theme, 'active-item-background');\n    }\n\n    %time-picker__header {\n        background: --var($theme, 'header-background');\n        padding: rem(24px) rem(16px);\n    }\n\n    %time-picker__header-ampm {\n        color: --var($theme, 'header-time-period-color');\n    }\n\n    %time-picker__header--vertical {\n        width: $vertical-header-width;\n    }\n\n    %time-picker__header-hour {\n        display: flex;\n        color: --var($theme, 'header-hour-text-color');\n    }\n\n    %time-picker__header-ampm,\n    %time-picker__header-hour {\n        margin: 0;\n    }\n\n    %time-picker__buttons {\n        display: flex;\n        justify-content: flex-end;\n        height: rem(52px);\n        padding: rem(8px);\n\n        [igxButton] + [igxButton] {\n            margin-left: rem(8px);\n        }\n    }\n}\n\n/// Adds typography styles for the igx-calendar component.\n/// Uses the 'h4', 'subtitle-1' and 'body-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(header-time-period: 'subtitle-1', header-hour: 'h4', content: 'body-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-time-picker-typography($type-scale, $categories: (\n    header-time-period: 'subtitle-1',\n    header-hour: 'h4',\n    content: 'body-1')\n) {\n    $time-period: map-get($categories, 'header-time-period');\n    $header-hour: map-get($categories, 'header-hour');\n    $content: map-get($categories, 'content');\n\n    @include igx-scope('.igx-typography') {\n        %time-picker__header-ampm {\n            @include igx-type-style($type-scale, $time-period);\n        }\n\n        %time-picker__header-hour {\n            @include igx-type-style($type-scale, $header-hour);\n        }\n\n        %time-picker__column {\n            @include igx-type-style($type-scale, $content) {\n                margin-top: 0;\n                margin-bottom: 0;\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified,\n/// the text-color will be assigned automatically to a contrasting color.\n///\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $background [null] - The background color used for the toast.\n/// @param {Color} $text-color [null] - The text-color used for the toast.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for the toast component.\n///\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires text-contrast\n/// @requires extend\n/// @requires round-borders\n///\n/// @example scss Set a custom background color\n///   $my-toast-theme: igx-toast-theme($background: green);\n///   // Pass the theme to the igx-toast component mixin\n///   @include igx-toast($my-toast-theme);\n@function igx-toast-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $border-radius: null,\n    $background: null,\n    $text-color: null\n) {\n    $name: 'igx-toast';\n    $toast-schema: map-get($schema, $name);\n    $theme: apply-palette($toast-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map-get($toast-schema, 'border-radius')), 0, 26px\n    );\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        background: $background,\n        border-radius: $border-radius,\n        text-color: $text-color\n    ));\n}\n\n/// Toast Component\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-toast($theme) {\n    @include igx-root-css-vars($theme);\n\n    $toast-width: 52px;\n    $toast-padding: rem(16px) rem(24px);\n    $toast-margin: rem(42px) auto;\n\n    // @debug $theme;\n\n    %igx-toast-display {\n        position: fixed;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        left: 50%;\n        transform: translate3d(-50%, 0, 0);\n        margin: $toast-margin;\n        padding: $toast-padding;\n        min-width: $toast-width;\n        color: --var($theme, 'text-color');\n        background: --var($theme, 'background');\n        border-radius: --var($theme, 'border-radius');\n        opacity: 0;\n        z-index: 999999;\n    }\n\n    %igx-toast--top {\n        top: 0;\n    }\n\n    %igx-toast--middle {\n        top: 50%;\n        transform: translate3d(-50%, -50%, 0);\n    }\n\n    %igx-toast--bottom {\n        bottom: 0;\n    }\n}\n\n/// Adds typography styles for the igx-toast component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-toast-typography($type-scale, $categories: (text: 'body-2')) {\n    $text: map-get($categories, 'text');\n\n    @include igx-scope('.igx-typography') {\n        %igx-toast-display {\n            @include igx-type-style($type-scale, $text) {\n                margin: 0;\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Returns a map containing all style properties related to the theming the tooltip directive.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $background [null] - The background color of the tooltip.\n/// @param {Color} $text-color [null] - The text color of the tooltip.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for the tooltip component.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires round-borders\n///\n/// @example scss Change the tooltip background\n///   $my-tooltip-theme: igx-tooltip-theme($background: magenta);\n///   // Pass the theme to the igx-tooltip component mixin\n///   @include igx-tooltip($my-checkbox-theme);\n@function igx-tooltip-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $border-radius: null,\n    $background: null,\n    $text-color: null\n) {\n    $name: 'igx-tooltip';\n    $tooltip-schema: map-get($schema, $name);\n    $theme: apply-palette($tooltip-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map-get($tooltip-schema, 'border-radius')), 0, 16px\n    );\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $default-palette,\n        background: $background,\n        border-radius: $border-radius,\n        text-color: $text-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires --var\n@mixin igx-tooltip($theme) {\n    @include igx-root-css-vars($theme);\n\n    %tooltip-display {\n        display: inline-flex;\n        justify-content: center;\n        flex-flow: column wrap;\n        background: --var($theme, 'background');\n        color: --var($theme, 'text-color');\n        border-radius: --var($theme, 'border-radius');\n        margin: 0 auto;\n    }\n\n    %tooltip--desktop {\n        padding: 0 rem(8px);\n        min-height: rem(24px);\n    }\n\n    %tooltip--mobile {\n        padding: 0 rem(16px);\n        min-height: rem(32px);\n    }\n\n    %tooltip--hidden {\n        display: none;\n    }\n}\n\n/// Adds typography styles for the igx-tooltip component.\n/// Uses the 'body-2' category from the typographic scale for mobile tooltips and custom typography for desktop tooltips.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(text-desktop: null, text-mobile: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires rem\n/// @requires {mixin} igx-type-style\n@mixin igx-tooltip-typography(\n    $type-scale,\n    $categories: (text-desktop: null, text-mobile: 'body-2')\n) {\n    $text-desktop: map-get($categories, 'text-desktop');\n    $text-mobile: map-get($categories, 'text-mobile');\n\n\n    @include igx-scope('.igx-typography') {\n        %tooltip--mobile {\n            @include igx-type-style($type-scale, $text-mobile);\n        }\n\n        @if $text-desktop != null {\n            %tooltip--desktop {\n                @include igx-type-style($type-scale, $text-desktop);\n            }\n        } @else {\n            %tooltip--desktop {\n                font-size: rem(10px);\n                font-weight: 600;\n            }\n        }\n    }\n}\n","@import 'grid-print';\n\n@mixin igx-print-layout {\n    @media print {\n        html,\n        body,\n        app-root {\n            min-height: 100vh;\n            min-width: 100vw;\n            margin: 0;\n            display: block;\n        }\n\n        * {\n            background: transparent !important;\n            background-color: transparent !important;\n            color: #000 !important;\n            box-shadow: none !important;\n            text-shadow: none !important;\n            -webkit-print-color-adjust: exact;\n        }\n\n        a[href^='http']::after {\n            content: '[' attr(href) ']';\n            color: blue;\n        }\n\n        .igx-no-print,\n        igx-nav-drawer {\n            display: none !important;\n        }\n\n        @include igx-grid-print();\n\n        %igx-bottom-nav-menu,\n        %igx-group-display,\n        %igx-ripple-display,\n        %igx-slider-display,\n        %igx-snackbar-display,\n        %form-group-display,\n        %cbx-display,\n        %radio-display,\n        %tooltip-display,\n        %igx-toast-display,\n        %igx-navbar-display,\n        %vhelper-display,\n        %igx-button--flat,\n        %igx-button--raised,\n        %igx-button--fab,\n        %igx-button--icon,\n        %igx-button--disabled,\n        %igx-tabs__header,\n        %switch-display,\n        %grid-tbody-scrollbar,\n        %grid__cbx-selection,\n        %circular-display,\n        %linear-display,\n        .igx-carousel__indicators,\n        .igx-carousel__arrow--prev,\n        .igx-carousel__arrow--next {\n            display: none !important;\n        }\n    }\n}\n","$border-color: #ddd;\n$border-pin-color: #999;\n$print-background: #f9f9f9;\n$print-background: #eee;\n\n@mixin igx-grid-print {\n    %grid-display {\n        %form-group-display,\n        %cbx-display,\n        %radio-display,\n        %igx-grid__grouparea,\n        %tooltip-display,\n        %aside,\n        %overlay-display,\n        %igx-ripple-display,\n        %igx-slider-display,\n        %igx-snackbar-display,\n        %switch-display,\n        %time-picker-display,\n        %igx-toast-display,\n        %igx-tabs,\n        %igx-navbar-display,\n        %igx-button--flat,\n        %igx-button--raised,\n        %igx-button--fab,\n        %igx-button--icon,\n        %igx-button--disabled,\n        %grid-tbody-scrollbar,\n        %vhelper-display,\n        %igx-grid-paginator,\n        %igx-grid-toolbar__actions,\n        %grid__cbx-selection,\n        %igx-drop-area__icon,\n        %igx-drop-area__text,\n        %igx-grid__header-indentation,\n        %igx-grid__grouping-indicator,\n        %igx-grid__row-indentation,\n        %igx-grid__hierarchical-expander {\n            display: none !important;\n        }\n\n        %igx-grid__grouparea,\n        %igx-grid-paginator,\n        %igx-grid-toolbar__actions,\n        %igx-drop-area__icon,\n        %igx-drop-area__text,\n        %igx-grid__header-indentation,\n        %igx-grid__grouping-indicator,\n        %igx-grid__row-indentation,\n        %igx-grid__hierarchical-expander,\n        %igx-expansion-panel__header-icon--end,\n        %igx-expansion-panel__header-icon--start,\n        %grid-summaries-patch {\n            display: none !important;\n        }\n\n\n        %igx-grid__grouping-indicator {\n            igx-icon {\n                display: none !important;\n            }\n        }\n\n        %igx-grid__filtering-cell {\n            height: 0 !important;\n            border-top: none !important;\n            border-right: none !important;\n        }\n\n        %grid-tfoot,\n        %igx-grid__grouparea,\n        %igx-grid__filtering-cell,\n        %igx-grid__group-row,\n        %grid-cell-header,\n        %igx-grid-toolbar,\n        %grid-thead-title,\n        %grid-row,\n        %grid-thead {\n            border-color: $border-color !important;\n        }\n\n        %grid-display {\n            igx-icon {\n                color: #666 !important;\n            }\n        }\n\n        %grid-thead,\n        %igx-grid-toolbar,\n        %igx-grid__group-row,\n        %grid-tfoot {\n            background: $print-background !important;\n        }\n\n        %grid-cell-header-title,\n        %grid-cell-text {\n            white-space: unset !important;\n            text-overflow: initial !important;\n            overflow: visible !important;\n        }\n\n        %grid-cell-display {\n            igx-icon {\n                display: none;\n            }\n        }\n\n        %grid-summaries-patch {\n            display: none;\n        }\n\n        %grid-cell--pinned-last {\n            border-right: 2px solid red !important;\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $color [null] - The color of the ripple.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n///\n/// @example scss Change the color\n///   $my-ripple-theme: igx-ripple-theme($color: yellow);\n///   // Pass the theme to the igx-ripple component mixin\n///   igx-ripple($my-ripple-theme);\n@function igx-ripple-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $color: null\n) {\n    $name: 'igx-ripple';\n    $theme: apply-palette(map-get($schema, $name), $palette);\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        color: $color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires --var\n@mixin igx-ripple($theme, $palette: $default-palette) {\n    @include igx-root-css-vars($theme);\n\n    // @debug $theme;\n\n    %igx-ripple-display {\n        display: block;\n        position: absolute;\n        border-radius: 50%;\n        background: --var($theme, 'color');\n        pointer-events: none;\n        transform-origin: center;\n        transform: translate3d(0, 0, 0) scale(0);\n        will-change: opacity, transform;\n        opacity: .5;\n    }\n\n    %igx-ripple-wrapper {\n        overflow: hidden;\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $icon-background [null]- The background color used for avatars of type icon.\n/// @param {Color} $icon-color [null] - The icon color used for avatars of type icon.\n/// @param {Color} $initials-background [null] - The background color used for avatars of type initials.\n/// @param {Color} $initials-color [null] - The text color used for avatars of type initials.\n/// @param {Color} $image-background [null] - The background color used for avatars of type image.\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires text-contrast\n/// @requires extend\n///\n/// @example scss Change the background and icon colors in icon avatars\n///   $my-avatar-theme: igx-avatar-theme($icon-background: black, $icon-color: white);\n///   // Pass the theme to the igx-avatar component mixin\n///   @include igx-avatar($my-avatar-theme);\n@function igx-avatar-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $icon-background: null,\n    $icon-color: null,\n    $initials-background: null,\n    $initials-color: null,\n    $image-background: null\n) {\n    $name: 'igx-avatar';\n    $theme: apply-palette(map-get($schema, $name), $palette);\n\n    @if not($icon-color) and $icon-background {\n        $icon-color: text-contrast($icon-background);\n    }\n\n    @if not($initials-color) and $initials-background {\n        $initials-color: text-contrast($initials-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        icon-background: $icon-background,\n        icon-color: $icon-color,\n        initials-background: $initials-background,\n        initials-color: $initials-color,\n        image-background: $image-background\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-avatar($theme) {\n    @include igx-root-css-vars($theme);\n\n    $small-size: 40px;\n    $medium-size: 64px;\n    $large-size: 88px;\n\n    %igx-avatar-display {\n        position: relative;\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        user-select: none;\n        color: --var($theme, 'initials-color');\n        background: --var($theme, 'initials-background');\n        vertical-align: middle;\n    }\n\n    %igx-avatar--rounded {\n        border-radius: 50%;\n    }\n\n    %igx-avatar--small {\n        width: rem($small-size);\n        height: rem($small-size);\n        min-width: rem($small-size);\n    }\n\n    %igx-avatar--medium {\n        width: rem($medium-size);\n        height: rem($medium-size);\n        min-width: rem($medium-size);\n    }\n\n    %igx-avatar--large {\n        width: rem($large-size);\n        height: rem($large-size);\n        min-width: rem($large-size);\n    }\n\n    %igx-avatar-inner {\n        width: 100%;\n        height: 100%;\n        border-radius: inherit;\n    }\n\n    %igx-avatar-icon {\n        color: --var($theme, 'icon-color');\n        background: --var($theme, 'icon-background');\n    }\n\n    %igx-avatar-image {\n        background-color: --var($theme, 'image-background');\n        background-size: cover;\n        background-repeat: no-repeat;\n        background-position: center;\n    }\n\n    %igx-avatar-initials {\n        text-transform: uppercase;\n        color: --var($theme, 'initials-color');\n        background-color: --var($theme, 'initials-background');\n    }\n\n    %igx-avatar-initials--small {\n        font-size: rem($small-size / 2);\n        line-height: rem($small-size);\n    }\n\n    %igx-avatar-initials--medium {\n        font-size: rem($medium-size / 2);\n        line-height: rem($medium-size);\n    }\n\n    %igx-avatar-initials--large {\n        font-size: rem($large-size / 2);\n        line-height: rem($large-size);\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n///\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n/// @param {Color} $icon-color [null] - The icon color used.\n/// @param {Color} $text-color [null] - The text color used.\n/// @param {Color} $border-color [null] - The border color used.\n/// @param {Color} $background-color [null] - The background color used.\n/// @param {Bool} $disable-shadow [true] - Sets the badge shadow visibility.\n/// @param {Bool} $disable-border [true] - Sets the badge border visibility.\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the badge.\n/// @param {border-radius} $border-radius [null] - The border radius used for badge component.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires text-contrast\n/// @requires rem\n/// @requires round-borders\n/// @requires {variable} $elevations\n///\n/// @example scss Change the text and icon colors in a badge\n///   $my-badge-theme: igx-badge-theme($icon-color: black, $background-color: white);\n///   // IE Supported theme - Pass the theme to the igx-badge component mixin\n///   @include igx-badge($my-badge-theme);\n///\n///   // Theming using css variables (not supported in IE11):\n///   @include igx-css-vars($my-badge-theme);\n@function igx-badge-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $elevations: $elevations,\n\n    $icon-color: null,\n    $text-color: null,\n\n    $border-color: null,\n    $border-radius: null,\n\n    $background-color: null,\n    $shadow: null,\n\n    $disable-shadow: true,\n    $disable-border: true\n) {\n    $name: 'igx-badge';\n    $badge-schema: map-get($schema, $name);\n    $border-width: if($disable-border == true, 0, rem(1px));\n    $theme: apply-palette($badge-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map-get($badge-schema, 'border-radius')), 0, 11px\n    );\n\n    @if not($icon-color) and $background-color {\n        $icon-color: text-contrast($background-color);\n    }\n\n    @if not($text-color) and $background-color {\n        $text-color: text-contrast($background-color);\n    }\n\n    @if not($shadow) {\n        $elevation: map-get($badge-schema, 'elevation');\n        $shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @if $disable-shadow {\n        $shadow: none;\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        icon-color: $icon-color,\n        text-color: $text-color,\n        border-color: $border-color,\n        border-radius: $border-radius,\n        background-color: $background-color,\n        shadow: $shadow,\n        border-width: $border-width\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires igx-color\n/// @requires rem\n/// @requires --var\n@mixin igx-badge($theme) {\n    @include igx-root-css-vars($theme);\n\n    $palette: map-get($theme, 'palette');\n\n    $badge-width: 22px;\n    $badge-height: $badge-width;\n\n    $badge-font-size: rem(11px);\n    $badge-font-weight: normal;\n\n    $badge-icon-font-size: rem(12px);\n\n    $badge-value-padding: rem(4px);\n    $border-type: solid;\n\n    %igx-badge-display {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        min-width: $badge-width;\n        height: $badge-height;\n        font-size: $badge-font-size;\n        font-weight: $badge-font-weight;\n        color: --var($theme, 'text-color');\n        line-height: 1;\n\n        igx-icon {\n            display: inline-flex;\n            justify-content: center;\n            align-items: center;\n            width: $badge-width - 2px;\n            height: $badge-width - 2px;\n            font-size: $badge-icon-font-size;\n            font-weight: $badge-font-weight;\n            color: --var($theme, 'icon-color');\n        }\n    }\n\n    %igx-badge-value {\n        white-space: nowrap;\n        padding: $badge-value-padding;\n    }\n\n    %igx-badge--circle {\n        border-radius: --var($theme, 'border-radius');\n        box-shadow: --var($theme, 'shadow');\n        border-width: --var($theme, 'border-width');\n        border-color: --var($theme, 'border-color');\n        border-style: $border-type;\n        overflow: hidden;\n    }\n\n    %igx-badge--default {\n        background: --var($theme, 'background-color');\n    }\n\n    %igx-circle--success {\n        background: igx-color($palette, 'success');\n    }\n\n    %igx-badge--info {\n        background: igx-color($palette, 'info');\n    }\n\n    %igx-circle--warn {\n        background: igx-color($palette, 'warn');\n    }\n\n    %igx-circle--error {\n        background: igx-color($palette, 'error');\n    }\n\n    %igx-badge--hidden {\n        visibility: hidden;\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// Does ___not___ apply for disabled state colors.\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n///\n/// @param {box-shadow} $shadow [null] - The shadow to be applied for the button group.\n/// @param {Color} $item-text-color [null]- The text color for button group items.\n/// @param {Color} $item-background [null] - The background color for button group items .\n/// @param {Color} $item-border-color [null] - The border color between button group items.\n///\n/// @param {Color} $item-hover-text-color [null] - The hover text color for button group items.\n/// @param {Color} $item-hover-background [null] - The hover background color for button group items.\n///\n/// @param {Color} $disabled-text-color [null]- The text/icon color for a disabled item in the button group.\n/// @param {Color} $disabled-background-color [null] - The background color for a disabled item in the button group.\n///\n/// @param {Color} $item-selected-text-color [null]- The text color for a selected item in the button group.\n/// @param {Color} $item-selected-background [null] - The background color for a selected item in the button group.\n/// @param {Color} $item-selected-border-color [null] - The border color for a selected item from the button group.\n/// @param {Color} $item-selected-hover-background [null] - The background color for a selected item in hover or focus state in the button group.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for button-group component.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires round-borders\n/// @requires $elevations\n///\n/// @example scss Change the background, text, and border colors\n///   $my-button-group-theme: igx-button-group-theme(\n///     $item-text-color: white,\n///     $item-background: rgba(0, 0, 0, .8),\n///     $item-border-color: #dadada\n///   );\n///   // Pass the theme to the igx-button-group component mixin\n///   @include igx-button-group($my-button-group-theme);\n@function igx-button-group-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $elevations: $elevations,\n\n    $shadow: null,\n    $item-text-color: null,\n    $item-background: null,\n    $item-border-color: null,\n    $item-disabled-border: null,\n    $border-radius: null,\n\n    $item-hover-text-color: null,\n    $item-hover-background: null,\n\n    $disabled-text-color: null,\n    $disabled-background-color: null,\n\n    $item-selected-text-color: null,\n    $item-selected-background: null,\n    $item-selected-border-color: null,\n    $item-selected-hover-background: null,\n) {\n    $name: 'igx-button-group';\n    $button-group-schema: map-get($schema, $name);\n    $theme: apply-palette($button-group-schema, $palette);\n\n    $border: 1px solid map-get($theme, 'item-selected-border-color');\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map-get($button-group-schema, 'border-radius')), 0, 20px\n    );\n\n    @if not($item-text-color) and $item-background {\n        @if type_of($item-background) == 'color' {\n            $item-text-color: text-contrast($item-background);\n        }\n    }\n\n    @if not($item-hover-text-color) and $item-hover-background {\n        @if type_of($item-hover-background) == 'color' {\n            $item-hover-text-color: text-contrast($item-hover-background);\n        }\n    }\n\n    @if not($item-selected-background) and $item-background {\n        @if type_of($item-background) == 'color' {\n            $item-selected-text-color: text-contrast($item-background);\n        }\n    }\n\n    @if not($item-selected-text-color) and $item-selected-background {\n        @if type_of($item-selected-background) == 'color' {\n            $item-selected-text-color: text-contrast($item-selected-background);\n        }\n    }\n\n    @if not($disabled-text-color) and $disabled-background-color {\n        @if type_of($disabled-background-color) == 'color' {\n            $disabled-text-color: rgba(text-contrast($item-background), .3);\n        }\n    }\n\n    @if map-get($button-group-schema, 'elevation') > 0 {\n        $border: none;\n    }\n\n    @if not($shadow) {\n        $elevation: map-get($button-group-schema, 'elevation');\n        $shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        item-text-color: $item-text-color,\n        item-background: $item-background,\n        item-border-color: $item-border-color,\n        item-disabled-border: $item-disabled-border,\n        border-radius: $border-radius,\n        item-hover-text-color: $item-hover-text-color,\n        item-hover-background: $item-hover-background,\n        disabled-text-color:$disabled-text-color,\n        disabled-background-color:$disabled-background-color,\n        item-selected-text-color: $item-selected-text-color,\n        item-selected-background: $item-selected-background,\n        item-selected-border-color: $item-selected-border-color,\n        item-selected-hover-background: $item-selected-hover-background,\n        border: $border,\n        shadow: $shadow\n    ));\n}\n\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires igx-color\n/// @requires --var\n@mixin igx-button-group($theme) {\n    @include igx-root-css-vars($theme);\n    $group-item-min-width: 24px;\n    $group-item-border-thickness: 1px;\n    $group-items-margin: rem(10px, 16px);\n\n    %igx-group-display {\n        display: flex;\n        box-shadow: --var($theme, 'shadow');\n        transition: all 140ms $ease-in-out-quad;\n        border-radius: --var($theme, 'border-radius')\n    }\n\n    %igx-group-item {\n        &%igx-button--flat {\n            border-radius: 0;\n        }\n\n        border: $group-item-border-thickness solid --var($theme, 'item-border-color');\n        color: --var($theme, 'item-text-color');\n        background: --var($theme, 'item-background');\n        min-width: $group-item-min-width;\n        display: flex;\n        flex: 1 0 0%;\n        justify-content: center;\n        align-items: center;\n        text-decoration: none;\n        cursor: pointer;\n        user-select: none;\n        position: relative;\n        z-index: 0;\n        @include ellipsis();\n\n        &:not(:nth-child(0)) {\n            margin-left: -1px;\n        }\n\n\n\n        &:first-of-type {\n            border-radius: --var($theme, 'border-radius') 0 0 --var($theme, 'border-radius');\n        }\n\n        &:last-of-type {\n            border-radius: 0 --var($theme, 'border-radius') --var($theme, 'border-radius') 0;\n        }\n\n        &%igx-button--disabled {\n            color: --var($theme, 'disabled-text-color') !important;\n            background: --var($theme, 'disabled-background-color') !important;\n            border-color: --var($theme, 'item-disabled-border');\n        }\n\n        &:hover,\n        &:focus {\n            color: --var($theme, 'item-hover-text-color');\n            background: --var($theme, 'item-hover-background');\n            z-index: 1;\n        }\n    }\n\n    %igx-group-item-vertical {\n        &:not(:nth-child(0)) {\n            margin-top: -1px;\n            margin-left: 0;\n        }\n\n        &:first-of-type {\n            border-radius: --var($theme, 'border-radius') --var($theme, 'border-radius') 0 0;\n        }\n\n        &:last-of-type {\n            border-radius: 0 0 --var($theme, 'border-radius') --var($theme, 'border-radius');\n        }\n    }\n\n    %igx-group-item-selected {\n        color: --var($theme, 'item-selected-text-color');\n        background: --var($theme, 'item-selected-background');\n        border-color: --var($theme, 'item-selected-border-color');\n        position: relative;\n        z-index: 1;\n\n        &:hover,\n        &:focus {\n            color: --var($theme, 'item-selected-text-color');\n            background: --var($theme, 'item-selected-hover-background');\n        }\n    }\n\n    %igx-group-vertical {\n        flex-flow: column;\n    }\n\n    %igx-group-item-content {\n        display: flex;\n        flex-flow: row nowrap;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n\n        * ~ * {\n            margin-left: $group-items-margin;\n        }\n    }\n}\n","////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-in-center {\n    @include keyframes(scale-in-center) {\n        0% {\n            transform: scale(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-bl {\n    @include keyframes(scale-in-bl) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-center {\n    @include keyframes(scale-in-ver-center) {\n        0% {\n            transform: scaleY(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-top {\n    @include keyframes(scale-in-top) {\n        0% {\n            transform: scale(0);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-left {\n    @include keyframes(scale-in-left) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-top {\n    @include keyframes(scale-in-ver-top) {\n        0% {\n            transform: scaleY(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-tr {\n    @include keyframes(scale-in-tr) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-tl {\n    @include keyframes(scale-in-tl) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-bottom {\n    @include keyframes(scale-in-ver-bottom) {\n        0% {\n            transform: scaleY(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-right {\n    @include keyframes(scale-in-right) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-center {\n    @include keyframes(scale-in-hor-center) {\n        0% {\n            transform: scaleX(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-br {\n    @include keyframes(scale-in-br) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-left {\n    @include keyframes(scale-in-hor-left) {\n        0% {\n            transform: scaleX(0);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-bottom {\n    @include keyframes(scale-in-bottom) {\n        0% {\n            transform: scale(0);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-right {\n    @include keyframes(scale-in-hor-right) {\n        0% {\n            transform: scaleX(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n","////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-out-center {\n    @include keyframes (scale-out-center) {\n        0% {\n            transform: scale(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-bl {\n    @include keyframes (scale-out-bl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-vertical {\n    @include keyframes (scale-out-vertical) {\n        0% {\n            transform: scaleY(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-top {\n    @include keyframes (scale-out-top) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-left {\n    @include keyframes (scale-out-left) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-ver-top {\n    @include keyframes (scale-out-ver-top) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-tr {\n    @include keyframes (scale-out-tr) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-tl {\n    @include keyframes (scale-out-tl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-ver-bottom {\n    @include keyframes (scale-out-ver-bottom) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-right {\n    @include keyframes (scale-out-right) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-horizontal {\n    @include keyframes (scale-out-horizontal) {\n        0% {\n            transform: scaleX(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-br {\n    @include keyframes (scale-out-br) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-hor-left {\n    @include keyframes (scale-out-hor-left) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-bottom {\n    @include keyframes (scale-out-bottom) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-hor-right {\n    @include keyframes (scale-out-hor-right) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $button-background [null] - The previous/next buttons idle background color.\n/// @param {Color} $button-hover-background [null] - The previous/next buttons hover background color.\n/// @param {Color} $button-arrow-color [null] - The previous/next buttons idle arrow color.\n/// @param {Color} $button-hover-arrow-color [null] - The previous/next buttons hover arrow color.\n/// @param {Color} $indicator-dot-color [null] - The active indicator dot color.\n/// @param {Color} $indicator-border-color [null] - The idle indicator border color.\n/// @param {Color} $indicator-active-border-color [null] - The active indicator border color.\n/// @param {Bool} $disable-button-shadow [true] - Show shadow underneath the previous/next buttons.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for carousel component.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires igx-elevation\n/// @requires text-contrast\n/// @requires $elevations\n/// @requires round-borders\n///\n/// @example scss Change the previous/next button colors\n///   $my-carousel-theme: igx-carousel-theme(\n///     $button-background: black,\n///     $button-hover-background: white\n///   );\n///   // Pass the carousel theme to the igx-carousel component mixin\n///   @include igx-carousel($my-carousel-theme);\n@function igx-carousel-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $border-radius: null,\n\n    $button-background: null,\n    $button-hover-background: null,\n    $button-arrow-color: null,\n    $button-hover-arrow-color: null,\n\n    $indicator-dot-color: null,\n    $indicator-border-color: null,\n    $indicator-active-border-color: null,\n\n    $disable-button-shadow: true\n){\n    $name: 'igx-carousel';\n    $carousel-schema: map-get($schema, $name);\n    $theme: apply-palette($carousel-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map-get($carousel-schema, 'border-radius')),0 ,36px\n    );\n\n    $button-shadow: if($disable-button-shadow == true, none, igx-elevation($elevations, 1));\n\n    @if not($button-arrow-color) and $button-background {\n        $button-arrow-color: text-contrast($button-background);\n    }\n\n    @if not($button-hover-arrow-color) and $button-hover-background {\n        $button-hover-arrow-color: text-contrast($button-hover-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        border-radius: $border-radius,\n        button-background: $button-background,\n        button-hover-background: $button-hover-background,\n        button-arrow-color: $button-arrow-color,\n        button-hover-arrow-color: $button-hover-arrow-color,\n        button-shadow: $button-shadow,\n\n        indicator-dot-color: $indicator-dot-color,\n        indicator-border-color: $indicator-border-color,\n        indicator-active-border-color: $indicator-active-border-color,\n\n        disable-button-shadow: $disable-button-shadow\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires igx-color\n/// @requires igx-elevation\n/// @requires $elevations\n/// @requires {mixin} animation\n/// @requires {mixin} scale-in-center\n/// @requires {mixin} scale-out-center\n/// @requires --var\n@mixin igx-carousel($theme) {\n    @include igx-root-css-vars($theme);\n\n    @include scale-in-center();\n    @include scale-out-center();\n\n    $carousel-arrow-margin: 0 16px;\n    $carousel-indicators-margin: 16px 0;\n    $carousel-indicators-padding: 0;\n    $carousel-indicator-margin: 0 5px;\n    $indicator-border-style: 2px solid;\n\n    %igx-carousel-display {\n        display: flex;\n        position: relative;\n        justify-content: center;\n        width: 100%;\n        height: 100%;\n        align-items: center;\n        flex-flow: column nowrap;\n        transform-style: preserve-3d;\n    }\n\n    %igx-carousel-slide-wrapper {\n        position: relative;\n        width: 100%;\n        height: inherit;\n        overflow: hidden;\n        outline-style: none;\n        border-radius: --var($theme, 'border-radius');\n\n        .active {\n            display: block;\n        }\n    }\n\n    %igx-carousel-arrow {\n        display: flex;\n        margin: $carousel-arrow-margin;\n        position: absolute;\n        justify-content: center;\n        align-items: center;\n        width: 46px;\n        height: 46px;\n        top: 50%;\n        transform: translateY(-50%);\n        cursor: pointer;\n        border-radius: 50%;\n        outline-style: none;\n        transition: all .15s ease-in-out;\n        color: --var($theme, 'button-arrow-color');\n        background: --var($theme, 'button-background');\n        box-shadow: --var($theme, 'button-shadow');\n\n        span {\n            display: flex;\n            align-items: center;\n        }\n    }\n\n    %igx-carousel-arrow--hover {\n        color: --var($theme, 'button-hover-arrow-color');\n        background: --var($theme, 'button-hover-background');\n    }\n\n    %igx-carousel-arrow--next {\n        right: 0;\n    }\n\n    %igx-carousel-arrow--prev {\n        left: 0;\n    }\n\n    %igx-carousel-indicators {\n        display: flex;\n        margin: $carousel-indicators-margin;\n        justify-content: center;\n        align-items: center;\n        position: absolute;\n        list-style: none;\n        z-index: 10;\n        bottom: 0;\n        left: 50%;\n        transform: translateX(-50%);\n        padding: $carousel-indicators-padding;\n\n        li {\n            margin: $carousel-indicator-margin;\n            position: relative;\n            width: 12px;\n            height: 12px;\n            text-indent: -9999px;\n            cursor: pointer;\n            border: $indicator-border-style;\n            border-color: --var($theme, 'indicator-border-color');\n            border-radius: 50%;\n            transition: all .15s $ease-out-quad;\n            box-shadow: igx-elevation($elevations, 1);\n            opacity: .7;\n\n            &::after {\n                content: '';\n                position: absolute;\n                top: 1px;\n                bottom: 1px;\n                left: 1px;\n                right: 1px;\n                border-radius: inherit;\n                background: --var($theme, 'indicator-dot-color');\n                @include animation('scale-out-center' .15s $ease-out-quad forwards);\n                opacity: 0;\n            }\n\n            &.active {\n                border: $indicator-border-style;\n                border-color: --var($theme, 'indicator-active-border-color');\n                opacity: 1;\n            }\n\n            &.active::after {\n                opacity: 1;\n                @include animation('scale-in-center' .15s $ease-out-quad forwards);\n            }\n\n            &:hover {\n                opacity: 1;\n            }\n        }\n    }\n\n    %igx-carousel-slide {\n        display: none;\n        width: 100%;\n        height: 100%;\n        position: relative;\n        transition: .5s ease-in-out left;\n        backface-visibility: hidden;\n        perspective: 1000px;\n    }\n\n    %igx-carousel-slide img {\n        width: inherit;\n        height: inherit;\n        transform: scale(1.1);\n    }\n}\n","////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-up-center {\n    @include keyframes(scale-up-center) {\n        0% {\n            transform: scale(.5)\n        }\n\n        100% {\n            transform: scale(1)\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-bl {\n    @include keyframes(scale-up-bl) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-center {\n    @include keyframes(scale-up-ver-center) {\n        0% {\n            transform: scaleY(.4);\n        }\n\n        100% {\n            transform: scaleY(1);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-top {\n    @include keyframes(scale-up-top) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 50% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-left {\n    @include keyframes(scale-up-left) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 0% 50%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-top {\n    @include keyframes(scale-up-ver-top) {\n        0% {\n            transform: scaleY(.4);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-tr {\n    @include keyframes(scale-up-tr) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-tl {\n    @include keyframes(scale-up-tl) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-bottom {\n    @include keyframes(scale-up-ver-bottom) {\n        0% {\n            transform: scaleY(.4);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-right {\n    @include keyframes(scale-up-right) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 100% 50%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-center {\n    @include keyframes(scale-up-hor-center) {\n        0% {\n            transform: scaleX(.4);\n        }\n\n        100% {\n            transform: scaleX(1);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-br {\n    @include keyframes(scale-up-br) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-left {\n    @include keyframes(scale-up-hor-left) {\n        0% {\n            transform: scaleX(.4);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-bottom {\n    @include keyframes(scale-up-bottom) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 50% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-right {\n    @include keyframes(scale-up-hor-right) {\n        0% {\n            transform: scaleX(.4);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-center {\n    @include keyframes(scale-down-center) {\n        0% {\n            transform: scale(1);\n        }\n\n        100% {\n            transform: scale(.5);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-bl {\n    @include keyframes(scale-down-bl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-center {\n    @include keyframes(scale-down-ver-center) {\n        0% {\n            transform: scaleY(1);\n        }\n\n        100% {\n            transform: scaleY(.3);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-top {\n    @include keyframes(scale-down-top) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 50% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-left {\n    @include keyframes(scale-down-left) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 0% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-top {\n    @include keyframes(scale-down-ver-top) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scaleY(.3);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-tr {\n    @include keyframes(scale-down-tr) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-tl {\n    @include keyframes(scale-down-tl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-top-bottom {\n    @include keyframes(scale-down-ver-to-bottom) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scaleY(.3);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-right {\n    @include keyframes(scale-down-right) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 100% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-center {\n    @include keyframes(scale-down-hor-center) {\n        0% {\n            transform: scaleX(1);\n        }\n\n        100% {\n            transform: scaleX(.3);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-br {\n    @include keyframes(scale-down-br) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-left {\n    @include keyframes(scale-down-hor-left) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scaleX(.3);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-bottom {\n    @include keyframes(scale-down-bottom) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 50% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-right {\n    @include keyframes(scale-down-hor-right) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scaleX(.3);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @param {number} $start-scale [.5] - The scale to start the animation from.\n/// @param {number} $end-scale [1] - The scale to end the animation at.\n/// @requires {mixin} keyframes\n@mixin scale-in-out($start-scale: .5, $end-scale: 1) {\n    @include keyframes(scale-in-out) {\n        50% {\n            transform: scale($start-scale);\n            transform-origin: 50% 50%;\n        }\n\n        100% {\n            transform: scale($end-scale);\n            transform-origin: 50% 50%;\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $search-separator-border-color [null] - The combo search box separator color.\n/// @param {Color} $empty-list-placeholder-color [null] - The combo placeholder text color.\n/// @param {Color} $empty-list-background [null] - The combo list background color.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n@function igx-combo-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $search-separator-border-color: null,\n    $empty-list-placeholder-color: null,\n    $empty-list-background: null\n) {\n    $name: 'igx-combo';\n    $theme: apply-palette(map-get($schema, $name), $palette);\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        search-separator-border-color: $search-separator-border-color,\n        empty-list-placeholder-color: $empty-list-placeholder-color,\n        empty-list-background: $empty-list-background\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-combo($theme) {\n    @include igx-root-css-vars($theme);\n\n    %igx-combo {\n        position: relative;\n        display: block;\n\n        %igx-button--icon {\n            width: rem(24px);\n            height: rem(24px);\n        }\n    }\n\n    %igx-combo__checkbox {\n        margin-right: rem(8);\n    }\n\n\n    [dir='rtl'] {\n        %igx-combo__checkbox {\n            margin-right: 0;\n            margin-left: rem(8);\n        }\n    }\n\n    %igx-combo__drop-down {\n        position: absolute;\n        width: 100%;\n\n        .igx-drop-down {\n            width: 100%;\n        }\n    }\n\n    %igx-combo__search {\n        padding: rem(8px) rem(16px);\n        margin: 0 !important;\n        z-index: 26;\n        border-bottom: 1px dashed --var($theme, 'search-separator-border-color');\n    }\n\n    %igx-combo__content {\n        position: relative;\n        overflow: hidden;\n\n        &:focus {\n            outline: transparent;\n        }\n    }\n\n    %igx-combo__add {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        position: relative;\n        padding: rem(16px);\n        background: --var($theme, 'empty-list-background');\n    }\n\n    %igx-combo__empty {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        color: --var($theme, 'empty-list-placeholder-color');\n        padding: 0 rem(24px);\n        font-size: rem(13px);\n    }\n\n    // TODO: make this part better\n    %igx-combo__add-item {\n        &%igx-drop-down__item {\n            width: auto !important;\n            padding: 0 !important;\n\n            &:hover {\n                background: transparent!important;\n            }\n        }\n\n        &%igx-drop-down__item--focused {\n            &:focus {\n                background: transparent!important;\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $theme - The calendar theme used to style the component.\n/// @requires $elevations\n/// @requires igx-elevation\n/// @requires rem\n@mixin igx-date-picker($theme) {\n    %date-picker {\n        min-width: 200px;\n        max-width: 340px;\n        box-shadow: igx-elevation($elevations, 24);\n        border-radius: --var($theme, 'border-radius');\n        background: --var($theme, 'content-background');\n        overflow: hidden;\n\n        %cal-display {\n            background: --var($theme, 'content-background');\n        }\n\n        %cal-header-display {\n            background: --var($theme, 'header-background');\n            color: --var($theme, 'header-text-color');\n        }\n\n        %cal-picker-arrow {\n            color: --var($theme, 'picker-arrow-color');\n\n            &:hover {\n                color: --var($theme, 'picker-arrow-hover-color');\n            }\n        }\n\n        %cal-picker-date {\n            color: --var($theme, 'picker-text-color');\n\n            &:hover,\n            &:focus {\n                color: --var($theme, 'picker-text-hover-color');\n            }\n        }\n\n        %cal-value {\n            color: --var($theme, 'content-text-color');\n        }\n\n        %cal-value--label {\n            color: --var($theme, 'inactive-text-color');\n        }\n\n        %cal-value--weekend {\n            color: --var($theme, 'weekend-text-color');\n        }\n\n        %cal-value--special {\n            color: --var($theme, 'date-special-text-color');\n            background: --var($theme, 'date-special-background');\n        }\n\n        %cal-value--disabled {\n            color: --var($theme, 'date-disabled-text-color');\n        }\n\n        %cal-value--year-current {\n            color: --var($theme, 'year-current-text-color');\n        }\n\n        %cal-value--year-hover {\n            color: --var($theme, 'year-hover-text-color');\n        }\n\n        %cal-value--month-hover {\n            color: --var($theme, 'month-hover-text-color');\n        }\n\n        %cal-value--month-current {\n            color: --var($theme, 'month-current-text-color');\n        }\n\n        %cal-value--inactive {\n            color: --var($theme, 'inactive-text-color');\n        }\n\n        %cal-value--selected {\n            color: --var($theme, 'date-selected-text-color');\n            background: --var($theme, 'date-selected-background') !important;\n        }\n\n        %cal-value--current {\n            color: --var($theme, 'date-current-text-color');\n        }\n\n        %cal-value--hover {\n            background: --var($theme, 'date-hover-background');\n        }\n    }\n\n    %date-picker--vertical {\n        min-width: 368px; /* 168px for header + 200px for the content */\n        max-width: 540px;\n    }\n\n    %date-picker--dropdown {\n        display: flex;\n        flex: 1 0 0;\n        flex-direction: column;\n        box-shadow: igx-elevation($elevations, 3);\n    }\n\n    %date-picker__buttons {\n        display: flex;\n        justify-content: flex-end;\n        padding: rem(8px);\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $color [null] - The color of the divider. (Gradients are not supported for dashed dividers).\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n///\n/// @example scss Change the color of the divider\n///   $my-divider-theme: igx-divider-theme($color: orange);\n///   // Pass the theme to the igx-divider component mixin\n///   @include igx-divider($my-divider-theme);\n@function igx-divider-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $color: null\n) {\n    $name: 'igx-divider';\n    $theme: apply-palette(map-get($schema, $name), $palette);\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        color: $color\n    ));\n}\n\n///\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires --var\n///\n@mixin igx-divider($theme) {\n    @include igx-root-css-vars($theme);\n\n    %igx-divider-display {\n        display: block;\n        height: 1px;\n        background: --var($theme, 'color');\n    }\n\n    %igx-divider--dashed {\n        background: linear-gradient(to right, --var($theme, 'color') 50%, transparent 50%);\n        background-size: 10px 1px; /* dash size */\n    }\n\n    %igx-divider--vertical {\n        display: inline-block;\n        width: 1px;\n        min-width: 1px;\n        height: auto;\n    }\n\n    %igx-divider--vertical-dashed {\n        background: linear-gradient(to bottom, --var($theme, 'color') 50%, transparent 50%);\n        background-size: 1px 10px; /* dash size */\n    }\n}\n","@import './excel-filtering-theme';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n///\n/// @param {Color} $header-background [null] - The table header background color.\n/// @param {Color} $header-text-color [null] - The table header text color.\n/// @param {String} $header-border-width [null] - The border width used for header borders.\n/// @param {String} $header-border-style [null] - The border style used for header borders.\n/// @param {Color} $header-border-color [null] - The color used for header borders.\n///\n/// @param {Color} $sorted-header-icon-color [null] - The sort icon color when sorted.\n///\n/// @param {Color} $content-background [null] - The table body background color.\n/// @param {Color} $content-text-color [null] - The table body text color.\n///\n/// @param {Color} $ghost-header-text-color [null] - The dragged header text color.\n/// @param {Color} $ghost-header-icon-color [null] - The dragged header icon color.\n/// @param {Color} $ghost-header-background [null] - The dragged header background color.\n///\n/// @param {Color} $row-odd-background [null] - The background color of odd rows.\n/// @param {Color} $row-even-background [null] - The background color of even rows.\n/// @param {Color} $row-odd-text-color [null] - The text color of odd rows.\n/// @param {Color} $row-even-text-color [null] - The text color of even rows.\n/// @param {Color} $row-selected-background [null] - The selected row background color.\n/// @param {Color} $row-selected-text-color [null] - The selected row text color.\n/// @param {Color} $row-hover-background [null] - The hover row background color.\n/// @param {Color} $row-hover-text-color [null] - The hover row text color.\n/// @param {Color} $row-border-color [null] - The row bottom border color.\n///\n/// @param {String} $pinned-border-width [null] - The border width of the pinned border.\n/// @param {String} $pinned-border-style [null] - The CSS border style of the pinned border.\n/// @param {Color} $pinned-border-color [null] - The color of the pinned border.\n///\n/// @param {Color} $cell-active-border-color [null] - The border color for the currently active(focused) cell.\n/// @param {Color} $cell-selected-background [null] - The selected cell background color.\n/// @param {Color} $cell-selected-text-color [null] - The selected cell text color.\n/// @param {Color} $cell-editing-background [null] - The background color of the cell being edited.\n/// @param {Color} $cell-edited-value-color [null] - The text color of a sell that has been edited.\n///\n/// @param {Color} $edit-mode-color [null] - The color applied around the row when in editing mode.\n/// @param {Color} $edited-row-indicator [null] - The color applied to the edited row indicator line.\n///\n/// @param {Color} $resize-line-color [null] - The table header resize line color.\n/// @param {Color} $drop-indicator-color [null] - The color applied to the line between the columns when dragging a column.\n///\n/// @param {Color} $grouparea-background [null] - The grid group area background color.\n///\n/// @param {Color} $group-row-background [null] - The grid group row background color.\n/// @param {Color} $group-row-selected-background [null] - The drop area background on drop color.\n/// @param {Color} $group-label-column-name-text [null] - The grid group row column name text color.\n/// @param {Color} $group-label-icon [null] - The grid group row icon color.\n/// @param {Color} $group-label-text [null] - The grid group row text color.\n///\n/// @param {Color} $expand-all-icon-color [null] - The grid header expand all group rows icon color.\n/// @param {Color} $expand-all-icon-hover-color [null] - The grid header expand all group rows icon hover color.\n///\n/// @param {Color} $expand-icon-color [null] - The grid row expand icon color.\n/// @param {Color} $expand-icon-hover-color [null] - The grid row expand icon hover color.\n///\n/// @param {Color} $active-expand-icon-color [null] - The drop area background on drop color.\n/// @param {Color} $active-expand-icon-hover-color [null] - The drop area background on drop color.\n///\n/// @param {Color} $group-count-background [null] - The grid group row cont badge background color.\n/// @param {Color} $group-count-text-color [null] - The grid group row cont badge text color.\n///\n/// @param {Color} $drop-area-text-color [null] - The drop area text color.\n/// @param {Color} $drop-area-icon-color [null] - The drop area icon color.\n/// @param {Color} $drop-area-background [null] - The drop area background color.\n/// @param {Color} $drop-area-on-drop-background [null] - The drop area background on drop color.\n///\n/// @param {Color} $filtering-header-background [null] - The background color of the filtered column header.\n/// @param {Color} $filtering-header-text-color [null] - The text color color of the filtered column header.\n/// @param {Color} $filtering-row-background [null] - The background color of the filtering row.\n/// @param {Color} $filtering-row-text-color [null] - The text-color color of the filtering row.\n/// @param {Color} $tree-filtered-text-color [null] - grouping row background color on focus.\n///\n/// @param {Color} $body-summaries-background [null] - The background color of the summary groups located the body.\n/// @param {Color} $body-summaries-text-color [null] - The text color of the summary results located the body.\n/// @param {Color} $root-summaries-background [null] - The background color of the summary groups located the footer.\n/// @param {Color} $root-summaries-text-color [null] - The text color of the summary results located the footer.\n///\n/// @param {Color} $row-highlight [null] - The grid row highlight indication color.\n/// @param {box-shadow} $grid-shadow [null] - The shadow of the grid.\n/// @param {box-shadow} $drag-shadow [null] - The shadow used for movable elements (ex. column headers).\n/// @param {color} $row-ghost-background [null] - The dragged row background color.\n/// @param {color} $row-drag-color [null] - The row drag handle color.\n/// @param {border-radius} $drop-area-border-radius [null] - The border radius used for column drop area.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires luminance\n/// @requires text-contrast\n/// @requires hexrgba\n/// @requires extend\n/// @requires igx-elevation\n/// @requires $elevations\n@function igx-grid-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $elevations: $elevations,\n\n    $header-background: null,\n    $header-text-color: null,\n    $header-border-width: null,\n    $header-border-style: null,\n    $header-border-color: null,\n\n    $sorted-header-icon-color: null,\n\n    $content-background: null,\n    $content-text-color: null,\n\n    $ghost-header-text-color: null,\n    $ghost-header-icon-color: null,\n    $ghost-header-background: null,\n\n    $row-odd-background: null,\n    $row-even-background: null,\n    $row-odd-text-color: null,\n    $row-even-text-color: null,\n    $row-selected-background: null,\n    $row-selected-text-color: null,\n    $row-hover-background: null,\n    $row-hover-text-color: null,\n    $row-border-color: null,\n\n    $pinned-border-width: null,\n    $pinned-border-style: null,\n    $pinned-border-color: null,\n\n    $cell-active-border-color: null,\n    $cell-selected-background: null,\n    $cell-selected-text-color: null,\n    $cell-editing-background: null,\n    $cell-edited-value-color: null,\n\n    $edit-mode-color: null,\n    $edited-row-indicator: null,\n\n    $resize-line-color: null,\n    $drop-indicator-color: null,\n\n    $grouparea-background: null,\n\n    $group-row-background: null,\n    $group-row-selected-background: null,\n    $group-label-column-name-text: null,\n    $group-label-icon: null,\n    $group-label-text: null,\n\n    $expand-all-icon-color: null,\n    $expand-all-icon-hover-color: null,\n\n    $expand-icon-color: null,\n    $expand-icon-hover-color: null,\n\n    $active-expand-icon-color: null,\n    $active-expand-icon-hover-color: null,\n\n    $group-count-background: null,\n    $group-count-text-color: null,\n\n    $drop-area-text-color: null,\n    $drop-area-icon-color: null,\n    $drop-area-background: null,\n    $drop-area-on-drop-background: null,\n\n    $filtering-header-background: null,\n    $filtering-header-text-color: null,\n    $filtering-row-background: null,\n    $filtering-row-text-color: null,\n    $tree-filtered-text-color: null,\n\n    $body-summaries-background: null,\n    $body-summaries-text-color: null,\n    $root-summaries-background: null,\n    $root-summaries-text-color: null,\n\n    $row-highlight: null,\n    $grid-shadow: null,\n    $drag-shadow: null,\n    $row-ghost-background: null,\n    $row-drag-color: null,\n    $drop-area-border-radius: null,\n) {\n    $name: 'igx-grid';\n    $grid-schema: map-get($schema, $name);\n    $theme: apply-palette($grid-schema, $palette);\n\n    $drop-area-border-radius: round-borders(\n        if($drop-area-border-radius, $drop-area-border-radius, map-get($grid-schema, 'drop-area-border-radius')), 0, 16px\n    );\n\n\n    $tree-selected-filtered-row-text-color: rgba(text-contrast(map-get($theme, 'row-selected-background')), .5);\n    $tree-selected-filtered-cell-text-color: rgba(text-contrast(map-get($theme, 'cell-selected-background')), .5);\n    $row-selected-cell-background: darken-color(map-get($theme, 'row-selected-background'), 8%);\n\n    @if not($ghost-header-icon-color) and $ghost-header-background {\n        @if type-of($ghost-header-background) == 'color' {\n            $ghost-header-icon-color: rgba(text-contrast($ghost-header-background), .07);\n        }\n    }\n\n    @if not($ghost-header-text-color) and $ghost-header-background {\n        $ghost-header-text-color: text-contrast($ghost-header-background);\n    }\n\n    @if $header-background and alpha($header-background) < 1 {\n        $header-background: hexrgba($header-background, igx-color($palette, 'surface'));\n    }\n\n    @if not($header-text-color) and $header-background {\n        $header-text-color: text-contrast($header-background);\n    }\n\n    @if not($header-border-color) and $header-background {\n        @if type-of($header-background) == 'color' {\n            $header-border-color: rgba(text-contrast($header-background), .24);\n        }\n    }\n\n    @if not($content-text-color) and $content-background {\n        $content-text-color: text-contrast($content-background);\n    }\n\n    @if not($row-odd-background) and $content-background {\n        $row-odd-background: $content-background;\n    }\n\n    @if not($row-even-background) and $content-background {\n        $row-even-background: $content-background;\n    }\n\n    @if not($row-odd-text-color) and $row-odd-background {\n        $row-odd-text-color: text-contrast($row-odd-background);\n    }\n\n    @if not($row-even-text-color) and $row-even-background {\n        $row-even-text-color: text-contrast($row-even-background);\n    }\n\n    @if not($row-hover-background) and $content-background {\n        @if type-of($content-background) == 'color' {\n            $row-hover-background: rgba(text-contrast($content-background), .08)\n        }\n    }\n\n    @if not($row-hover-text-color) and $row-hover-background {\n        $row-hover-text-color: text-contrast($row-hover-background);\n    }\n\n    @if not($cell-selected-text-color) and $cell-selected-background {\n        $cell-selected-text-color: text-contrast($cell-selected-background);\n    }\n\n    @if not($row-selected-text-color) and $row-selected-background {\n        $row-selected-text-color: $row-selected-background;\n    }\n\n    @if not($row-border-color) and $content-background {\n        @if type-of($content-background) == 'color' {\n            $row-border-color: rgba(text-contrast($content-background), .08)\n        }\n    }\n\n    @if not($pinned-border-color) and $content-background {\n        @if type-of($content-background) == 'color' {\n            $pinned-border-color: rgba(text-contrast($content-background), .08)\n        }\n    }\n\n    @if not($group-row-background) and $header-background {\n        $group-row-background: $header-background\n    }\n\n    @if not($expand-icon-color) and $group-row-background {\n        $expand-icon-color: text-contrast($group-row-background)\n    }\n\n    @if not($group-label-text) and $group-row-selected-background {\n        $group-label-text: text-contrast($group-row-selected-background)\n    }\n\n    @if not($expand-icon-color) and $group-row-selected-background {\n        $expand-icon-color: text-contrast($group-row-selected-background)\n    }\n\n    @if not($group-count-background) and $group-row-selected-background {\n        $group-count-background: text-contrast($group-row-selected-background);\n    }\n\n    @if not($expand-all-icon-color) and $header-background {\n        @if type-of($header-background) == 'color' {\n            $expand-all-icon-color: rgba(text-contrast($header-background), .87);\n        }\n    }\n\n    @if not($expand-all-icon-hover-color) and $header-background {\n        $expand-all-icon-hover-color: text-contrast($header-background);\n    }\n\n    @if not($group-label-text) and $group-row-background {\n        $group-label-text: text-contrast($group-row-background)\n    }\n\n    @if not($group-count-background) and $group-row-background {\n        $group-count-background: text-contrast($group-row-background);\n    }\n\n    @if not($group-count-text-color) and $group-count-background {\n        $group-count-text-color: text-contrast($group-count-background);\n    }\n\n    @if not($grouparea-background) and $header-background {\n        $grouparea-background: $header-background\n    }\n\n    @if not($drop-area-background) and $grouparea-background {\n        $drop-area-background: text-contrast($grouparea-background);\n    }\n\n    @if not($drop-area-on-drop-background) and $drop-area-background {\n        $drop-area-on-drop-background: $drop-area-background;\n    }\n\n    @if not($drop-area-text-color) and $drop-area-background {\n        $drop-area-text-color: text-contrast($drop-area-background)\n    }\n\n    @if not($drop-area-icon-color) and $drop-area-background {\n        $drop-area-icon-color: text-contrast($drop-area-background)\n    }\n\n    @if not($filtering-header-background) and $header-background {\n        @if type-of($header-background) == 'color' and luminance($header-background) < .5 {\n            $filtering-header-background: hexrgba(lighten-color($header-background, 5%));\n        } @else {\n            $filtering-header-background: hexrgba(darken-color($header-background, 5%));\n        }\n    }\n\n    @if not($filtering-header-text-color) and $filtering-header-background {\n        $filtering-header-text-color: text-contrast($filtering-header-background);\n    }\n\n    @if not($filtering-row-background) and $header-background {\n        @if type-of($header-background) == 'color' and luminance($header-background) < .5 {\n            $filtering-row-background: hexrgba(lighten-color($header-background, 5%));\n        } @else {\n            $filtering-row-background: hexrgba(darken-color($header-background, 5%));\n        }\n    }\n\n    @if not($filtering-row-text-color) and $filtering-row-background {\n        $filtering-row-text-color: text-contrast(hexrgba($filtering-row-background));\n    }\n\n    @if not($body-summaries-text-color) and $body-summaries-background {\n        $body-summaries-text-color: text-contrast($body-summaries-background);\n    }\n\n    @if not($root-summaries-text-color) and $root-summaries-background {\n        $root-summaries-text-color: text-contrast($root-summaries-background);\n    }\n\n    @if not($grid-shadow) {\n        $grid-elevation: map-get($grid-schema, 'grid-elevation');\n        $grid-shadow: igx-elevation($elevations, $grid-elevation);\n    }\n\n    @if not($drag-shadow) {\n        $drag-elevation: map-get($grid-schema, 'drag-elevation');\n        $drag-shadow: igx-elevation($elevations, $drag-elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n\n        header-background: $header-background,\n        header-text-color: $header-text-color,\n        header-border-width: $header-border-width,\n        header-border-style: $header-border-style,\n        header-border-color: $header-border-color,\n\n        sorted-header-icon-color: $sorted-header-icon-color,\n\n        ghost-header-text-color: $ghost-header-text-color,\n        ghost-header-icon-color: $ghost-header-icon-color,\n        ghost-header-background: $ghost-header-background,\n\n        content-background: $content-background,\n        content-text-color: $content-text-color,\n\n        row-odd-background: $row-odd-background,\n        row-even-background: $row-even-background,\n        row-odd-text-color: $row-odd-text-color,\n        row-even-text-color: $row-even-text-color,\n        row-selected-background: $row-selected-background,\n        row-selected-text-color: $row-selected-text-color,\n        row-hover-background: $row-hover-background,\n        row-hover-text-color: $row-hover-text-color,\n        row-border-color: $row-border-color,\n\n        pinned-border-width: $pinned-border-width,\n        pinned-border-style: $pinned-border-style,\n        pinned-border-color: $pinned-border-color,\n\n        cell-active-border-color: $cell-active-border-color,\n        cell-selected-background: $cell-selected-background,\n        cell-editing-background: $cell-editing-background,\n        cell-selected-text-color: $cell-selected-text-color,\n\n        edit-mode-color: $edit-mode-color,\n        edited-row-indicator: $edited-row-indicator,\n        cell-edited-value-color: $cell-edited-value-color,\n\n        resize-line-color: $resize-line-color,\n\n        drop-indicator-color: $drop-indicator-color,\n\n        grouparea-background: $grouparea-background,\n        group-label-column-name-text: $group-label-column-name-text,\n        group-label-icon: $group-label-icon,\n        group-label-text: $group-label-text,\n\n        expand-all-icon-color: $expand-all-icon-color,\n        expand-all-icon-hover-color: $expand-all-icon-hover-color,\n\n        expand-icon-color: $expand-icon-color,\n        expand-icon-hover-color: $expand-icon-hover-color,\n        active-expand-icon-color: $active-expand-icon-color,\n        active-expand-icon-hover-color: $active-expand-icon-hover-color,\n\n        group-count-background: $group-count-background,\n        group-count-text-color: $group-count-text-color,\n\n        group-row-background: $group-row-background,\n        group-row-selected-background: $group-row-selected-background,\n\n        drop-area-text-color: $drop-area-text-color,\n        drop-area-icon-color: $drop-area-icon-color,\n        drop-area-on-drop-background: $drop-area-on-drop-background,\n        drop-area-background: $drop-area-background,\n\n        filtering-header-background: $filtering-header-background,\n        filtering-header-text-color: $filtering-header-text-color,\n        filtering-row-background: $filtering-row-background,\n        filtering-row-text-color: $filtering-row-text-color,\n\n        tree-filtered-text-color: $tree-filtered-text-color,\n        tree-selected-filtered-row-text-color: $tree-selected-filtered-row-text-color,\n        tree-selected-filtered-cell-text-color: $tree-selected-filtered-cell-text-color,\n\n        body-summaries-background: $body-summaries-background,\n        body-summaries-text-color: $body-summaries-text-color,\n        root-summaries-background: $root-summaries-background,\n        root-summaries-text-color: $root-summaries-text-color,\n        row-selected-cell-background: $row-selected-cell-background,\n\n        row-highlight: $row-highlight,\n        grid-shadow: $grid-shadow,\n        drag-shadow: $drag-shadow,\n        row-ghost-background: $row-ghost-background,\n        row-drag-color: $row-drag-color,\n        drop-area-border-radius: $drop-area-border-radius\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires {mixin} ellipsis\n/// @requires {mixin} _excel-filtering\n/// @requires igx-color\n/// @requires igx-contrast-color\n/// @requires rem\n/// @requires --var\n@mixin igx-grid($theme) {\n    @include igx-root-css-vars($theme);\n\n    $palette: map-get($theme, 'palette');\n    // @debug $theme;\n\n    $grid-shadow: --var($theme, 'grid-shadow');\n\n    $grid-caption-fs: rem(20px);\n    $grid-caption-lh: rem(32px);\n    $grid-caption-padding: rem(16px) rem(24px);\n\n    $grid-head-fs: rem(12px);\n    $grid-head-fw: 600;\n    $transition: all 120ms $ease-in-out-cubic;\n\n    // Cell\n    $grid-cell-align-num: right;\n    $grid-cell-fs: rem(13px);\n    $grid-cell-lh: rem(16px);\n    $grid-cell-pinned-style: 1px solid;\n    $grid-cell-pinned-border-color: igx-color($palette, 'grays', 300);\n\n    $grid-header-border: --var($theme, 'header-border-width') --var($theme, 'header-border-style') --var($theme, 'header-border-color');\n\n    $cell-pin: (\n        style: --var($theme, 'pinned-border-width') --var($theme, 'pinned-border-style'),\n        color: --var($theme, 'pinned-border-color')\n    );\n\n    $grid-header-padding: (\n        comfortable: 0 rem(24px),\n        cosy: 0 rem(16px),\n        compact: 0 rem(12px)\n    );\n\n    $grid-header-height: (\n        comfortable: rem(50px),\n        cosy: rem(40px),\n        compact: rem(32px)\n    );\n\n    $drop-area-height: (\n        comfortable: rem(32px),\n        cosy: rem(24px),\n        compact: rem(24px)\n    );\n\n    $cell-padding-comfortable: rem(24px);\n    $cell-padding-cosy: rem(16px);\n    $cell-padding-compact: rem(12px);\n\n    $grid-cell-padding: (\n        comfortable: 0 $cell-padding-comfortable,\n        cosy: 0 $cell-padding-cosy,\n        compact: 0 $cell-padding-compact\n    );\n\n    $hierarchical-grid-indent: (\n        comfortable: rem(24px),\n        cosy: rem(16px),\n        compact: rem(12px)\n    );\n\n    $hierarchical-action-icon: 24px;\n\n    $grouparea-padding: (\n        comfortable: rem(8px) rem(24px),\n        cosy: rem(8px) rem(16px),\n        compact: rem(4px) rem(12px)\n    );\n\n    $grouparea-min-height: (\n        comfortable: rem(57px),\n        cosy: rem(49px),\n        compact: rem(41px)\n    );\n\n    $grid-grouping-indicator-padding: (\n        comfortable: rem(24px),\n        cosy: rem(16px),\n        compact: rem(12px)\n    );\n\n    $indicator-icon-width: rem(24px);\n    $drag-icon-size: rem(24px);\n    $grouping-padding-right: rem(12px);\n\n    %grid-display {\n        position: relative;\n        display: grid;\n        grid-template-rows: auto auto auto 1fr auto auto;\n        grid-template-columns: 1fr;\n        overflow: hidden;\n        box-shadow: $grid-shadow;\n        outline-style: none;\n        z-index: 0;\n\n        %cbx-display {\n            min-width: rem(20px);\n        }\n    }\n\n    %grid-caption {\n        display: flex;\n        align-items: center;\n        font-size: $grid-caption-fs;\n        line-height: $grid-caption-lh;\n        padding: $grid-caption-padding;\n        grid-row: 1;\n    }\n\n    %grid-thead,\n    %grid-tfoot {\n        position: relative;\n        display: flex;\n        background: --var($theme, 'header-background');\n        color: --var($theme, 'header-text-color');\n        overflow: hidden;\n\n        %grid-row {\n            position: relative;\n            background: inherit;\n            color: inherit;\n            z-index: 2;\n\n            &:hover {\n                background: inherit;\n                color: inherit;\n            }\n        }\n    }\n\n    %grid-thead {\n        border-bottom: $grid-header-border;\n        z-index: 2;\n\n        %grid__group-indentation {\n            &::after {\n                display: none;\n            }\n        }\n\n        %grid__cbx-selection--push {\n            align-items: flex-start;\n            padding-top: (map-get($grid-header-height, 'comfortable') - rem(20px)) / 2;\n        }\n\n        %grid-row:last-of-type {\n            border-bottom: none;\n        }\n    }\n\n    %grid-thead-container {\n        grid-row: 3;\n        display: flex;\n\n        %igx-grid__drag-indicator {\n            cursor: default;\n        }\n\n        %grid-row--mrl {\n            %igx-grid__hierarchical-expander--header,\n            %igx-grid__header-indentation,\n            %igx-grid__row-indentation,\n            %grid__cbx-selection {\n                border-bottom: --var($theme, 'header-border-width') --var($theme, 'header-border-style') --var($theme, 'header-border-color');\n            }\n        }\n    }\n\n    %grid-thead--cosy {\n        %grid__cbx-selection--push--cosy {\n            align-items: flex-start;\n            padding-top: (map-get($grid-header-height, 'cosy') - rem(20px)) / 2;\n        }\n    }\n\n    %grid-thead--compact {\n        %grid__cbx-selection--push--compact {\n            align-items: flex-start;\n            padding-top: (map-get($grid-header-height, 'compact') - rem(20px)) / 2;\n        }\n    }\n\n    %grid-thead-title {\n        flex-basis: auto !important;\n        align-items: center !important;\n        border-bottom: $grid-header-border;\n        height: map-get($grid-header-height, 'comfortable');\n    }\n\n    %grid-thead-title--pinned {\n        border-right: map-get($cell-pin, 'style') map-get($cell-pin, 'color') !important;\n    }\n\n    %grid-thead-title--cosy {\n        height: map-get($grid-header-height, 'cosy');\n        padding: map-get($grid-cell-padding, 'cosy');\n    }\n\n    %grid-thead-title--compact {\n        height: map-get($grid-header-height, 'compact');\n        padding: map-get($grid-cell-padding, 'compact');\n    }\n\n    %grid-thead-group {\n        display: flex;\n        flex-flow: row nowrap;\n    }\n\n    /* We set those with position relative\n    so that the drop indicators be scoped\n    to their respective group. The item\n    being the topmost element, while the\n    subgroup encapsulates children of each\n    thead item and group.\n    */\n    %grid-thead-item {\n        display: flex;\n        flex-flow: column nowrap;\n\n        %grid-thead-group {\n            flex: 1 1 auto;\n        }\n\n        %grid-cell-header {\n            flex: 1 1 auto;\n        }\n\n        %grid-thead-title {\n            flex: 0 0 auto;\n        }\n    }\n\n    %grid-thead-item,\n    %grid-thead-subgroup {\n        position: relative;\n    }\n\n    %grid-tfoot {\n        grid-row: 5;\n        border-top: $grid-header-border;\n        z-index: 10001;\n    }\n\n    %grid-footer {\n        grid-row: 7;\n    }\n\n    %grid-display-container-thead {\n        width: 100%;\n        overflow: visible;\n    }\n\n    %grid-display-container-tr {\n        width: 100%;\n        overflow: visible;\n    }\n\n    %grid-mrl-block {\n        display: grid;\n        background: inherit;\n\n        %grid-thead-item {\n            display: flex;\n        }\n\n        %grid-cell-header {\n            align-items: center;\n            flex-grow: 1;\n            border-bottom: $grid-header-border;\n        }\n\n        %grid-cell-display {\n            border-right: 1px solid --var($theme, 'row-border-color');\n            border-bottom: 1px solid --var($theme, 'row-border-color');\n        }\n    }\n\n    %grid-row--mrl {\n        &%grid-row {\n            border-bottom-color: transparent;\n        }\n\n        %grid__cbx-selection,\n        %igx-grid__row-indentation,\n        %igx-grid__drag-indicator {\n            border-bottom: 1px solid --var($theme, 'row-border-color');\n        }\n    }\n\n    %grid-tbody {\n        position: relative;\n        background: --var($theme, 'content-background');\n        color: --var($theme, 'content-text-color');\n        overflow: hidden;\n        z-index: 1;\n    }\n\n    %grid-tbody-container {\n        position: relative;\n        display: flex;\n        grid-row: 4;\n    }\n\n    %grid-tbody-message {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100%;\n        color: --var($theme, 'content-text-color');\n    }\n\n    %igx-grid__loading {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        min-height: 100px;\n\n        > %circular-display {\n            width: rem(50);\n            height: rem(50);\n        }\n    }\n\n    %grid-scroll {\n        grid-row: 6;\n        display: flex;\n        flex-flow: row nowrap;\n        width: 100%;\n        background: --var($theme, 'header-background');\n        z-index: 10001;\n    }\n\n    %grid-thead-thumb {\n        background: --var($theme, 'header-background');\n        border-left: 1px solid igx-color($palette, 'grays', 300);\n    }\n\n    %grid-tfoot-thumb {\n        background: --var($theme, 'header-background');\n        border-left: 1px solid igx-color($palette, 'grays', 300);\n    }\n\n    %grid-tbody-scrollbar {\n        border-left: 1px solid igx-color($palette, 'grays', 300);\n    }\n\n    %grid-scroll-start {\n        background: --var($theme, 'header-background');\n    }\n\n    %grid-scroll-main {\n        igx-display-container {\n            height: 0;\n        }\n\n        igx-horizontal-virtual-helper {\n            height: 100%;\n        }\n    }\n\n    %grid-row {\n        display: flex;\n        background: --var($theme, 'content-background');\n        border-bottom: 1px solid --var($theme, 'row-border-color');\n        outline-style: none;\n        position: relative;\n\n        &:hover {\n            background: --var($theme, 'row-hover-background');\n            color: --var($theme, 'row-hover-text-color');\n        }\n\n        &%igx-grid__tr--ghost {\n            background: --var($theme, 'row-ghost-background');\n        }\n    }\n\n    %igx-grid__drag-indicator {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: map-get($grid-cell-padding, 'comfortable');\n        padding-right: 0;\n        // Fix for IE 11\n        min-width: calc(#{$drag-icon-size} + #{$cell-padding-comfortable});\n        background: inherit;\n        z-index: 4;\n        cursor: move;\n\n        %igx-icon-display {\n            width: $drag-icon-size;\n            height: $drag-icon-size;\n            font-size: $drag-icon-size;\n        }\n    }\n\n    %igx-grid__drag-indicator--cosy{\n        padding: map-get($grid-cell-padding, 'cosy');\n        // Fix for IE 11\n        min-width: calc(#{$drag-icon-size} + #{$cell-padding-cosy});\n        padding-right: 0;\n    }\n\n    %igx-grid__drag-indicator--compact {\n        padding: map-get($grid-cell-padding, 'compact');\n        // Fix for IE 11\n        min-width: calc(#{$drag-icon-size} + #{$cell-padding-compact});\n        padding-right: 0;\n    }\n\n    %igx-grid__drag-indicator--header {\n        border-right: $grid-header-border;\n    }\n\n    %igx-grid__hierarchical-expander + %igx-grid__drag-indicator {\n        padding-left: 0;\n        min-width: $drag-icon-size;\n    }\n\n    %igx-grid__drag-indicator--off {\n        color: --var($theme, 'row-drag-color');\n    }\n\n    %igx-grid__tr--drag {\n        opacity: .5;\n    }\n\n    %grid-row--odd {\n        background: --var($theme, 'row-odd-background');\n        color: --var($theme, 'row-odd-text-color');\n    }\n\n    %grid-row--even {\n        background: --var($theme, 'row-even-background');\n        color: --var($theme, 'row-even-text-color');\n    }\n\n    %grid-row--selected {\n        color: --var($theme, 'row-selected-text-color');\n        background: --var($theme, 'row-selected-background');\n\n        %grid-cell--selected,\n        %grid-cell--pinned-selected {\n            background: --var($theme, 'row-selected-cell-background');\n        }\n\n        &:hover {\n            background: --var($theme, 'row-selected-background');\n            color: --var($theme, 'row-selected-text-color');\n        }\n\n        %igx-grid__tree-grouping-indicator {\n            color: --var($theme, 'row-selected-text-color');\n\n            &:hover {\n                color: --var($theme, 'row-selected-text-color');\n            }\n        }\n    }\n\n    %igx-grid__tr--expanded {\n        border-bottom: none;\n    }\n\n    %igx-grid__tr--edit {\n        border-bottom: 1px solid --var($theme, 'edit-mode-color');\n        position: relative;\n\n        &::after {\n            content: '';\n            position: absolute;\n            height: rem(1);\n            width: 100%;\n            top: rem(-1);\n            left: 0;\n            background: --var($theme, 'edit-mode-color');\n        }\n\n        &%grid-row {\n            border-bottom: 1px solid --var($theme, 'edit-mode-color');\n        }\n\n        %igx-grid__td--editing {\n            border: none;\n\n            %form-group-bundle--focus {\n                caret-color: --var($theme, 'edit-mode-color') !important;\n            }\n\n            %form-group-border {\n                background: --var($theme, 'edit-mode-color') !important;\n            }\n        }\n    }\n\n    %grid-row--edit-mrl {\n        &:first-of-type::after {\n            top: 0;\n            z-index: 5;\n        }\n    }\n\n    %igx-grid__tr--edited {\n        &::before {\n            content: '';\n            position: absolute;\n            width: rem(2);\n            height: 100%;\n            z-index: 10000;\n            background: --var($theme, 'edited-row-indicator');\n        }\n    }\n\n    %grid-row--group {\n        position: relative;\n        background: --var($theme, 'header-background') !important;\n    }\n\n    %igx-grid-row--filtered {\n        %grid-cell-text {\n            color: --var($theme, 'tree-filtered-text-color');\n        }\n\n        %igx-grid__tree-grouping-indicator {\n            color: --var($theme, 'tree-filtered-text-color');\n\n            &:hover {\n                color: --var($theme, 'tree-filtered-text-color');\n            }\n        }\n\n        %grid-cell--selected {\n            %grid-cell-text {\n                color: --var($theme, 'tree-selected-filtered-cell-text-color');\n            }\n\n            %igx-grid__tree-grouping-indicator {\n                color: --var($theme, 'tree-selected-filtered-cell-text-color');\n\n                &:hover {\n                    color: --var($theme, 'tree-selected-filtered-cell-text-color');\n                }\n            }\n        }\n    }\n\n    %grid-row--selected--filtered {\n        %grid-cell-text {\n            color: --var($theme, 'tree-selected-filtered-row-text-color');\n        }\n\n        %igx-grid__tree-grouping-indicator {\n            color: --var($theme, 'tree-selected-filtered-row-text-color');\n\n            &:hover {\n                color: --var($theme, 'tree-selected-filtered-row-text-color');\n            }\n        }\n\n        %grid-cell--selected {\n            %grid-cell-text {\n                color: --var($theme, 'tree-selected-filtered-cell-text-color');\n            }\n\n            %igx-grid__tree-grouping-indicator {\n                color: --var($theme, 'tree-selected-filtered-cell-text-color');\n\n                &:hover {\n                    color: --var($theme, 'tree-selected-filtered-cell-text-color');\n                }\n            }\n        }\n    }\n\n    %igx-grid__tree-grouping-indicator {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        user-select: none;\n        outline-style: none;\n        margin-right: rem(8);\n        cursor: pointer;\n\n        color: --var($theme, 'expand-icon-color');\n\n        &:hover {\n            color: --var($theme, 'expand-icon-hover-color')\n        }\n    }\n\n    %igx-grid__tree-loading-indicator {\n        width: rem(24px, 16px);\n        height: rem(24px, 16px);\n        margin-right: rem(8px, 16px);\n\n        %circular-outer {\n            stroke: --var($theme, 'expand-icon-color');\n        }\n\n        > %circular-display {\n            width: rem(24);\n            height: rem(24);\n        }\n    }\n\n    %grid-cell-display {\n        position: relative;\n        display: flex;\n        flex: 1 1 0%;\n        align-items: center;\n        outline-style: none;\n        padding: map-get($grid-cell-padding, 'comfortable');\n        font-size: $grid-cell-fs;\n        line-height: $grid-cell-lh;\n        color: inherit;\n        text-align: left;\n    }\n\n    %igx-grid__td--tree-cell {\n        overflow: hidden;\n    }\n\n    %grid-cell-text {\n        @include ellipsis();\n    }\n\n    %grid-cell-display--cosy {\n        padding: map-get($grid-cell-padding, 'cosy');\n    }\n\n    %grid-cell-display--compact {\n        padding: map-get($grid-cell-padding, 'compact');\n    }\n\n    %grid-cell--fixed-width {\n        flex-grow: 0;\n        outline-style: none;\n    }\n\n    %grid-cell--active {\n        box-shadow: inset 0 0 0 1px --var($theme, 'cell-active-border-color');\n    }\n\n    %grid-cell--selected {\n        color: --var($theme, 'cell-selected-text-color');\n        background: --var($theme, 'cell-selected-background');\n        border-bottom: 0;\n\n        %igx-grid__tree-grouping-indicator {\n            color: --var($theme, 'cell-selected-text-color');\n\n            &:hover {\n                color: --var($theme, 'cell-selected-text-color');\n            }\n        }\n    }\n\n    %igx-grid__td--edited {\n        %grid-cell-text {\n            font-style: italic;\n            color: --var($theme, 'cell-edited-value-color');\n        }\n    }\n\n    %igx-grid__tr--deleted {\n        %grid-cell-text {\n            font-style: italic;\n            color: igx-color(map-get($theme, 'palette'), 'error');\n            text-decoration: line-through;\n        }\n    }\n\n    %igx-grid__td--editing {\n        background: --var($theme, 'cell-editing-background') !important;\n        box-shadow: inset 0 0 0 rem(2px) --var($theme, 'edit-mode-color');\n\n        igx-input-group {\n            width: 100%;\n            margin-top: -16px;\n        }\n\n        %form-group-input {\n            // ignore global typography\n            font-size: $grid-cell-fs !important;\n            line-height: $grid-cell-lh !important;\n        }\n    }\n\n    %grid-cell--pinned {\n        position: relative;\n        background: inherit;\n        z-index: 9999;\n    }\n\n    %grid-cell--pinned-selected {\n        color: --var($theme, 'cell-selected-text-color');\n        background: --var($theme, 'cell-selected-background');\n        border-bottom: 0;\n    }\n\n    %grid-cell--pinned-last {\n        border-right: map-get($cell-pin, 'style') map-get($cell-pin, 'color') !important;\n\n        &%grid-cell--editing {\n            border-right: map-get($cell-pin, 'style') --var($theme, 'cell-selected-background') !important;\n        }\n    }\n\n    %grid-cell-header {\n        flex-flow: row nowrap;\n        justify-content: space-between;\n        align-items: flex-end;\n        font-size: $grid-head-fs;\n        font-weight: $grid-head-fw;\n        min-width: 0;\n        padding: map-get($grid-header-padding, 'comfortable');\n        border-right: $grid-header-border;\n        outline-style: none;\n        overflow: hidden;\n        transition: color 250ms ease-in-out;\n    }\n\n    %grid-cell-header--filtering {\n        background: --var($theme, 'filtering-header-background');\n        color: --var($theme, 'filtering-header-text-color');\n        z-index: 3;\n    }\n\n    %grid-cell-header--cosy {\n        padding: map-get($grid-header-padding, 'cosy');\n        min-height: map-get($grid-header-height, 'cosy');\n    }\n\n    %grid-cell-header--compact {\n        padding: map-get($grid-header-padding, 'compact');\n        min-height: map-get($grid-header-height, 'compact');\n    }\n\n    %grid-cell-header-title {\n        @include ellipsis();\n        min-width: 3ch;\n        user-select: none;\n        cursor: initial;\n        flex-grow: 1; /* hey IE, the text should take most of the space */\n        // align-self: flex-end; /* commenting out for now on external request */\n        line-height: map-get($grid-header-height, 'comfortable') / $grid-head-fs;\n        opacity: .7;\n        transition: opacity 250ms ease-in-out, color 250ms ease-in-out;\n    }\n\n    %grid-cell-header-title--cosy {\n        line-height: map-get($grid-header-height, 'cosy') / $grid-head-fs;\n    }\n\n    %grid-cell-header-title--compact {\n        line-height: map-get($grid-header-height, 'compact') / $grid-head-fs;\n    }\n\n    %grid-cell-header-icons {\n        display: inline-flex;\n        align-items: center;\n        justify-content: flex-end;\n        user-select: none;\n        min-width: 30px; /* sort-icon + filter icon width */\n        height: map-get($grid-header-height, 'comfortable');\n        align-self: flex-end;\n\n        &:empty {\n            min-width: 0;\n        }\n\n        .sort-icon {\n            width: rem(15px);\n            height: rem(15px);\n            min-width: rem(15px); /* yeah IE, it really needs to be 15px wide... */\n            font-size: rem(15px);\n        }\n    }\n\n    %igx-grid__th--sortable {\n        &:hover {\n            cursor: pointer;\n\n            %grid-cell-header-title {\n                cursor: pointer;\n                opacity: 1;\n            }\n\n            .sort-icon {\n                opacity: .7;\n\n                &:hover {\n                    opacity: 1;\n                }\n            }\n        }\n    }\n\n    %igx-grid__th--sorted {\n        %grid-cell-header-title {\n            opacity: 1;\n        }\n\n        &:hover{\n            .sort-icon {\n                opacity: 1;\n            }\n        }\n\n        .sort-icon {\n            opacity: 1;\n            color: --var($theme, 'sorted-header-icon-color');\n\n            &:hover {\n                color: --var($theme, 'sortable-header-icon-hover-color');\n            }\n        }\n    }\n\n    %igx-grid__th--filtrable {\n        %grid-cell-header-title {\n            opacity: .7;\n        }\n    }\n\n    %igx-grid__th--filtrable-sortable {\n        .sort-icon {\n            &:hover {\n                opacity: 1;\n            }\n        }\n    }\n\n    .sort-icon {\n        opacity: 0;\n        transition: all 250ms ease-in-out;\n    }\n\n    %grid-cell-header-icons--cosy {\n        height: map-get($grid-header-height, 'cosy');\n    }\n\n    %grid-cell-header-icons--compact {\n        height: map-get($grid-header-height, 'compact');\n    }\n\n    %grid-cell-number {\n        text-align: $grid-cell-align-num;\n        justify-content: flex-end;\n\n        %grid-cell-header-icons {\n            justify-content: flex-start;\n            order: -1;\n\n            .sort-icon {\n                order: 1;\n            }\n        }\n    }\n\n    %grid__cbx-selection {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: map-get($grid-header-padding, 'comfortable');\n        border-right: --var($theme, 'header-border-width')\n            --var($theme, 'header-border-style')\n            --var($theme, 'header-border-color');\n        background: inherit;\n        z-index: 4;\n    }\n\n    %grid__cbx-selection--cosy {\n        padding: map-get($grid-header-padding, 'cosy');\n    }\n\n    %grid__cbx-selection--compact {\n        padding: map-get($grid-header-padding, 'compact');\n    }\n\n    %grid__resize-handle {\n        position: absolute;\n        width: 4px;\n        top: 0;\n        right: -2px;\n        height: 100%;\n        z-index: 2;\n    }\n\n    %grid__resize-line {\n        position: absolute;\n        cursor: col-resize;\n        width: 4px;\n        background: --var($theme, 'resize-line-color');\n        z-index: 2;\n\n        &::before,\n        &::after {\n            position: absolute;\n            content: '';\n            height: 100%;\n            width: 96px;\n        }\n\n        &::before {\n            right: 100%;\n        }\n\n        &::after {\n            left: 100%;\n        }\n    }\n\n    %grid-summaries {\n        display: flex;\n        overflow: hidden;\n        background: --var($theme, 'root-summaries-background');\n\n        %igx-grid-summary__result {\n            color: --var($theme, 'root-summaries-text-color');\n        }\n    }\n\n    %grid-summaries--body {\n        background: --var($theme, 'body-summaries-background');\n        border-bottom: 1px dashed --var($theme, 'row-border-color');\n\n        &:last-of-type {\n            border-bottom: none;\n        }\n\n        // %igx-grid-summary__label,\n        %igx-grid-summary__result {\n            color: --var($theme, 'body-summaries-text-color');\n        }\n    }\n\n    %grid-summaries-patch {\n        background: inherit;\n        position: relative;\n        z-index: 1;\n        border-right: 1px solid --var($theme, 'header-border-color');\n    }\n\n    // Column moving\n    %igx-grid__th-drop-indicator-left,\n    %igx-grid__th-drop-indicator-right {\n        position: absolute;\n        width: 1px;\n        height: 100%;\n        top: 0;\n        z-index: 1;\n    }\n\n    %igx-grid__th-drop-indicator-left {\n        left: -1px;\n    }\n\n    %igx-grid__th-drop-indicator-right {\n        right: -1px;\n    }\n\n    %igx-grid__th-drop-indicator--active {\n        &%igx-grid__th-drop-indicator-left,\n        &%igx-grid__th-drop-indicator-right {\n            border-right: 1px solid --var($theme, 'drop-indicator-color');\n        }\n\n        &::after,\n        &::before {\n            position: absolute;\n            content: '';\n            width: 0;\n            height: 0;\n            border-style: solid;\n            left: -3px;\n        }\n\n        &::before {\n            bottom: 0;\n            border-width: 0 4px 4px;\n            border-color: transparent transparent --var($theme, 'drop-indicator-color');\n        }\n\n        &::after {\n            top: 0;\n            border-width: 4px 4px 0;\n            border-color: --var($theme, 'drop-indicator-color') transparent transparent;\n        }\n    }\n\n    %grid__scroll-on-drag-left,\n    %grid__scroll-on-drag-right {\n        position: absolute;\n        width: 15px;\n        top: 0;\n        height: 100%;\n        z-index: 25;\n    }\n\n    %grid__scroll-on-drag-left {\n        left: 0;\n    }\n\n    %grid__scroll-on-drag-right {\n        right: 0;\n    }\n\n    %grid__scroll-on-drag-pinned {\n        position: absolute;\n        width: 15px;\n        height: 100%;\n        top: 0;\n        z-index: 25;\n    }\n\n    %grid__drag-ghost-image {\n        position: absolute;\n        display: flex;\n        align-items: center;\n        background: --var($theme, 'ghost-header-background');\n        color: --var($theme, 'ghost-header-text-color');\n        min-width: 168px;\n        max-width: 320px;\n        height: map-get($grid-header-height, 'comfortable');\n        min-height: map-get($grid-header-height, 'comfortable');\n        top: -99999px;\n        left: -99999px;\n        border: none;\n        box-shadow: --var($theme, 'drag-shadow');\n        overflow: hidden;\n        z-index: 20;\n\n        %grid-cell-header-title {\n            @include ellipsis();\n            flex: 1 0 0;\n            text-align: right;\n        }\n\n        %grid-cell-header-icons {\n            display: none;\n        }\n\n        %grid-thead-title {\n            border: none;\n        }\n    }\n\n    %grid__drag-ghost-image--cosy {\n        height: map-get($grid-header-height, 'cosy');\n        min-height: map-get($grid-header-height, 'cosy');\n    }\n\n    %grid__drag-ghost-image--compact {\n        height: map-get($grid-header-height, 'compact');\n        min-height: map-get($grid-header-height, 'compact');\n    }\n\n    %grid__drag-ghost-image-icon {\n        color: --var($theme, 'ghost-header-icon-color');\n        margin-right: rem(12px);\n    }\n\n    %grid__drag-ghost-image-icon-group {\n        color: --var($theme, 'ghost-header-icon-color');\n        padding: --var($grid-header-padding, 'comfortable');\n        padding-right: 0;\n        margin-right: rem(8);\n    }\n\n    %igx-grid__drag-col-header {\n        background: --var($theme, 'header-background');\n\n        %grid-cell-header {\n            opacity: .4;\n        }\n    }\n\n    // Group by section\n    %igx-grid__group-row {\n        background: --var($theme, 'group-row-background');\n        display: flex;\n        outline-style: none;\n        border-bottom: 1px solid --var($theme, 'row-border-color');\n        min-height: map-get($grid-header-height, 'comfortable');\n    }\n\n    %igx-grid__group-row--active {\n        background: --var($theme, 'group-row-selected-background');\n\n        %igx-grid__grouping-indicator {\n            color: --var($theme, 'expand-icon-color');\n        }\n\n        &:hover {\n            background: --var($theme, 'group-row-selected-background');\n        }\n    }\n\n    %igx-grid__group-row--cosy {\n        min-height: map-get($grid-header-height, 'cosy');\n    }\n\n    %igx-grid__group-row--compact {\n        min-height: map-get($grid-header-height, 'compact');\n    }\n\n    %igx-group-label {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        line-height: rem(16px);\n\n        > * {\n            margin-right: rem(4px);\n\n            &:last-child {\n                margin-right: 0;\n            }\n        }\n    }\n\n    %igx-group-label__icon {\n        user-select: none;\n\n        &%igx-icon-display {\n            color: --var($theme, 'group-label-icon');\n            width: rem(16px);\n            height: rem(16px);\n            font-size: rem(16px);\n        }\n    }\n\n    %igx-group-label__column-name {\n        color: --var($theme, 'group-label-column-name-text');\n        font-weight: 600;\n        font-size: 12px;\n    }\n\n    %igx-group-label__count-badge {\n        > div {\n            background: --var($theme, 'group-count-background');\n            color: --var($theme, 'group-count-text-color');\n            font-size: $grid-head-fs;\n        }\n    }\n\n    %igx-group-label__text {\n        font-size: rem(13px);\n        color: --var($theme, 'group-label-text')\n    }\n\n    [dir='rtl'] {\n        %igx-grid__group-content {\n            padding-left: map-get($grid-grouping-indicator-padding, 'comfortable');\n        }\n\n        %igx-grid__group-content--cosy {\n            padding-left: map-get($grid-grouping-indicator-padding, 'cosy');\n        }\n\n        %igx-grid__group-content--compact{\n            padding-left: map-get($grid-grouping-indicator-padding, 'compact');\n        }\n\n        %igx-group-label {\n            > * {\n                margin-left: rem(4px);\n\n                &:last-child {\n                    margin-left: 0;\n                }\n            }\n        }\n    }\n\n    %igx-grid__group-content {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        flex: 1 1 auto;\n        padding-left: map-get($grid-grouping-indicator-padding, 'comfortable');\n        min-height: map-get($grid-header-height, 'comfortable');\n\n        &:focus {\n            outline: transparent;\n        }\n    }\n\n    %igx-grid__group-content--cosy {\n        padding-left: map-get($grid-grouping-indicator-padding, 'cosy');\n        min-height: map-get($grid-header-height, 'cosy');\n    }\n\n    %igx-grid__group-content--compact{\n        padding-left: map-get($grid-grouping-indicator-padding, 'compact');\n        min-height: map-get($grid-header-height, 'compact');\n    }\n\n    %igx-grid__row-indentation {\n        background: transparent;\n        z-index: 1;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        position: relative;\n        padding-left: map-get($grid-grouping-indicator-padding, 'comfortable');\n        padding-right: map-get($grid-grouping-indicator-padding, 'comfortable');\n        border-right: 1px solid transparent;\n\n        &::after {\n            content: '';\n            position: absolute;\n            width: 100%;\n            height: rem(1px);\n            bottom: -1px;\n            left: 0;\n            background: transparent;\n        }\n\n        %igx-button--icon {\n            width: rem(28px);\n            height: rem(28px);\n            color: --var($theme, 'expand-all-icon-color');\n        }\n\n        &:focus,\n        &:hover {\n            %igx-button--icon {\n                color: --var($theme, 'expand-all-icon-hover-color');\n            }\n        }\n    }\n\n    %igx-grid__row-indentation--cosy {\n        padding-left: map-get($grid-grouping-indicator-padding, 'cosy');\n        padding-right: map-get($grid-grouping-indicator-padding, 'cosy')\n    }\n\n    %igx-grid__row-indentation--compact {\n        padding-left: map-get($grid-grouping-indicator-padding, 'compact');\n        padding-right: map-get($grid-grouping-indicator-padding, 'compact')\n    }\n\n    %igx-grid__grouparea {\n        grid-row: 2;\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        flex-wrap: wrap;\n        border-bottom: $grid-header-border;\n        background: --var($theme, 'grouparea-background');\n        min-height: map-get($grouparea-min-height, 'comfortable');\n        padding: map-get($grouparea-padding, 'comfortable');\n        z-index: 2;\n        height: 100%;\n\n        &:focus {\n            outline-style: none;\n        }\n    }\n\n    %igx-grid__grouparea-connector {\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        margin: 0 rem(4px);\n\n        igx-icon {\n            width: 16px;\n            height: 16px;\n            font-size: 16px;\n        }\n    }\n\n    %igx-grid__grouparea--cosy {\n        min-height: map-get($grouparea-min-height, 'cosy');\n        padding: map-get($grouparea-padding, 'cosy');\n    }\n\n    %igx-grid__grouparea--compact {\n        min-height: map-get($grouparea-min-height, 'compact');\n        padding: map-get($grouparea-padding, 'compact');\n    }\n\n    %igx-drop-area {\n        min-width: rem(80px);\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        height: map-get($drop-area-height, 'comfortable');\n        border-radius: --var($theme, 'drop-area-border-radius');\n        padding: map-get($grid-cell-padding, 'comfortable');\n        flex: 1 0 0%;\n        background: --var($theme, 'drop-area-background');\n\n        %igx-drop-area__icon {\n            color: --var($theme, 'drop-area-icon-color');\n            width: rem(16px);\n            height: rem(16px);\n            font-size: rem(16px);\n            margin-right: rem(8px);\n        }\n    }\n\n    %igx-drop-area--hover {\n        background: --var($theme, 'drop-area-on-drop-background');\n    }\n\n    %igx-drop-area--cosy {\n        height: map-get($drop-area-height, 'cosy');\n        border-radius: --var($theme, 'drop-area-border-radius');\n        padding: map-get($grid-cell-padding, 'cosy');\n    }\n\n    %igx-drop-area--compact {\n        height: map-get($drop-area-height, 'compact');\n        border-radius: --var($theme, 'drop-area-border-radius');\n        padding: map-get($grid-cell-padding, 'compact');\n    }\n\n    %igx-drop-area__text {\n        @include ellipsis();\n        color: --var($theme, 'drop-area-text-color');\n        font-size: rem(13px);\n    }\n\n    %igx-grid__grouping-indicator {\n        position: relative;\n        display: flex;\n        user-select: none;\n        justify-content: center;\n        align-items: center;\n        background: inherit;\n        z-index: 1;\n        cursor: pointer;\n        padding-left: map-get($grid-grouping-indicator-padding, 'comfortable');\n        padding-right: $grouping-padding-right;\n        min-height: map-get($grid-header-height, 'comfortable');\n\n        igx-icon {\n            color: --var($theme, 'expand-icon-color');\n            width: $indicator-icon-width;\n        }\n\n        &:hover,\n        &:focus {\n            outline-style: none;\n\n            igx-icon {\n                color: --var($theme, 'expand-icon-hover-color');\n            }\n        }\n    }\n\n    %igx-grid__grouping-indicator--cosy {\n        padding-left: map-get($grid-grouping-indicator-padding, 'cosy');\n        min-height: map-get($grid-header-height, 'cosy');\n    }\n\n    %igx-grid__grouping-indicator--compact {\n        padding-left: map-get($grid-grouping-indicator-padding, 'compact');\n        min-height: map-get($grid-header-height, 'compact');\n    }\n\n    %igx-grid__header-indentation {\n        position: relative;\n        padding-right: map-get($grid-grouping-indicator-padding, 'comfortable');\n        border-right: 1px solid --var($theme, 'header-border-color');\n        background: --var($theme, 'header-background');\n        z-index: 4;\n    }\n\n    %igx-grid__header-indentation--cosy {\n        padding-right: map-get($grid-grouping-indicator-padding, 'cosy');\n    }\n\n    %igx-grid__header-indentation--compact {\n        padding-right: map-get($grid-grouping-indicator-padding, 'compact');\n    }\n\n    %igx-grid__group-expand-btn {\n        position: absolute;\n        cursor: pointer;\n        user-select: none;\n        top: calc(50% - 12px);\n        left: map-get($grid-grouping-indicator-padding, 'comfortable');\n\n        &:hover {\n            color: --var($theme, 'expand-icon-hover-color');\n        }\n\n        &%igx-grid__group-expand-btn--push {\n            top: (map-get($grid-header-height, 'comfortable') - rem(24px)) / 2;\n        }\n    }\n\n    %igx-grid__group-expand-btn--cosy {\n        left: map-get($grid-grouping-indicator-padding, 'cosy');\n\n        &%igx-grid__group-expand-btn--push {\n            top: (map-get($grid-header-height, 'cosy') - rem(24px)) / 2;\n        }\n    }\n\n    %igx-grid__group-expand-btn--compact {\n        left: map-get($grid-grouping-indicator-padding, 'compact');\n\n        &%igx-grid__group-expand-btn--push {\n            top: (map-get($grid-header-height, 'compact') - rem(24px)) / 2;\n        }\n    }\n\n    @for $i from 1 through 10 {\n        // COMFORTABLE\n        %igx-grid__row-indentation--level-#{$i} {\n            background: inherit;\n            padding-left: calc(#{$i*map-get($grid-grouping-indicator-padding, 'comfortable')} + #{$indicator-icon-width});\n        }\n\n        %igx-grid__group-row--padding-level-#{$i} {\n            padding-left: #{$i*map-get($grid-grouping-indicator-padding, 'comfortable')};\n        }\n\n        %igx-grid__tree-cell--padding-level-#{$i} {\n            padding-left: #{$i*map-get($grid-grouping-indicator-padding, 'comfortable')};\n        }\n\n        // COSY\n        %igx-grid__row-indentation-cosy--level-#{$i} {\n            padding-left: calc(#{$i*map-get($grid-grouping-indicator-padding, 'cosy')} + #{$indicator-icon-width});\n        }\n\n        %igx-grid__group-row-cosy--padding-level-#{$i} {\n            padding-left: #{$i*map-get($grid-grouping-indicator-padding, 'cosy')};\n        }\n\n        %igx-grid__tree-cell-cosy--padding-level-#{$i} {\n            padding-left: #{$i*map-get($grid-grouping-indicator-padding, 'cosy')};\n        }\n\n        // COMPACT\n        %igx-grid__row-indentation-compact--level-#{$i} {\n            padding-left: calc(#{$i*map-get($grid-grouping-indicator-padding, 'compact')} + #{$indicator-icon-width});\n        }\n\n        %igx-grid__group-row-compact--padding-level-#{$i} {\n            padding-left: #{$i*map-get($grid-grouping-indicator-padding, 'compact')};\n        }\n\n        %igx-grid__tree-cell-compact--padding-level-#{$i} {\n            padding-left: #{$i*map-get($grid-grouping-indicator-padding, 'compact')};\n        }\n    }\n\n    %igx-grid__outlet {\n        z-index: 10002;\n        position: fixed;\n    }\n\n    %igx-grid__row-editing-outlet {\n        z-index: 10000;\n        position: absolute;\n\n        %overlay-wrapper {\n            /* Change wrapper position from 'fixed' to 'absolute' so that it is hidden when scrolled below the parent grid body content. */\n            position: absolute;\n        }\n    }\n\n    %igx-grid__filtering-cell {\n        display: flex;\n        align-items: center;\n        border-right: $grid-header-border;\n        border-top: $grid-header-border;\n        height: map-get($grid-header-height, 'comfortable');\n        padding: map-get($grid-header-padding, 'comfortable');\n        overflow: hidden;\n\n        igx-chips-area {\n            transition: transform .25s $ease-out-back;\n            flex-wrap: nowrap;\n\n            .igx-filtering-chips__connector {\n                font-size: rem(12px);\n                text-transform: uppercase;\n                font-weight: 600;\n                margin: 0 rem(8px);\n            }\n        }\n    }\n\n    %igx-grid__filtering-cell-indicator {\n        position: relative;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding-right: 8px;\n        margin-left: 8px;\n        cursor: pointer;\n        visibility: visible;\n\n        igx-icon {\n            width: 18px;\n            height: 18px;\n            font-size: 18px;\n        }\n\n        %igx-badge-display {\n            /* start of IE vertical alignment fix */\n            top: 50%;\n            transform: translateY(-50%);\n            /* end of IE vertical alignment fix */\n            position: absolute;\n            width: 14px;\n            height: 14px;\n            min-width: 14px;\n            font-size: 12px;\n            text-align: center;\n            right: 0;\n        }\n    }\n\n    %igx-grid__filtering-cell-indicator--hidden {\n        visibility: hidden;\n    }\n\n    %igx-grid__filtering-cell--cosy {\n        height: map-get($grid-header-height, 'cosy');\n        padding: map-get($grid-header-padding, 'comfortable');\n    }\n\n    %igx-grid__filtering-cell--compact {\n        height: map-get($grid-header-height, 'compact');\n        padding: map-get($grid-header-padding, 'comfortable');\n    }\n\n    %igx-grid__filtering-row {\n        position: absolute;\n        display: flex;\n        width: 100%;\n        height: map-get($grid-header-height, 'comfortable');\n        padding: map-get($grid-cell-padding, 'cosy');\n        align-items: center;\n        justify-content: space-between;\n        background: --var($theme, 'filtering-row-background');\n        color: --var($theme, 'filtering-row-text-color');\n        left: 0;\n        bottom: 0;\n        z-index: 3;\n\n        &::after {\n            display: block;\n            position: absolute;\n            content: '';\n            background: inherit;\n            left: 0;\n            right: 0;\n            top: 0;\n            bottom: 0;\n            box-shadow: 0 1px 0 --var($theme, 'filtering-row-background'),\n                0 4px 10px rgba(0, 0, 0, .12);\n            z-index: -1;\n        }\n\n        igx-input-group {\n            flex: 0 0 200px;\n        }\n\n        igx-prefix:focus {\n            color: igx-color(map-get($theme, 'palette'), 'secondary');\n        }\n\n        igx-suffix  {\n            igx-icon {\n                outline-style: none;\n\n                &:focus {\n                    color: igx-color($palette, 'secondary');\n                }\n\n                + igx-icon {\n                    margin-left: rem(4px);\n                }\n            }\n        }\n    }\n\n    %igx-grid__filtering-row--cosy {\n        height: map-get($grid-header-height, 'cosy');\n    }\n\n    %igx-grid__filtering-row--compact {\n        height: map-get($grid-header-height, 'compact');\n    }\n\n    %igx-grid__filtering-row-main {\n        display: flex;\n        flex: 1;\n        overflow: hidden;\n        max-width: calc(100% - 176px);\n\n        igx-chips-area {\n            transition: transform .25s $ease-out-back;\n            flex-wrap: nowrap;\n            margin: 0 rem(8px);\n        }\n\n        igx-chip {\n            margin: 0 rem(4px);\n        }\n\n        [igxButton] {\n            igx-icon {\n                position: absolute;\n                left: rem(12px);\n                /* IE fix for vertical alignment*/\n                top: 50%;\n                transform: translateY(-50%);\n            }\n\n            span {\n                margin-left: rem(16px);\n            }\n        }\n    }\n\n    %filtering-scroll-mask {\n        display: block;\n        position: absolute;\n        content: '';\n        top: -2px;\n        bottom: -2px;\n        width: 10px;\n    }\n\n    %igx-grid__filtering-scroll-start {\n        width: 24px;\n        height: 24px;\n        position: relative;\n        overflow: visible;\n        margin: 0 8px;\n        z-index: 1;\n\n        &::after {\n            @extend %filtering-scroll-mask;\n            left: calc(100% + 6px);\n            background: linear-gradient(to right, --var($theme, 'filtering-row-background'), transparent);\n        }\n    }\n\n    %igx-grid__filtering-scroll-end {\n        width: 24px;\n        height: 24px;\n        position: relative;\n        overflow: visible;\n        margin: 0 8px;\n        z-index: 1;\n\n        &::before {\n            @extend %filtering-scroll-mask;\n            right: calc(100% + 6px);\n            background: linear-gradient(to left, --var($theme, 'filtering-row-background'), transparent);\n        }\n    }\n\n    %igx-grid__tr--highlighted {\n        position: relative;\n\n        &::after {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 4px;\n            height: 100%;\n            background: --var($theme, 'row-highlight');\n            z-index: 3;\n        }\n\n        %igx-grid__tr--edited {\n            &::before {\n                left: 4px;\n            }\n        }\n\n        &::before {\n            left: 4px;\n        }\n    }\n\n    %igx-grid__tr-container {\n        border-bottom: 1px solid --var($theme, 'row-border-color');\n    }\n\n    %igx-grid__hierarchical-expander {\n        user-select: none;\n        background: inherit;\n        padding-left: map-get($hierarchical-grid-indent, 'comfortable');\n        padding-right: map-get($hierarchical-grid-indent, 'comfortable');\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        cursor: pointer;\n        z-index: 3;\n        color: --var($theme, 'expand-icon-color');\n        border-right: 1px solid transparent;\n\n        &:focus {\n            outline: none;\n\n            igx-icon {\n                color: --var($theme, 'expand-icon-hover-color');\n            }\n        }\n\n        &:hover {\n            igx-icon {\n                color: --var($theme, 'expand-icon-hover-color');\n            }\n        }\n\n        igx-icon {\n            color: --var($theme, 'expand-icon-color');\n            max-width: $hierarchical-action-icon;\n            min-width: $hierarchical-action-icon;\n        }\n    }\n\n    %igx-grid__hierarchical-expander--cosy {\n        padding-left: map-get($hierarchical-grid-indent, 'cosy');\n        padding-right: map-get($hierarchical-grid-indent, 'cosy');\n    }\n\n    %igx-grid__hierarchical-expander--compact {\n        padding-left: map-get($hierarchical-grid-indent, 'compact');\n        padding-right: map-get($hierarchical-grid-indent, 'compact');\n    }\n\n    %igx-grid__hierarchical-expander--header {\n        background: inherit;\n        border-right: 1px solid --var($theme, 'header-border-color');\n        z-index: 3;\n\n        igx-icon {\n            display: flex;\n            align-items: center;\n        }\n    }\n\n    %igx-grid__hierarchical-expander--push {\n        align-items: flex-start;\n\n        igx-icon {\n            min-height: map-get($grid-header-height, 'comfortable');\n            max-height: map-get($grid-header-height, 'comfortable');\n        }\n    }\n\n    %igx-grid__hierarchical-expander--push--cosy {\n        igx-icon {\n            min-height: map-get($grid-header-height, 'cosy');\n        }\n    }\n\n    %igx-grid__hierarchical-expander--push--compact {\n        igx-icon {\n            min-height: map-get($grid-header-height, 'compact');\n        }\n    }\n\n    %igx-grid__hierarchical-expander--no-border,\n    %igx-grid__header-indentation--no-border {\n        border-right: 1px solid transparent;\n    }\n\n    %igx-grid__hierarchical-indent {\n        margin-left: calc(2 * #{map-get($hierarchical-grid-indent, 'comfortable')} + #{$hierarchical-action-icon});\n        margin-top: map-get($hierarchical-grid-indent, 'comfortable');\n        margin-right: map-get($hierarchical-grid-indent, 'comfortable');\n        margin-bottom: map-get($hierarchical-grid-indent, 'comfortable');\n\n        &--scroll {\n            margin-right: calc(#{map-get($hierarchical-grid-indent, 'comfortable')} + 18px);\n        }\n    }\n\n    %igx-grid__hierarchical-indent--cosy {\n        margin-left: calc(2 * #{map-get($hierarchical-grid-indent, 'cosy')} + #{$hierarchical-action-icon});\n        margin-top: map-get($hierarchical-grid-indent, 'cosy');\n        margin-right: map-get($hierarchical-grid-indent, 'cosy');\n        margin-bottom: map-get($hierarchical-grid-indent, 'cosy');\n\n        &--scroll {\n            margin-right: calc(#{map-get($hierarchical-grid-indent, 'cosy')} + 18px);\n        }\n    }\n\n    %igx-grid__hierarchical-indent--compact {\n        margin-left: calc(2 * #{map-get($hierarchical-grid-indent, 'compact')} + #{$hierarchical-action-icon});\n        margin-top: map-get($hierarchical-grid-indent, 'compact');\n        margin-right: map-get($hierarchical-grid-indent, 'compact');\n        margin-bottom: map-get($hierarchical-grid-indent, 'compact');\n\n        &--scroll {\n            margin-right: calc(#{map-get($hierarchical-grid-indent, 'compact')} + 18px);\n        }\n    }\n\n    @include _excel-filtering($theme, $palette);\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $background-color [null] - The summaries background color is inherited form igx-grid__tfoot\n/// @param {Color} $focus-background-color [null] - The background color when a summary item is on focus.\n/// @param {Color} $label-color [null] - The summaries label color.\n/// @param {Color} $result-color [null] - The summaries value/result color.\n/// @param {Color} $border-color [null] - The summaries border color.\n/// @param {Color} $pinned-border-width [null] - The border width of the summary panel.\n/// @param {Color} $pinned-border-style [null] - The border style of the summary panel.\n/// @param {Color} $pinned-border-color [null] - The border color of the summary panel.\n/// @param {Color} $label-hover-color [null] - The summaries hover label color.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n///\n/// @example scss Change the summaries background nad labels color\n///   $my-summary-theme: igx-grid-summary-theme(\n///     $background-color: black,\n///     $label-color: white\n///   );\n///   // Pass the theme to the igx-grid-filtering component mixin\n///   @include igx-grid-summary($my-summary-theme);\n@function igx-grid-summary-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $background-color: null,\n    $focus-background-color: null,\n    $label-color: null,\n    $result-color: null,\n    $border-color: null,\n    $pinned-border-width: null,\n    $pinned-border-style: null,\n    $pinned-border-color: null,\n    $label-hover-color: null\n) {\n    $name: 'igx-grid-summary';\n    $theme: apply-palette(map-get($schema, $name), $palette);\n\n    @if not($result-color) and $background-color {\n        $result-color: text-contrast($background-color);\n    }\n\n    @if not($border-color) and $background-color {\n        $border-color: rgba(text-contrast($background-color), .26);\n    }\n\n    @if not($pinned-border-color) and $background-color {\n        $pinned-border-color: rgba(text-contrast($background-color), .26);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        background-color: $background-color,\n        focus-background-color: $focus-background-color,\n        label-color: $label-color,\n        result-color: $result-color,\n        border-color: $border-color,\n        pinned-border-width: $pinned-border-width,\n        pinned-border-style: $pinned-border-style,\n        pinned-border-color: $pinned-border-color,\n        label-hover-color: $label-hover-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires {mixin} ellipsis\n/// @requires rem\n/// @requires --var\n@mixin igx-grid-summary($theme) {\n    @include igx-root-css-vars($theme);\n\n    $cell-pin: (\n        style: --var($theme, 'pinned-border-width') --var($theme, 'pinned-border-style'),\n        color: --var($theme, 'pinned-border-color')\n    );\n\n    $item-padding: (\n        comfortable: rem(6px) 0,\n        cosy: rem(2px) 0,\n        compact: 0\n    );\n\n    $summary-padding: (\n        comfortable: 0 rem(24px),\n        cosy: 0 rem(16px),\n        compact: 0 rem(12px)\n    );\n\n    %igx-grid-summary {\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        flex: 1 1 0%;\n        padding: map-get($summary-padding, 'comfortable');\n        background: --var($theme, 'background-color', inherit);\n        overflow: hidden;\n        outline-style: none;\n\n        &::after {\n            position: absolute;\n            content: '';\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n        }\n\n        &:focus::after {\n            background: --var($theme, 'focus-background-color');\n        }\n    }\n\n    %igx-grid-summary--cosy {\n        padding: map-get($summary-padding, 'cosy');\n    }\n\n    %igx-grid-summary--compact {\n        padding: map-get($summary-padding, 'compact');\n    }\n\n    %igx-grid-summary--pinned {\n        position: relative;\n        z-index: 1;\n    }\n\n    %grid-summary--fixed-width {\n        flex-grow: 0;\n    }\n\n    %igx-grid-summary--pinned-last {\n        border-right: map-get($cell-pin, 'style') map-get($cell-pin, 'color');\n        @media print {\n            border-right: map-get($cell-pin, 'style') #999;\n        }\n    }\n\n    %igx-grid-summary__item {\n        display: flex;\n        align-items: center;\n        padding: map-get($item-padding, 'comfortable');\n        font-size: rem(12px);\n        position: relative;\n    }\n\n    %igx-grid-summary__item--cosy {\n        padding: map-get($item-padding, 'cosy');\n    }\n\n    %igx-grid-summary__item--compact {\n        padding: map-get($item-padding, 'compact');\n    }\n\n    %igx-grid-summary__label {\n        color: --var($theme, 'label-color');\n        min-width: rem(30px);\n        margin-right: rem(3px);\n\n        &:hover {\n            color: --var($theme, 'label-hover-color');\n        }\n    }\n\n    %igx-grid-summary__result {\n        color: --var($theme, 'result-color');\n        font-weight: 600;\n        flex: 1 1 auto;\n        text-align: right;\n    }\n\n    %igx-grid-summary__label,\n    %igx-grid-summary__result {\n        @include ellipsis();\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $background-color [null] - The toolbar background color.\n/// @param {Color} $title-text-color [null] - The toolbar title text color.\n/// @param {Color} $button-background [null] - The toolbar button background color.\n/// @param {Color} $button-text-color [null] - The toolbar button text color.\n/// @param {Color} $button-hover-background [null] - The toolbar button hover background color.\n/// @param {Color} $button-hover-text-color [null] - The toolbar button hover text color.\n/// @param {Color} $button-focus-background [null] - The toolbar button focus background color.\n/// @param {Color} $button-focus-text-color [null] - The toolbar button focus text color.\n/// @param {Color} $dropdown-background [null] - The toolbar drop-down background color.\n/// @param {Color} $item-text-color [null] - The toolbar drop-down item text color.\n/// @param {Color} $item-hover-background [null] - The toolbar drop-down item hover background color.\n/// @param {Color} $item-hover-text-color [null] - The toolbar drop-down item hover text color.\n/// @param {Color} $item-focus-background [null] - The toolbar drop-down item focus background color.\n/// @param {Color} $item-focus-text-color [null] - The toolbar drop-down item focus text color.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n///\n/// @example scss Change the toolbar background color\n///   $my-toolbar-theme: igx-grid-toolbar-theme(\n///     $background-color: black\n///   );\n///   // Pass the theme to the igx-grid-filtering component mixin\n///   @include igx-grid-toolbar($my-toolbar-theme);\n\n@function igx-grid-toolbar-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $background-color: null,\n    $button-background: null,\n    $title-text-color: null,\n\n    $button-text-color: null,\n    $button-hover-background: null,\n    $button-hover-text-color: null,\n    $button-focus-background: null,\n    $button-focus-text-color: null,\n\n    $dropdown-background: null,\n    $item-text-color: null,\n    $item-hover-background: null,\n    $item-hover-text-color: null,\n    $item-focus-background: null,\n    $item-focus-text-color: null\n) {\n    $name: 'igx-grid-toolbar';\n    $theme: apply-palette(map-get($schema, $name), $palette);\n\n    @if not($title-text-color) and $background-color {\n        $title-text-color: text-contrast($background-color);\n    }\n\n    @if not($item-text-color) and $dropdown-background {\n        $item-text-color: text-contrast($dropdown-background);\n    }\n\n    @if not($item-hover-text-color) and $dropdown-background {\n        $item-hover-text-color: text-contrast($dropdown-background);\n    }\n\n    @if not($item-focus-text-color) and $dropdown-background {\n        $item-focus-text-color: text-contrast($dropdown-background);\n    }\n\n    @if not($item-hover-text-color) and $item-hover-background {\n        $item-hover-text-color: text-contrast($item-hover-background);\n    }\n\n    @if not($item-focus-text-color) and $item-focus-background {\n        $item-focus-text-color: text-contrast($item-focus-background);\n    }\n\n    @if not($button-hover-background) and $background-color {\n        $button-hover-text-color: text-contrast($background-color);\n\n        @if type-of($background-color) == 'color' {\n            $button-hover-background: rgba(text-contrast($background-color), .2);\n        }\n    }\n\n    @if not($button-focus-background) and $background-color {\n        $button-focus-text-color: text-contrast($background-color);\n\n        @if type-of($background-color) == 'color' {\n            $button-focus-background: rgba(text-contrast($background-color), .2);\n        }\n    }\n\n    @if not($button-background) and $background-color {\n        $button-text-color: text-contrast($background-color);\n\n        @if type-of($background-color) == 'color' {\n            $button-background: rgba(text-contrast($background-color), .1);\n        }\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n\n        background-color: $background-color,\n        button-background: $button-background,\n        title-text-color: $title-text-color,\n\n        button-text-color: $button-text-color,\n        button-hover-background: $button-hover-background,\n        button-hover-text-color: $button-hover-text-color,\n        button-focus-background: $button-focus-background,\n        button-focus-text-color: $button-focus-text-color,\n\n        item-text-color: $item-text-color,\n        dropdown-background: $dropdown-background,\n        item-hover-background: $item-hover-background,\n        item-hover-text-color: $item-hover-text-color,\n        item-focus-background: $item-focus-background,\n        item-focus-text-color: $item-focus-text-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires igx-color\n/// @requires {mixin} ellipsis\n/// @requires rem\n/// @requires em\n/// @requires --var\n@mixin igx-grid-toolbar($theme) {\n    @include igx-root-css-vars($theme);\n\n    // Caption\n    $grid-toolbar-fs: rem(16px);\n\n    $grid-toolbar-padding: (\n        comfortable: 0 rem(16px) 0 rem(24px),\n        cosy: 0 rem(12px) 0 rem(16px),\n        compact: 0 rem(8px) 0 rem(12px)\n    );\n\n    $grid-toolbar-height: (\n        comfortable: rem(58px),\n        cosy: rem(52px),\n        compact: rem(44px)\n    );\n\n    %igx-grid-toolbar {\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        grid-row: 1;\n        font-size: $grid-toolbar-fs;\n        padding: map-get($grid-toolbar-padding, 'comfortable');\n        border-bottom: 1px solid igx-color(map-get($theme, 'palette'), 'grays', 300);\n        background: --var($theme, 'background-color');\n        height: map-get($grid-toolbar-height, 'comfortable');\n\n        %igx-button--flat {\n            background: --var($theme, 'button-background');\n            color: --var($theme, 'button-text-color');\n            margin-left: rem(8);\n\n            &:hover {\n                background: --var($theme, 'button-hover-background');\n                color: --var($theme, 'button-hover-text-color');\n            }\n\n            &:focus,\n            &:active {\n                background: --var($theme, 'button-focus-background');\n                color: --var($theme, 'button-focus-text-color');\n            }\n        }\n\n        %igx-button--icon {\n            background: --var($theme, 'button-background');\n            color: --var($theme, 'button-text-color');\n            margin-left: rem(8);\n            border-radius: 0;\n\n            &:hover {\n                background: --var($theme, 'button-hover-background');\n                color: --var($theme, 'button-hover-text-color');\n            }\n\n            &:focus,\n            &:active {\n                background: --var($theme, 'button-focus-background');\n                color: --var($theme, 'button-focus-text-color');\n            }\n        }\n\n        %igx-grid-toolbar__button-space {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n\n            > * {\n                margin-left: rem(8px);\n\n                &:first-child {\n                    margin-left: 0;\n                }\n            }\n        }\n\n        &[dir='rtl'] {\n            text-align: right;\n\n            %igx-button--flat,\n            %igx-button--icon {\n                margin-left: 0;\n                margin-right: rem(8);\n            }\n\n            %igx-grid-toolbar__button-space {\n                text-align: right;\n\n                > * {\n                    margin-left: 0;\n                    margin-right: rem(8px);\n                }\n\n                > *:last-child {\n                    margin-left: 0;\n                }\n            }\n        }\n    }\n\n    %igx-grid-toolbar--cosy {\n        height: map-get($grid-toolbar-height, 'cosy');\n        padding: map-get($grid-toolbar-padding, 'cosy');\n    }\n\n    %igx-grid-toolbar--compact {\n        height: map-get($grid-toolbar-height, 'compact');\n        padding: map-get($grid-toolbar-padding, 'compact');\n    }\n\n    [dir='rtl'] {\n        %igx-grid-toolbar {\n            text-align: right;\n\n            %igx-button--flat,\n            %igx-button--icon {\n                margin-left: 0;\n                margin-right: rem(8px);\n            }\n\n            %igx-grid-toolbar__button-space {\n                text-align: right;\n\n                > * {\n                    margin-left: 0;\n                    margin-right: rem(8px);\n                }\n\n                > *:last-child {\n                    margin-left: 0;\n                }\n            }\n        }\n    }\n\n    %grid-caption {\n        display: flex;\n        align-items: center;\n    }\n\n    %igx-grid-toolbar__title {\n        color: --var($theme, 'title-text-color');\n        flex: 1 1 auto;\n        @include ellipsis();\n    }\n\n    %igx-grid-toolbar__custom-content {\n        display: flex;\n        flex-flow: row wrap;\n    }\n\n    %igx-grid-toolbar__actions {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        > div {\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n        }\n    }\n\n    %igx-grid-toolbar__dropdown {\n        position: relative;\n\n        %igx-filtering-menu {\n            padding: rem(0);\n            right: 0;\n            margin: 0;\n            min-width: auto;\n        }\n    }\n\n    %igx-grid-toolbar__dd-list {\n        list-style: none;\n        background: --var($theme, 'dropdown-background');\n        margin: 0;\n        padding: 0;\n    }\n\n    %igx-grid-toolbar__dd-list-items {\n        cursor: pointer;\n        position: relative;\n        padding: em(8px) em(16px);\n        color: --var($theme, 'item-text-color');\n        white-space: nowrap;\n\n        &:hover {\n            background: --var($theme, 'item-hover-background');\n            color: --var($theme, 'item-hover-text-color');\n        }\n\n        &:focus {\n            background: --var($theme, 'item-focus-background');\n            color: --var($theme, 'item-focus-text-color');\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $color [null] - The icon color.\n/// @param {String} $size [null] - The icon size.\n/// @param {Color} $disabled-color [null] - The disabled icon color.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n///\n/// @example scss Change the icon color\n///   $my-icon-theme: igx-icon-theme($color: orange);\n///   // Pass the theme to the igx-icon component mixin\n///   @include igx-icon($my-icon-theme);\n@function igx-icon-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $color: null,\n    $size: null,\n    $disabled-color: null\n) {\n    $name: 'igx-icon';\n    $theme: apply-palette(map-get($schema, $name), $palette);\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        color: $color,\n        size: $size,\n        disabled-color: $disabled-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires --var\n@mixin igx-icon($theme) {\n    @include igx-root-css-vars($theme);\n\n    // @debug $theme;\n\n    $igx-icon-font-size: --var($theme, 'size');\n\n    %igx-icon-display {\n        width: $igx-icon-font-size;\n        height: $igx-icon-font-size;\n        font-size: $igx-icon-font-size;\n        color: --var($theme, 'color');\n\n        svg {\n            width: inherit;\n            height: inherit;\n            fill: currentColor;\n        }\n    }\n\n    %igx-icon--inactive {\n        color: --var($theme, 'disabled-color') !important;\n        opacity: .54;\n    }\n}\n","////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @type Timing Function\n$ease-in-quad: cubic-bezier(.55, .085, .68, .53);\n/// @type Timing Function\n$ease-in-cubic: cubic-bezier(.55, .55, .675, .19);\n/// @type Timing Function\n$ease-in-quart: cubic-bezier(.895, .03, .685, .22);\n/// @type Timing Function\n$ease-in-quint: cubic-bezier(.755, .05, .855, .06);\n/// @type Timing Function\n$ease-in-sine: cubic-bezier(.47, 0, .745, .715);\n/// @type Timing Function\n$ease-in-expo: cubic-bezier(.95, .05, .795, .035);\n/// @type Timing Function\n$ease-in-circ: cubic-bezier(.95, .05, .795, .035);\n/// @type Timing Function\n$ease-in-back: cubic-bezier(.95, .05, .795, .035);\n/// @type Timing Function\n$ease-out-quad: cubic-bezier(.25, .46, .45, .94);\n/// @type Timing Function\n$ease-out-cubic: cubic-bezier(.215, .61, .355, 1);\n/// @type Timing Function\n$ease-out-quart: cubic-bezier(.165, .84, .44, 1);\n/// @type Timing Function\n$ease-out-quint: cubic-bezier(.23, 1, .32, 1);\n/// @type Timing Function\n$ease-out-sine: cubic-bezier(.39, .575, .565, 1);\n/// @type Timing Function\n$ease-out-expo: cubic-bezier(.19, 1, .22, 1);\n/// @type Timing Function\n$ease-out-circ: cubic-bezier(.075, .82, .165, 1);\n/// @type Timing Function\n$ease-out-back: cubic-bezier(.175, .885, .32, 1.275);\n/// @type Timing Function\n$ease-in-out-quad: cubic-bezier(.455, .03, .515, .955);\n/// @type Timing Function\n$ease-in-out-cubic: cubic-bezier(.645, .045, .355, 1);\n/// @type Timing Function\n$ease-in-out-quart: cubic-bezier(.77, 0, .175, 1);\n/// @type Timing Function\n$ease-in-out-quint: .5s cubic-bezier(.86, 0, .07, 1);\n/// @type Timing Function\n$ease-in-out-sine: cubic-bezier(.445, .05, .55, .95);\n/// @type Timing Function\n$ease-in-out-expo: cubic-bezier(1, 0, 0, 1);\n/// @type Timing Function\n$ease-in-out-circ: cubic-bezier(.785, .135, .15, .86);\n/// @type Timing Function\n$ease-in-out-back: cubic-bezier(.68, -.55, .265, 1.55);\n","/// Default theme palette.\n/// Will be the one used if no theme palette is specified.\n/// @group palettes\n/// @type Map\n/// @prop {Map} primary - The primary sub-palette created from the primary color.\n/// @prop {Map} secondary - The secondary sub-palette created from the secondary color.\n/// @prop {Map} grays - The grays sub-palette. Included by default in every igx-palette.\n/// @prop {Color} primary.100 [#a7d9fa] - The 100 variant of the `primary` color.\n/// @prop {Color} primary.200 [#6dbcf1] - The 200 variant of the `primary` color.\n/// @prop {Color} primary.300 [#3ca9f2] - The 300 variant of the `primary` color.\n/// @prop {Color} primary.400 [#1da0f7] - The 400 variant of the `primary` color.\n/// @prop {Color} primary.500 [#09f] - The 500 variant of the `primary` color (default).\n/// @prop {Color} primary.600 [#0089e5] - The 600 variant of the `primary` color.\n/// @prop {Color} primary.700 [#007ed2] - The 700 variant of the `primary` color.\n/// @prop {Color} primary.800 [#0072be] - The 800 variant of the `primary` color.\n/// @prop {Color} primary.900 [#0065a8] - The 900 variant of the `primary` color.\n/// @prop {Color} primary.A100 [#55bbff] - The A100 variant of the `primary` color.\n/// @prop {Color} primary.A200 [#27a9ff] - The A200 variant of the `primary` color.\n/// @prop {Color} primary.A400 [#008deb] - The A400 variant of the `primary` color.\n/// @prop {Color} primary.A700 [#0066aa] - The A700 variant of the `primary` color.\n/// @prop {Color} secondary.100 [#f0b2ce] - The 100 variant of the `secondary` color.\n/// @prop {Color} secondary.200 [#e17fab] - The 200 variant of the `secondary` color.\n/// @prop {Color} secondary.300 [#dc5391] - The 300 variant of the `secondary` color.\n/// @prop {Color} secondary.400 [#df3683] - The 400 variant of the `secondary` color.\n/// @prop {Color} secondary.500 [#e41c77] - The 500 variant of the `secondary` color (default).\n/// @prop {Color} secondary.600 [#dc0a6a] - The 600 variant of the `secondary` color.\n/// @prop {Color} secondary.700 [#d30060] - The 700 variant of the `secondary` color.\n/// @prop {Color} secondary.800 [#bf0057] - The 800 variant of the `secondary` color.\n/// @prop {Color} secondary.900 [#a5044d] - The 900 variant of the `secondary` color.\n/// @prop {Color} secondary.A100 [#f65fa4] - The A100 variant of the `secondary` color.\n/// @prop {Color} secondary.A200 [#f3348b] - The A200 variant of the `secondary` color.\n/// @prop {Color} secondary.A400 [#df0d6d] - The A400 variant of the `secondary` color.\n/// @prop {Color} secondary.A700 [#a2094f] - The A700 variant of the `primary` color.\n/// @prop {Color} grays.100 [rgba(0, 0, 0, .04)] - The 100 variant of the `grays` color.\n/// @prop {Color} grays.200 [rgba(0, 0, 0, .08)] - The 200 variant of the `grays` color.\n/// @prop {Color} grays.300 [rgba(0, 0, 0, .12)] - The 300 variant of the `grays` color.\n/// @prop {Color} grays.400 [rgba(0, 0, 0, .26)] - The 400 variant of the `grays` color.\n/// @prop {Color} grays.500 [rgba(0, 0, 0, .38)] - The 500 variant of the `grays` color.\n/// @prop {Color} grays.600 [rgba(0, 0, 0, .54)] - The 600 variant of the `grays` color.\n/// @prop {Color} grays.700 [rgba(0, 0, 0, .62)] - The 700 variant of the `grays` color.\n/// @prop {Color} grays.800 [rgba(0, 0, 0, .74)] - The 800 variant of the `grays` color.\n/// @prop {Color} grays.900 [rgba(0, 0, 0, .87)] - The 900 variant of the `grays` color.\n/// @prop {Color} info [#1377d5] - The `info` color. Default for every palette if not specified.\n/// @prop {Color} success [#4eb862] - The `success` color. Default for every palette if not specified.\n/// @prop {Color} warn [#fbb13c] - The `warn` color. Default for every palette if not specified.\n/// @prop {Color} error [#ff134a] - The `error`. Default for every palette if not specified.\n/// @requires igx-palette\n$default-palette: igx-palette($primary: #09f, $secondary: #e41c77) !default;\n\n/// Global Overlay Color\n/// @group palettes\n/// @type Color\n/// @prop {Map} $palette [$default-palette] - The palette used to extract the color from.\n/// @prop {String} $color [grays] - The name of the sub-palette to take the color from.\n/// @requires igx-color\n$overlay-color: igx-color($default-palette, 'grays') !default;\n\n/// Default elevations. Work in progress.\n/// Subject to change.\n/// @group elevations\n/// @type Map\n/// @prop {Color} $color-1 [rgba(0, 0, 0, .26)] - The color used for the umbra shadow.\n/// @prop {Color} $color-2 [rgba(0, 0, 0, .12)] - The color used for the penumbra shadow.\n/// @prop {Color} $color-3 [rgba(0, 0, 0, .08)] - The color used for the ambient shadow.\n/// @requires igx-elevations\n$elevations: igx-elevations(\n    rgba(0, 0, 0, .26),\n    rgba(0, 0, 0, .12),\n    rgba(0, 0, 0, .08)\n) !default;\n\n/// Green palette\n/// @type {Map}\n/// @group palettes\n$green-palette: igx-palette($primary: #09f, $secondary: #72da67) !default;\n\n/// Red palette\n/// @type {Map}\n/// @group palettes\n$purple-palette: igx-palette($primary: #00b4d6, $secondary: #514590) !default;\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $background-color [null] - The background color used for modal overlays.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n///\n/// @example scss Change the background color\n///   $my-overlay-theme: igx-overlay-theme($background-color: rgba(yellow, .74));\n///   // Pass the theme to the igx-overlay component mixin\n///   igx-overlay($my-overlay-theme);\n///\n@function igx-overlay-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n    $background-color: null\n) {\n    $name: 'igx-overlay';\n    $theme: apply-palette(map-get($schema, $name), $palette);\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        background-color: $background-color\n    ));\n}\n\n///\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires --var\n///\n@mixin igx-overlay($theme) {\n    @include igx-root-css-vars($theme);\n\n    %overlay-display {\n        width: 0;\n        height: 0;\n        box-sizing: content-box;\n    }\n\n    %overlay-wrapper {\n        position: fixed;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        background: transparent;\n        transition: background .25s $ease-in-out-quad;\n        pointer-events: none;\n        z-index: 10;\n        box-sizing: content-box;\n    }\n\n    %overlay-wrapper--modal {\n        background: --var($theme, 'background-color');\n        pointer-events: initial;\n    }\n\n    %overlay-wrapper--flex {\n        display: flex;\n    }\n\n    %overlay-content {\n        position: absolute;\n        pointer-events: all;\n        box-sizing: content-box;\n    }\n\n    %overlay-content--modal {\n        pointer-events: initial;\n    }\n\n    %overlay-content--elastic {\n        overflow: auto;\n    }\n\n    %overlay-content--relative {\n        position: relative;\n    }\n\n    %igx-toggle--hidden {\n        display: none !important;\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Grid Paging Theme\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Color} $text-color [currentColor] - The text color.\n/// @param {Color} $background-color [rgba(0, 0, 0, .04)] - The background color of the paging panel.\n/// @param {Color} $border-color [rgba(0, 0, 0, .26)] - The border color of the paging panel.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n///\n/// @example scss Change the stripes color\n///   $my-grid-paginator-theme: igx-grid-paginator-theme(\n///     $stripes-color: orange\n///   );\n///   // Pass the theme to the igx-grid-paginator component mixin\n///   @include igx-grid-paginator($my-grid-paginator-theme);\n@function igx-grid-paginator-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $text-color: null,\n    $background-color: null,\n    $border-color: null\n) {\n    $name: 'igx-grid-paginator';\n    $theme: apply-palette(map-get($schema, $name), $palette);\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        text-color: $text-color,\n        background-color: $background-color,\n        border-color: $border-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-grid-paginator($theme) {\n    @include igx-root-css-vars($theme);\n\n    $paginator-padding: (\n        comfortable: 0 rem(24px),\n        cosy: 0 rem(16px),\n        compact: 0 rem(12px)\n    );\n\n    $paginator-height: (\n        comfortable: rem(56px),\n        cosy: rem(48px),\n        compact: rem(44px)\n    );\n\n    %igx-grid-paginator {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        color: --var($theme, 'text-color');\n        background: --var($theme, 'background-color');\n        grid-row: 7;\n        font-size: 12px;\n        border-top: 1px solid --var($theme, 'border-color');\n        z-index: 1;\n        padding: map-get($paginator-padding, 'comfortable');\n        height: map-get($paginator-height, 'comfortable');\n        width: 100%;\n        \n        &:empty {\n            padding: 0;\n        }\n    }\n\n    %igx-grid-paginator--cosy {\n        padding: map-get($paginator-padding, 'cosy');\n        height: map-get($paginator-height, 'cosy');\n    }\n\n    %igx-grid-paginator--compact {\n        padding: map-get($paginator-padding, 'compact');\n        height: map-get($paginator-height, 'compact');\n    }\n\n\n    %igx-grid-paginator__label {\n        margin-right: 8px;\n        @include ellipsis();\n    }\n\n    %igx-grid-paginator__select {\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        flex: 1;\n    }\n\n    %igx-grid-paginator__pager {\n        display: flex;\n        justify-content: flex-end;\n        align-items: center;\n        flex: 1;\n\n        > * {\n            margin-left: rem(8px);\n        }\n    }\n\n    %igx-grid-paginator__select-input {\n        display: flex;\n        max-width: 90px;\n        min-width: 80px;\n    }\n}\n\n","////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin rotate-center {\n    @include keyframes(rotate-center) {\n        0% {\n            transform: rotate(0);\n        }\n\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-bl {\n    @include keyframes(rotate-bl) {\n        0% {\n            transform: rotate(0);\n            transform-origin: bottom left;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: bottom left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-vert-center {\n    @include keyframes(rotate-vert-center) {\n        0% {\n            transform: rotateY(0);\n        }\n\n        100% {\n            transform: rotateY(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-diagonal-br {\n    @include keyframes(rotate-diagonal-br) {\n        0% {\n            transform: rotate3d(-1, 1, 0, 0deg);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: rotate3d(-1, 1, 0, -360deg);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-top {\n    @include keyframes(rotate-top) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: top;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-left {\n    @include keyframes(rotate-left) {\n        0% {\n            transform: rotate(0);\n            transform-origin: left;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-vert-left {\n    @include keyframes(rotate-vert-left) {\n        0% {\n            transform: rotateY(0);\n            transform-origin: left;\n        }\n\n        100% {\n            transform: rotateY(360deg);\n            transform-origin: left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-diagonal-bl {\n    @include keyframes(rotate-diagonal-bl) {\n        0% {\n            transform: rotate3d(1, 1, 0, 0deg);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: rotate3d(1, 1, 0, 360deg);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-tr {\n    @include keyframes(rotate-tr) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top right;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: top right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-tl {\n    @include keyframes(rotate-tl) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top left;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: top left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up {\n    @include keyframes(rotate-scale-up) {\n        0% {\n            transform: scale(1) rotateZ(0);\n        }\n\n        50% {\n            transform: scale(2) rotateZ(180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateZ(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up-diag-1 {\n    @include keyframes(rotate-scale-up-diag-1) {\n        0% {\n            transform: scale(1) rotate3d(1, 1, 0, 0deg);\n        }\n\n        50% {\n            transform: scale(2) rotate3d(1, 1, 0, -180deg);\n        }\n\n        100% {\n            transform: scale(1) rotate3d(1, 1, 0, -360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down {\n    @include keyframes(rotate-scale-down) {\n        0% {\n            transform: scale(1) rotateZ(0);\n        }\n\n        50% {\n            transform: scale(.5) rotateZ(180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateZ(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down-diag-1 {\n    @include keyframes(rotate-scale-down-diag-1) {\n        0% {\n            transform: scale(1) rotate3d(1, 1, 0, 0deg);\n        }\n\n        50% {\n            transform: scale(.5) rotate3d(1, 1, 0, -180deg);\n        }\n\n        100% {\n            transform: scale(1) rotate3d(1, 1, 0, -360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up-hor {\n    @include keyframes(rotate-scale-up-hor) {\n        0% {\n            transform: scale(1) rotateX(0);\n        }\n\n        50% {\n            transform: scale(2) rotateX(-180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateX(-360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up-diag-2 {\n    @include keyframes(rotate-scale-up-diag-2) {\n        0% {\n            transform: scale(1) rotate3d(-1, 1, 0, 0deg);\n        }\n\n        50% {\n            transform: scale(2) rotate3d(-1, 1, 0, 180deg);\n        }\n\n        100% {\n            transform: scale(1) rotate3d(-1, 1, 0, 360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down-hor {\n    @include keyframes(rotate-scale-down-hor) {\n        0% {\n            transform: scale(1) rotateX(0);\n        }\n\n        50% {\n            transform: scale(.5) rotateX(-180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateX(-360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down-diag-2 {\n    @include keyframes(rotate-scale-down-diag-2) {\n        0% {\n            transform: scale(1) rotate3d(-1, 1, 0, 0deg);\n        }\n\n        50% {\n            transform: scale(.5) rotate3d(-1, 1, 0, 180deg);\n        }\n\n        100% {\n            transform: scale(1) rotate3d(-1, 1, 0, 360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up-ver {\n    @include keyframes(rotate-scale-up-ver) {\n        0% {\n            transform: scale(1) rotateY(0);\n        }\n\n        50% {\n            transform: scale(2) rotateY(180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateY(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down-ver {\n    @include keyframes(rotate-scale-down-ver) {\n        0% {\n            transform: scale(1) rotateY(0);\n        }\n\n        50% {\n            transform: scale(.5) rotateY(180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateY(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-cw {\n    @include keyframes(rotate-90-cw) {\n        0% {\n            transform: rotate(0);\n        }\n\n        100% {\n            transform: rotate(90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-right-cw {\n    @include keyframes(rotate-90-right-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: right;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-bl-cw {\n    @include keyframes(rotate-90-bl-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-horizontal-fwd {\n    @include keyframes(rotate-90-horizontal-fwd) {\n        0% {\n            transform: rotateX(0);\n        }\n\n        100% {\n            transform: rotateX(90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-ccw {\n    @include keyframes(rotate-90-ccw) {\n        0% {\n            transform: rotate(0);\n        }\n\n        100% {\n            transform: rotate(-90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-right-ccw {\n    @include keyframes(rotate-90-right-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: right;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-bl-ccw {\n    @include keyframes(rotate-90-bl-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-horizontal-bck {\n    @include keyframes(rotate-90-horizontal-bck) {\n        0% {\n            transform: rotateX(0);\n        }\n\n        100% {\n            transform: rotateX(-90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-top-cw {\n    @include keyframes(rotate-90-top-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: top;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-br-cw {\n    @include keyframes(rotate-90-br-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-left-cw {\n    @include keyframes(rotate-90-left-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: left;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-vertical-fwd {\n    @include keyframes(rotate-90-vertical-fwd) {\n        0% {\n            transform: rotateY(0);\n        }\n\n        100% {\n            transform: rotateY(90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-top-ccw {\n    @include keyframes(rotate-90-top-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: top;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-br-ccw {\n    @include keyframes(rotate-90-br-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-left-ccw {\n    @include keyframes(rotate-90-left-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: left;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-vertical-bck {\n    @include keyframes(rotate-90-vertical-bck) {\n        0% {\n            transform: rotateY(0);\n        }\n\n        100% {\n            transform: rotateY(-90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-tr-cw {\n    @include keyframes(rotate-90-tr-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top right;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: top right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-bottom-cw {\n    @include keyframes(rotate-90-bottom-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: bottom;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: bottom;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-tl-cw {\n    @include keyframes(rotate-90-tl-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-tr-ccw {\n    @include keyframes(rotate-90-tr-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top right;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: top right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-bottom-ccw {\n    @include keyframes(rotate-90-bottom-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: bottom;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: bottom;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-tl-ccw {\n    @include keyframes(rotate-90-tl-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $track-color [null] - The main track color.\n/// @param {Color} $fill-color-default [null] - The track default fill color.\n/// @param {Color} $fill-color-danger [null] - The track danger fill color.\n/// @param {Color} $fill-color-warning [null] - The track warning fill color.\n/// @param {Color} $fill-color-info [null] - The track info fill color.\n/// @param {Color} $fill-color-success [null] - The track success fill color.\n/// @param {Color} $stripes-color [null] - The track stripes color.\n/// @param {Color} $text-color [null] - The track value text color.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n///\n/// @example scss Change the stripes color\n///   $my-progress-linear-theme: igx-progress-linear-theme(\n///     $stripes-color: orange\n///   );\n///   // Pass the theme to the igx-progress-linear component mixin\n///   @include igx-progress-linear($my-progress-linear-theme);\n@function igx-progress-linear-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $track-color: null,\n    $fill-color-default: null,\n    $fill-color-danger: null,\n    $fill-color-warning: null,\n    $fill-color-info: null,\n    $fill-color-success: null,\n    $stripes-color: null,\n    $text-color: null\n) {\n    $name: 'igx-linear-bar';\n    $theme: apply-palette(map-get($schema, $name), $palette);\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        track-color: $track-color,\n        fill-color-default: $fill-color-default,\n        fill-color-danger: $fill-color-danger,\n        fill-color-warning: $fill-color-warning,\n        fill-color-info: $fill-color-info,\n        fill-color-success: $fill-color-success,\n        stripes-color: $stripes-color,\n        text-color: $text-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires em\n/// @requires --var\n@mixin igx-progress-linear($theme) {\n    @include igx-root-css-vars($theme);\n\n    // @debug $theme;\n\n    $bar-height: 4px;\n    $stripe-color: --var($theme, 'stripes-color');\n    $value-fs: em(14px, 16px);\n    $value-fw: 600;\n    $value-margin: 0;\n\n    %linear-display {\n        position: relative;\n        display: flex;\n        width: 100%;\n        flex: 1 1 100%;\n        flex-direction: column;\n    }\n\n    %linear-bar {\n        position: relative;\n        width: inherit;\n        height: $bar-height;\n        background: --var($theme, 'track-color');\n        overflow: hidden;\n        z-index: 0;\n    }\n\n    %linear-indicator {\n        width: 100%;\n        position: relative;\n        height: inherit;\n    }\n\n    %linear-indicator--striped {\n        background-image: linear-gradient(\n            -45deg,\n            $stripe-color 25%,\n            transparent 25%,\n            transparent 50%,\n            $stripe-color 50%,\n            $stripe-color 75%,\n            transparent 75%,\n            transparent\n        );\n        background-size: 40px 40px;\n    }\n\n    %linear-indicator--indeterminate {\n        @include animation(indeterminate-bar 2s cubic-bezier(0, .085, .68, .53) infinite);\n        width: 100% !important;\n\n        &::before {\n            position: absolute;\n            content: '';\n            top: 0;\n            left: -200%;\n            width: 100%;\n            height: inherit;\n            background-color: inherit;\n            transform-origin: top right;\n        }\n    }\n\n    %linear-indicator--default {\n        background: --var($theme, 'fill-color-default')\n    }\n\n    %linear-indicator--danger {\n        background-color: --var($theme, 'fill-color-danger');\n    }\n\n    %linear-indicator--warning {\n        background-color: --var($theme, 'fill-color-warning');\n    }\n\n    %linear-indicator--info {\n        background-color: --var($theme, 'fill-color-info');\n    }\n\n    %linear-indicator--success {\n        background-color: --var($theme, 'fill-color-success');\n    }\n\n\n    %linear-value {\n        margin: $value-margin;\n        color: --var($theme, 'text-color');\n        font-size: $value-fs;\n        font-weight: $value-fw;\n    }\n\n    %linear-value--start {\n        align-self: flex-start;\n    }\n\n    %linear-value--center {\n        align-self: center;\n    }\n\n    %linear-value--end {\n        align-self: flex-end;\n    }\n\n    %linear-value--top {\n        order: -1;\n    }\n\n    %linear-value--hidden {\n        display: none;\n    }\n\n    @include keyframes('indeterminate-bar') {\n        0% {\n            transform: scaleX(0) translateX(-100%);\n            transform-origin: left;\n        }\n\n        50% {\n            transform: scaleX(1) translateX(50%);\n            transform-origin: right;\n        }\n\n        100% {\n            transform: scaleX(0) translateX(200%);\n            transform-origin: right;\n        }\n    }\n}\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $base-circle-color [null] - The base circle fill color.\n/// @param {Color} $progress-circle-color [null] - The progress circle fill color.\n/// @param {Color} $text-color [null] - The value text color.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n///\n/// @example scss Change the circle progress color\n///   $my-progress-circular-theme: igx-progress-circular-theme(\n///     $progress-circle-color: purple\n///   );\n///   // Pass the theme to the igx-progress-circular component mixin\n///   @include igx-progress-circular($my-progress-circle-theme);\n@function igx-progress-circular-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $base-circle-color: null,\n    $progress-circle-color: null,\n    $text-color: null\n) {\n    $name: 'igx-circular-bar';\n    $theme: apply-palette(map-get($schema, $name), $palette);\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        base-circle-color: $base-circle-color,\n        progress-circle-color: $progress-circle-color,\n        text-color: $text-color\n    ));\n}\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires {mixin} rotate-center\n/// @requires --var\n@mixin igx-progress-circular($theme) {\n    // Include rotate animation\n    @include rotate-center();\n\n    @include igx-root-css-vars($theme);\n\n    // @debug $theme;\n\n    $circular-value-fs: rem(32px, 16px);\n    $circular-value-fw: 600;\n\n    %circular-display {\n        display: inline-flex;\n        flex: 1 1 auto;\n        width: rem(32px);\n        height: rem(32px);\n\n        svg {\n            width: 100%;\n            height: 100%;\n            min-width: inherit;\n            min-height: inherit;\n        }\n    }\n\n    %circular-display--indeterminate {\n        @include animation(rotate-center 1.4s linear infinite);\n        transform-origin: 50% 50%;\n    }\n\n    %circular-inner {\n        stroke-width: 4;\n        fill: transparent;\n        stroke: --var($theme, 'base-circle-color');\n    }\n\n    %circular-outer {\n        fill: transparent;\n        stroke: --var($theme, 'progress-circle-color');\n        stroke-width: 4;\n        stroke-dashoffset: 289;\n        stroke-dasharray: 289;\n        transform-origin: 50% 50%;\n        transform: rotate(-90deg);\n    }\n\n    %circular-outer--indeterminate {\n        stroke-dashoffset: 180;\n        stroke-dasharray: 180;\n        @include animation(indeterminate-accordion 1.5s cubic-bezier(0, .085, .68, .53) infinite);\n    }\n\n    %circular-text {\n        font-size: $circular-value-fs;\n        font-weight: $circular-value-fw;\n        fill: --var($theme, 'text-color');\n    }\n\n    %circular-text--hidden {\n        visibility: hidden;\n    }\n\n    @include keyframes('indeterminate-accordion') {\n        50% {\n            stroke-dashoffset: 260;\n            stroke-dasharray: 289;\n        }\n\n        100% {\n            stroke-dashoffset: -180;\n        }\n    }\n}\n","////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $track-color [null] - The color of the track.\n/// @param {Color} $thumb-color [null] - The color of the thumb.\n/// @param {Color} $label-background-color [null] - The background color of the bubble label.\n/// @param {Color} $label-text-color [null] - The text color of the bubble label.\n///\n/// @param {Color} $disabled-thumb-color [null] - The thumb color when its disabled.\n/// @param {Color} $base-track-color [null] - The base background color of the track.\n/// @param {Color} $disabled-base-track-color [null] - The base background color of the track when is disabled.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n///\n/// @example scss Set custom track and thumb on colors\n///   $my-slider-theme: igx-slider-theme($thumb-on-color: black, $track-on-color: yellow);\n///   // Pass the theme to the igx-slider component mixin\n///   @include igx-slider($my-slider-theme);\n@function igx-slider-theme(\n    $palette: $default-palette,\n    $schema: $light-schema,\n\n    $track-color: null,\n    $thumb-color: null,\n\n    $label-background-color: null,\n    $label-text-color: null,\n\n    $disabled-thumb-color: null,\n    $base-track-color: null,\n    $disabled-base-track-color: null\n\n) {\n    $name: 'igx-slider';\n    $theme: apply-palette(map-get($schema, $name), $palette);\n\n    @if not($label-text-color) and $label-background-color {\n        $label-text-color: text-contrast($label-background-color);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        track-color: $track-color,\n        thumb-color: $thumb-color,\n        label-background-color: $label-background-color,\n        label-text-color: $label-text-color,\n        disabled-thumb-color: $disabled-thumb-color,\n        base-track-color: $base-track-color,\n        disabled-base-track-color: $disabled-base-track-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-root-css-vars\n/// @requires rem\n/// @requires --var\n@mixin igx-slider($theme) {\n    @include igx-root-css-vars($theme);\n\n    // @debug $theme;\n\n    $slider-height: 48px;\n    $slider-track-height: 2px;\n\n    // Slider Thumb\n    $slider-thumb-width: 40px;\n    $slider-thumb-height: $slider-thumb-width;\n    $slider-thumb-radius: $slider-thumb-width / 2;\n\n    // Slider Label\n    $slider-label-width: 36px;\n    $slider-label-height: $slider-label-width;\n    $slider-label-radius: $slider-label-width / 2;\n    $slider-label-font-size: rem(12px);\n    $slider-label-font-weight: 600;\n    $slider-label-padding: 0 rem(2px);\n\n    %igx-slider-display {\n        display: flex;\n        position: relative;\n        height: rem($slider-height);\n        align-items: center;\n    }\n\n    %igx-slider-thumbs-container {\n        position: absolute;\n        width: 100%;\n        height: 0;\n        cursor: default;\n        z-index: 1;\n    }\n\n    %igx-slider-track {\n        position: absolute;\n        width: 100%;\n        height: rem($slider-track-height);\n        background: --var($theme, 'base-track-color');\n        transition: background .2s $ease-out-quad;\n    }\n\n    %igx-slider-track--disabled {\n        background: --var($theme, 'disabled-base-track-color');\n    }\n\n    %igx-slider-track-ticks {\n        position: absolute;\n        width: 100%;\n        height: rem($slider-track-height);\n        background-size: 100% em($slider-track-height);\n        opacity: .85;\n        transition: opacity .2s $ease-out-quad;\n        z-index: 1;\n    }\n\n    %igx-slider-track-ticks--disabled {\n        visibility: hidden;\n    }\n\n    %igx-slider-track-fill {\n        position: absolute;\n        width: 100%;\n        height: inherit;\n        background: --var($theme, 'track-color');\n        transform-origin: left center;\n        transform: scaleX(0);\n    }\n\n    %igx-slider-track-fill--disabled {\n        visibility: hidden;\n    }\n\n    %igx-thumb-display {\n        position: absolute;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n        width: $slider-thumb-width;\n        height: $slider-thumb-height;\n        outline-style: none;\n        top: -#{rem($slider-thumb-radius)};\n        margin-left: -#{rem($slider-thumb-radius)};\n\n        &:focus %igx-thumb-dot::after {\n            opacity: .18;\n            /* 32 / 40 */\n            transform: scale(.8);\n        }\n    }\n\n    %igx-thumb--disabled {\n        &:hover %igx-thumb-label {\n            opacity: 0;\n        }\n    }\n\n    %igx-thumb-label {\n        position: absolute;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex: 0 0 auto;\n        top: -#{rem($slider-thumb-height - 6px)};\n        pointer-events: none;\n        min-width: rem($slider-label-width);\n        height: rem($slider-label-height);\n        padding: $slider-label-padding;\n        border-radius: rem($slider-label-radius);\n        margin: 0 auto;\n        font-size: $slider-label-font-size;\n        font-weight: $slider-label-font-weight;\n        line-height: 1;\n        color: --var($theme, 'label-text-color');\n        background: --var($theme, 'label-background-color');\n        opacity: 0;\n        border-color: --var($theme, 'label-background-color') transparent transparent;\n        transition: opacity .1s $ease-out-quad;\n        z-index: -1;\n\n        &::after {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 50%;\n            margin-left: -#{$slider-label-radius};\n            width: rem($slider-label-width);\n            height: $slider-label-height;\n            border-radius: 0 $slider-label-radius $slider-label-radius;\n            background: inherit;\n            transform: rotate(-135deg);\n            z-index: -1;\n        }\n\n        &::before {\n            content: '';\n            position: absolute;\n            top: rem(40px);\n            left: calc(50% - 1px);\n            border-left: 1px solid;\n            border-right: 1px solid;\n            border-top: rem(14px) solid;\n            border-color: inherit;\n        }\n    }\n\n    %igx-thumb-dot {\n        position: relative;\n        left: 0;\n        padding: rem(20px);\n        pointer-events: none;\n\n        &:hover::after {\n            opacity: .12;\n            /* 32 / 40 */\n            transform: scale(.8);\n        }\n\n        &::before {\n            position: absolute;\n            content: '';\n            width: rem(12px);\n            height: rem(12px);\n            left: #{rem($slider-thumb-radius) - rem(6px)};\n            top: #{rem($slider-thumb-radius) - rem(6px)};\n            background: --var($theme, 'thumb-color');\n            transform: rotate(45deg);\n            transition: transform .1s $ease-out-quad, border-radius .1s $ease-out-quad;\n            border-radius: rem($slider-thumb-radius);\n        }\n\n        &::after {\n            position: absolute;\n            content: '';\n            width: rem($slider-thumb-width);\n            height: rem($slider-thumb-height);\n            background: --var($theme, 'thumb-color');\n            top: 0;\n            left: 0;\n            opacity: 0;\n            transform: scale(0);\n            transform-origin: center center;\n            transition: transform .1s $ease-out-quad, opacity .1s $ease-out-quad;\n            border-radius: 50%;\n        }\n    }\n\n    %igx-thumb-dot--disabled {\n        pointer-events: none;\n\n        &::before {\n            background: --var($theme, 'disabled-thumb-color');\n            border-radius: rem($slider-thumb-radius);\n        }\n\n        &::after {\n            transform: scale(0);\n        }\n    }\n\n    %igx-thumb-dot--active {\n        &::before {\n            border-radius: 0 $slider-thumb-radius $slider-thumb-radius;\n        }\n    }\n\n    %igx-thumb-dot--pressed {\n        &::after {\n            opacity: .24 !important;\n            /* 48 / 40 */\n            transform: scale(1.2) !important;\n        }\n    }\n\n    %igx-thumb-label--active {\n        opacity: 1;\n    }\n\n    %igx-thumb--active {\n        z-index: 1;\n    }\n}\n"]}