import { Description } from "./Description";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class AxisDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    readonly type: string;
    constructor();
    private bb;
    formatLabelRef: string;
    private bs;
    title: string;
    private bq;
    stroke: string;
    private a7;
    actualStroke: string;
    private aa;
    strokeThickness: number;
    private bp;
    strip: string;
    private bl;
    majorStroke: string;
    private a5;
    actualMajorStroke: string;
    private y;
    majorStrokeThickness: number;
    private bm;
    minorStroke: string;
    private a6;
    actualMinorStroke: string;
    private z;
    minorStrokeThickness: number;
    private br;
    tickStroke: string;
    private ac;
    tickStrokeThickness: number;
    private ab;
    tickLength: number;
    private g;
    isDisabled: boolean;
    private h;
    isInverted: boolean;
    private k;
    useEnhancedIntervalManagement: boolean;
    private a3;
    enhancedIntervalMinimumCharacters: number;
    private bi;
    labelTextColor: string;
    private bh;
    labelLocation: string;
    private i;
    labelShowFirstLabel: boolean;
    private r;
    labelAngle: number;
    private t;
    labelExtent: number;
    private v;
    labelLeftMargin: number;
    private w;
    labelRightMargin: number;
    private x;
    labelTopMargin: number;
    private s;
    labelBottomMargin: number;
    private bg;
    labelHorizontalAlignment: string;
    private bj;
    labelVerticalAlignment: string;
    private a9;
    crossingAxisRef: string;
    private ba;
    crossingValueRef: string;
    private by;
    titlePosition: string;
    private bz;
    titleTextColor: string;
    private bx;
    titleLocation: string;
    private b1;
    titleVisibility: string;
    private j;
    titleShowFirstLabel: boolean;
    private ad;
    titleAngle: number;
    private af;
    titleExtent: number;
    private ah;
    titleLeftMargin: number;
    private ai;
    titleRightMargin: number;
    private aj;
    titleTopMargin: number;
    private ae;
    titleBottomMargin: number;
    private bw;
    titleHorizontalAlignment: string;
    private b0;
    titleVerticalAlignment: string;
    private a8;
    coercionMethodsRef: string;
    private f;
    expectFunctions: boolean;
    private bn;
    RangeChangedRef: string;
    private bo;
    RenderRequestedRef: string;
    private bc;
    label: string;
    private bd;
    labelFontFamily: string;
    private u;
    labelFontSize: number;
    private bf;
    labelFontWeight: string;
    private be;
    labelFontStyle: string;
    private bt;
    titleFontFamily: string;
    private ag;
    titleFontSize: number;
    private bv;
    titleFontWeight: string;
    private bu;
    titleFontStyle: string;
    private bk;
    labelVisibility: string;
}
