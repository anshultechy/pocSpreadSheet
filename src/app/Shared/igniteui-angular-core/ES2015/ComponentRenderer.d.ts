import { Base, Type } from "./type";
import { IComponentRendererAdapter } from "./IComponentRendererAdapter";
import { TypeDescriptionContext } from "./TypeDescriptionContext";
import { TypeDescriptionPropretyTransforms } from "./TypeDescriptionPropretyTransforms";
import { TypeDescriptionCleanups } from "./TypeDescriptionCleanups";
import { Description } from "./Description";
import { DescriptionRef } from "./DescriptionRef";
/**
 * @hidden
 */
export declare class ComponentRenderer extends Base {
    static $t: Type;
    d: IComponentRendererAdapter;
    private _context;
    context: TypeDescriptionContext;
    i: TypeDescriptionPropretyTransforms;
    f: TypeDescriptionCleanups;
    private static platform;
    constructor();
    private e;
    toJson(a: (arg1: any) => string): string;
    private b1;
    private b2;
    private r;
    private p;
    private b0;
    private k;
    loadJson(a: string, b: (arg1: string) => any): void;
    private a;
    private a4;
    private ag;
    private af;
    private aj;
    private ah;
    private ae;
    private ai;
    private ak;
    private al;
    render(a: Description, b: any): void;
    private bn;
    private bw;
    provideRefValue(a: any, b: string, c: any): void;
    removeRefValue(a: any, b: string): void;
    clearRefValues(a: any): void;
    private bx;
    private bz;
    private b5;
    private bl;
    private bo;
    private bp;
    private s;
    private y;
    private ad;
    private ac;
    private a6;
    private a3;
    private a2;
    private a1;
    private a0;
    private az;
    private ay;
    private ax;
    b(a: string): DescriptionRef;
    private bc;
    private aw;
    private bb;
    private au;
    private ba;
    private be;
    private at;
    private as;
    private ar;
    private bd;
    private aq;
    private ap;
    private ao;
    private b3;
    br(a: string, b: any, c: boolean): void;
    removeRefValueCore(a: string, b: boolean): void;
    clearUserRefValues(): void;
    o(a: DescriptionRef): boolean;
    a8(a: DescriptionRef): any;
    n(a: string): boolean;
    c(a: string): DescriptionRef;
    private a9;
    private x;
    private ab;
    private w;
    private by;
    private aa;
    private bk;
    private an;
    private v;
    private bs;
    private z;
    private u;
    private j;
    private bg;
    private a5;
    private q;
    private av;
    private am;
    private t;
    private bh;
    private b4;
    private a7;
    private m;
    private l;
}
