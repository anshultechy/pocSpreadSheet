import { EventProxy } from "./EventProxy";
import { DomWrapper, DomRenderer, NormalizedEvent } from "./dom";
import { Point, Type } from "./type";
import { Rect } from "./Rect";
import { Key } from "./Key";
import { List$1 } from "./List$1";
/**
 * @hidden
 */
export declare abstract class BaseDOMEventProxy extends EventProxy {
    static $t: Type;
    protected bv: DomWrapper;
    d(): EventProxy;
    static readonly bp: boolean;
    protected bo: boolean;
    bc(a: DomWrapper): Rect;
    bj(e_: NormalizedEvent): boolean;
    protected bu: DomRenderer;
    protected cl(a: NormalizedEvent): void;
    private bi;
    static bl: boolean;
    static bm: boolean;
    private bg;
    protected ch(): void;
    protected static ck(source_: any): void;
    protected static ce(source_: any): void;
    protected cf(): void;
    protected ap(): void;
    static b3: number;
    static b0: number;
    protected b2(): number;
    protected b1(): number;
    static cj(e_: NormalizedEvent): void;
    static cv(a: DomWrapper): Rect;
    private bs;
    private bt;
    private bq;
    private br;
    private bw;
    protected cu: Point;
    protected ct: Point;
    protected bz: number;
    protected co(a: NormalizedEvent): void;
    protected cp(e_: NormalizedEvent): void;
    protected cd(e_: NormalizedEvent): void;
    protected cb(e_: NormalizedEvent): void;
    private bf;
    private bx;
    protected ci(): void;
    protected b4(): void;
    protected cg(): void;
    protected bk: boolean;
    private bh;
    protected bn: boolean;
    protected b9(a: NormalizedEvent): void;
    protected ca(a: NormalizedEvent): void;
    protected cm(a: NormalizedEvent): void;
    private be;
    protected b8(a: NormalizedEvent): void;
    protected cq(a: NormalizedEvent): void;
    protected cc(a: NormalizedEvent): void;
    protected b5(a: NormalizedEvent): void;
    protected b7(a: NormalizedEvent): void;
    protected cs(a: NormalizedEvent): Key;
    static cr(a: NormalizedEvent): Key;
    protected b6(a: NormalizedEvent, b: boolean): void;
    protected cn(a: NormalizedEvent): void;
    bb(): Point;
}
/**
 * @hidden
 */
export declare class DOMEventProxy extends BaseDOMEventProxy {
    static $t: Type;
    private static c5;
    private c6;
    private c7;
    private cx;
    c3: MSGesture;
    constructor(a: DomWrapper, b: DomRenderer, c: boolean);
    private cz;
    c8(a: any, b: string, c: List$1<() => void>): void;
    an(a: any, b: string): void;
    private dh;
    private dc;
    private dd;
    private de;
    private df;
    private dg;
    private db;
    private c9;
    private da;
    private du;
    private dk;
    private c4;
    private dv;
    private c1;
    private c2;
    private c0;
    private dq;
    private dm;
    private dr;
    dn(): void;
    private cw;
    private dt;
    private dj;
    private cy;
    private di;
    private dp;
    private ds;
    private dl;
    a9(a: any, b: string): void;
    ao(): void;
}
